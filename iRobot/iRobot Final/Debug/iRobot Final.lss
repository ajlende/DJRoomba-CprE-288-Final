
iRobot Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000003ca  00800100  000025aa  0000263e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005b  008004ca  008004ca  00002a08  2**0
                  ALLOC
  3 .stab         0000324c  00000000  00000000  00002a08  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000aa2  00000000  00000000  00005c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000066f6  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000308  00000000  00000000  00006725  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000045c7  00000000  00000000  00006a2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010ba  00000000  00000000  0000aff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002353  00000000  00000000  0000c0ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000818  00000000  00000000  0000e404  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c85  00000000  00000000  0000ec1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000027d8  00000000  00000000  0000f8a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000270  00000000  00000000  00012079  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c6 c0       	rjmp	.+396    	; 0x18e <__ctors_end>
       2:	00 00       	nop
       4:	e2 c0       	rjmp	.+452    	; 0x1ca <__bad_interrupt>
       6:	00 00       	nop
       8:	e0 c0       	rjmp	.+448    	; 0x1ca <__bad_interrupt>
       a:	00 00       	nop
       c:	de c0       	rjmp	.+444    	; 0x1ca <__bad_interrupt>
       e:	00 00       	nop
      10:	dc c0       	rjmp	.+440    	; 0x1ca <__bad_interrupt>
      12:	00 00       	nop
      14:	da c0       	rjmp	.+436    	; 0x1ca <__bad_interrupt>
      16:	00 00       	nop
      18:	d8 c0       	rjmp	.+432    	; 0x1ca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d6 c0       	rjmp	.+428    	; 0x1ca <__bad_interrupt>
      1e:	00 00       	nop
      20:	d4 c0       	rjmp	.+424    	; 0x1ca <__bad_interrupt>
      22:	00 00       	nop
      24:	f1 c4       	rjmp	.+2530   	; 0xa08 <__vector_9>
      26:	00 00       	nop
      28:	d0 c0       	rjmp	.+416    	; 0x1ca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	10 c5       	rjmp	.+2592   	; 0xa4e <__vector_11>
      2e:	00 00       	nop
      30:	cc c0       	rjmp	.+408    	; 0x1ca <__bad_interrupt>
      32:	00 00       	nop
      34:	ca c0       	rjmp	.+404    	; 0x1ca <__bad_interrupt>
      36:	00 00       	nop
      38:	c8 c0       	rjmp	.+400    	; 0x1ca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c6 c0       	rjmp	.+396    	; 0x1ca <__bad_interrupt>
      3e:	00 00       	nop
      40:	c4 c0       	rjmp	.+392    	; 0x1ca <__bad_interrupt>
      42:	00 00       	nop
      44:	c2 c0       	rjmp	.+388    	; 0x1ca <__bad_interrupt>
      46:	00 00       	nop
      48:	c0 c0       	rjmp	.+384    	; 0x1ca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	be c0       	rjmp	.+380    	; 0x1ca <__bad_interrupt>
      4e:	00 00       	nop
      50:	bc c0       	rjmp	.+376    	; 0x1ca <__bad_interrupt>
      52:	00 00       	nop
      54:	ba c0       	rjmp	.+372    	; 0x1ca <__bad_interrupt>
      56:	00 00       	nop
      58:	b8 c0       	rjmp	.+368    	; 0x1ca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b6 c0       	rjmp	.+364    	; 0x1ca <__bad_interrupt>
      5e:	00 00       	nop
      60:	b4 c0       	rjmp	.+360    	; 0x1ca <__bad_interrupt>
      62:	00 00       	nop
      64:	b2 c0       	rjmp	.+356    	; 0x1ca <__bad_interrupt>
      66:	00 00       	nop
      68:	b0 c0       	rjmp	.+352    	; 0x1ca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ae c0       	rjmp	.+348    	; 0x1ca <__bad_interrupt>
      6e:	00 00       	nop
      70:	ac c0       	rjmp	.+344    	; 0x1ca <__bad_interrupt>
      72:	00 00       	nop
      74:	aa c0       	rjmp	.+340    	; 0x1ca <__bad_interrupt>
      76:	00 00       	nop
      78:	a8 c0       	rjmp	.+336    	; 0x1ca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a6 c0       	rjmp	.+332    	; 0x1ca <__bad_interrupt>
      7e:	00 00       	nop
      80:	a4 c0       	rjmp	.+328    	; 0x1ca <__bad_interrupt>
      82:	00 00       	nop
      84:	a2 c0       	rjmp	.+324    	; 0x1ca <__bad_interrupt>
      86:	00 00       	nop
      88:	a0 c0       	rjmp	.+320    	; 0x1ca <__bad_interrupt>
	...

0000008c <__c.2006>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.2004>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	14 e0       	ldi	r17, 0x04	; 4
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	ea ea       	ldi	r30, 0xAA	; 170
     1a2:	f5 e2       	ldi	r31, 0x25	; 37
     1a4:	00 e0       	ldi	r16, 0x00	; 0
     1a6:	0b bf       	out	0x3b, r16	; 59
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <__do_copy_data+0x14>
     1aa:	07 90       	elpm	r0, Z+
     1ac:	0d 92       	st	X+, r0
     1ae:	aa 3c       	cpi	r26, 0xCA	; 202
     1b0:	b1 07       	cpc	r27, r17
     1b2:	d9 f7       	brne	.-10     	; 0x1aa <__do_copy_data+0x10>

000001b4 <__do_clear_bss>:
     1b4:	25 e0       	ldi	r18, 0x05	; 5
     1b6:	aa ec       	ldi	r26, 0xCA	; 202
     1b8:	b4 e0       	ldi	r27, 0x04	; 4
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <.do_clear_bss_start>

000001bc <.do_clear_bss_loop>:
     1bc:	1d 92       	st	X+, r1

000001be <.do_clear_bss_start>:
     1be:	a5 32       	cpi	r26, 0x25	; 37
     1c0:	b2 07       	cpc	r27, r18
     1c2:	e1 f7       	brne	.-8      	; 0x1bc <.do_clear_bss_loop>
     1c4:	03 d0       	rcall	.+6      	; 0x1cc <main>
     1c6:	0c 94 d3 12 	jmp	0x25a6	; 0x25a6 <_exit>

000001ca <__bad_interrupt>:
     1ca:	1a cf       	rjmp	.-460    	; 0x0 <__vectors>

000001cc <main>:
	float distance;
	float width;
}object_t;

int main(void)
{
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	cd b7       	in	r28, 0x3d	; 61
     1d2:	de b7       	in	r29, 0x3e	; 62
     1d4:	c7 56       	subi	r28, 0x67	; 103
     1d6:	d1 09       	sbc	r29, r1
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	f8 94       	cli
     1dc:	de bf       	out	0x3e, r29	; 62
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	cd bf       	out	0x3d, r28	; 61
	
	serial_init(); // Initialize the Serial Communications
     1e2:	2b d3       	rcall	.+1622   	; 0x83a <serial_init>
	
	ADC_init(); // Initialize the IR sensor
     1e4:	50 d3       	rcall	.+1696   	; 0x886 <ADC_init>
	
	ping_init(); // Initialize the Ping))) sensor
     1e6:	2e d4       	rcall	.+2140   	; 0xa44 <ping_init>
	
	lcd_init(); // Initialize the LCD
     1e8:	49 d1       	rcall	.+658    	; 0x47c <lcd_init>
	
	init_push_buttons(); // Initialize the buttons
     1ea:	25 d4       	rcall	.+2122   	; 0xa36 <init_push_buttons>
	
	timer3_init(); // Initialize the servo motor
     1ec:	aa d4       	rcall	.+2388   	; 0xb42 <timer3_init>
	
	song_init();
     1ee:	74 d3       	rcall	.+1768   	; 0x8d8 <song_init>
	
	oi_t *sensor_data = oi_alloc();
     1f0:	10 d2       	rcall	.+1056   	; 0x612 <oi_alloc>
     1f2:	a8 96       	adiw	r28, 0x28	; 40
     1f4:	9f af       	std	Y+63, r25	; 0x3f
     1f6:	8e af       	std	Y+62, r24	; 0x3e
     1f8:	a8 97       	sbiw	r28, 0x28	; 40
	oi_init(sensor_data); // should turn the iRobot Create's power LED yellow
     1fa:	f3 d2       	rcall	.+1510   	; 0x7e2 <oi_init>
	char serialInput = 0;
	int count = 0;
	
	char echoString[20];
	
	servo_turn(degrees);
     1fc:	89 e5       	ldi	r24, 0x59	; 89
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	81 d4       	rcall	.+2306   	; 0xb04 <servo_turn>
				}

				IRDistance = calcCm(raw/3);
				PingDistance = ping_read();
		
				sprintf(OutputString, "%d %.2f %.2f", degrees, IRDistance, PingDistance);
     202:	0f 2e       	mov	r0, r31
     204:	f9 e0       	ldi	r31, 0x09	; 9
     206:	8f 2e       	mov	r8, r31
     208:	f1 e0       	ldi	r31, 0x01	; 1
     20a:	9f 2e       	mov	r9, r31
     20c:	f0 2d       	mov	r31, r0
     20e:	aa 24       	eor	r10, r10
     210:	a3 94       	inc	r10
     212:	b1 2c       	mov	r11, r1
     214:	ac 0e       	add	r10, r28
     216:	bd 1e       	adc	r11, r29
	float distance;
	float width;
}object_t;

int main(void)
{
     218:	0f 2e       	mov	r0, r31
     21a:	f3 e0       	ldi	r31, 0x03	; 3
     21c:	6f 2e       	mov	r6, r31
     21e:	71 2c       	mov	r7, r1
     220:	f0 2d       	mov	r31, r0
     222:	51 2c       	mov	r5, r1
     224:	41 2c       	mov	r4, r1
				}

				IRDistance = calcCm(raw/3);
				PingDistance = ping_read();
		
				sprintf(OutputString, "%d %.2f %.2f", degrees, IRDistance, PingDistance);
     226:	3a 2c       	mov	r3, r10
     228:	2b 2c       	mov	r2, r11
	
	char OutputString[100];

	while(1) {
		
		serialInput = USART_Receive();
     22a:	17 d3       	rcall	.+1582   	; 0x85a <USART_Receive>
     22c:	a6 96       	adiw	r28, 0x26	; 38
     22e:	8f af       	std	Y+63, r24	; 0x3f
     230:	a6 97       	sbiw	r28, 0x26	; 38
		lprintf("%c", serialInput);
     232:	1f 92       	push	r1
     234:	8f 93       	push	r24
     236:	86 e0       	ldi	r24, 0x06	; 6
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	9f 93       	push	r25
     23c:	8f 93       	push	r24
     23e:	6b d1       	rcall	.+726    	; 0x516 <lprintf>
		
		//Big Scan
		if(serialInput == 'S') {
     240:	0f 90       	pop	r0
     242:	0f 90       	pop	r0
     244:	0f 90       	pop	r0
     246:	0f 90       	pop	r0
     248:	a6 96       	adiw	r28, 0x26	; 38
     24a:	8f ad       	ldd	r24, Y+63	; 0x3f
     24c:	a6 97       	sbiw	r28, 0x26	; 38
     24e:	83 35       	cpi	r24, 0x53	; 83
     250:	09 f0       	breq	.+2      	; 0x254 <main+0x88>
     252:	47 c0       	rjmp	.+142    	; 0x2e2 <main+0x116>
			
			degrees = 0;
			servo_turn(degrees);
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	55 d4       	rcall	.+2218   	; 0xb04 <servo_turn>
		lprintf("%c", serialInput);
		
		//Big Scan
		if(serialInput == 'S') {
			
			degrees = 0;
     25a:	c1 2c       	mov	r12, r1
     25c:	d1 2c       	mov	r13, r1
     25e:	39 c0       	rjmp	.+114    	; 0x2d2 <main+0x106>
		
				// Average IR distances for a more stable measurement
				raw = 0;
				for(i = 0;i<3;i++)
				{
					raw += ADC_read(2);
     260:	82 e0       	ldi	r24, 0x02	; 2
     262:	19 d3       	rcall	.+1586   	; 0x896 <ADC_read>
     264:	08 0f       	add	r16, r24
     266:	19 1f       	adc	r17, r25
					wait_ms(20);
     268:	84 e1       	ldi	r24, 0x14	; 20
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	b7 d3       	rcall	.+1902   	; 0x9dc <wait_ms>
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	e9 1a       	sub	r14, r25
     272:	f1 08       	sbc	r15, r1
			
			while(degrees <= 180) {
		
				// Average IR distances for a more stable measurement
				raw = 0;
				for(i = 0;i<3;i++)
     274:	a9 f7       	brne	.-22     	; 0x260 <main+0x94>
				{
					raw += ADC_read(2);
					wait_ms(20);
				}

				IRDistance = calcCm(raw/3);
     276:	98 01       	movw	r18, r16
     278:	ab ea       	ldi	r26, 0xAB	; 171
     27a:	ba ea       	ldi	r27, 0xAA	; 170
     27c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <__umulhisi3>
     280:	96 95       	lsr	r25
     282:	87 95       	ror	r24
     284:	14 d3       	rcall	.+1576   	; 0x8ae <calcCm>
     286:	16 2f       	mov	r17, r22
     288:	07 2f       	mov	r16, r23
     28a:	f8 2e       	mov	r15, r24
     28c:	e9 2e       	mov	r14, r25
				PingDistance = ping_read();
     28e:	1b d4       	rcall	.+2102   	; 0xac6 <ping_read>
		
				sprintf(OutputString, "%d %.2f %.2f", degrees, IRDistance, PingDistance);
     290:	9f 93       	push	r25
     292:	8f 93       	push	r24
     294:	7f 93       	push	r23
     296:	6f 93       	push	r22
     298:	ef 92       	push	r14
     29a:	ff 92       	push	r15
     29c:	0f 93       	push	r16
     29e:	1f 93       	push	r17
     2a0:	df 92       	push	r13
     2a2:	cf 92       	push	r12
     2a4:	9f 92       	push	r9
     2a6:	8f 92       	push	r8
     2a8:	bf 92       	push	r11
     2aa:	af 92       	push	r10
     2ac:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
				USART_SendString(OutputString);
     2b0:	83 2d       	mov	r24, r3
     2b2:	92 2d       	mov	r25, r2
     2b4:	d8 d2       	rcall	.+1456   	; 0x866 <USART_SendString>
		
				degrees += 2;
     2b6:	22 e0       	ldi	r18, 0x02	; 2
     2b8:	c2 0e       	add	r12, r18
     2ba:	d1 1c       	adc	r13, r1
		
				servo_turn(degrees);
     2bc:	c6 01       	movw	r24, r12
     2be:	22 d4       	rcall	.+2116   	; 0xb04 <servo_turn>
		if(serialInput == 'S') {
			
			degrees = 0;
			servo_turn(degrees);
			
			while(degrees <= 180) {
     2c0:	0f b6       	in	r0, 0x3f	; 63
     2c2:	f8 94       	cli
     2c4:	de bf       	out	0x3e, r29	; 62
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	cd bf       	out	0x3d, r28	; 61
     2ca:	96 eb       	ldi	r25, 0xB6	; 182
     2cc:	c9 16       	cp	r12, r25
     2ce:	d1 04       	cpc	r13, r1
     2d0:	21 f0       	breq	.+8      	; 0x2da <main+0x10e>
	float distance;
	float width;
}object_t;

int main(void)
{
     2d2:	73 01       	movw	r14, r6
     2d4:	05 2d       	mov	r16, r5
     2d6:	14 2d       	mov	r17, r4
     2d8:	c3 cf       	rjmp	.-122    	; 0x260 <main+0x94>
				servo_turn(degrees);

			}
			
			degrees = 90;
			servo_turn(degrees);
     2da:	8a e5       	ldi	r24, 0x5A	; 90
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	12 d4       	rcall	.+2084   	; 0xb04 <servo_turn>
     2e0:	6b c0       	rjmp	.+214    	; 0x3b8 <main+0x1ec>
		}
		
		//Small Scan
		if(serialInput == 's') {
     2e2:	a6 96       	adiw	r28, 0x26	; 38
     2e4:	2f ad       	ldd	r18, Y+63	; 0x3f
     2e6:	a6 97       	sbiw	r28, 0x26	; 38
     2e8:	23 37       	cpi	r18, 0x73	; 115
     2ea:	09 f0       	breq	.+2      	; 0x2ee <main+0x122>
     2ec:	49 c0       	rjmp	.+146    	; 0x380 <main+0x1b4>
			
			degrees = 45;
			servo_turn(degrees);
     2ee:	8d e2       	ldi	r24, 0x2D	; 45
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	08 d4       	rcall	.+2064   	; 0xb04 <servo_turn>
		}
		
		//Small Scan
		if(serialInput == 's') {
			
			degrees = 45;
     2f4:	0f 2e       	mov	r0, r31
     2f6:	fd e2       	ldi	r31, 0x2D	; 45
     2f8:	cf 2e       	mov	r12, r31
     2fa:	d1 2c       	mov	r13, r1
     2fc:	f0 2d       	mov	r31, r0
     2fe:	38 c0       	rjmp	.+112    	; 0x370 <main+0x1a4>
				
				// Average IR distances for a more stable measurement
				raw = 0;
				for(i = 0;i<3;i++)
				{
					raw += ADC_read(2);
     300:	82 e0       	ldi	r24, 0x02	; 2
     302:	c9 d2       	rcall	.+1426   	; 0x896 <ADC_read>
     304:	e8 0e       	add	r14, r24
     306:	f9 1e       	adc	r15, r25
					wait_ms(20);
     308:	84 e1       	ldi	r24, 0x14	; 20
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	67 d3       	rcall	.+1742   	; 0x9dc <wait_ms>
     30e:	01 50       	subi	r16, 0x01	; 1
     310:	11 09       	sbc	r17, r1
			
			while(degrees <= 135) {
				
				// Average IR distances for a more stable measurement
				raw = 0;
				for(i = 0;i<3;i++)
     312:	b1 f7       	brne	.-20     	; 0x300 <main+0x134>
				{
					raw += ADC_read(2);
					wait_ms(20);
				}

				IRDistance = calcCm(raw/3);
     314:	97 01       	movw	r18, r14
     316:	ab ea       	ldi	r26, 0xAB	; 171
     318:	ba ea       	ldi	r27, 0xAA	; 170
     31a:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <__umulhisi3>
     31e:	96 95       	lsr	r25
     320:	87 95       	ror	r24
     322:	c5 d2       	rcall	.+1418   	; 0x8ae <calcCm>
     324:	16 2f       	mov	r17, r22
     326:	07 2f       	mov	r16, r23
     328:	f8 2e       	mov	r15, r24
     32a:	e9 2e       	mov	r14, r25
				PingDistance = ping_read();
     32c:	cc d3       	rcall	.+1944   	; 0xac6 <ping_read>
				
				sprintf(OutputString, "%d %.2f %.2f", degrees, IRDistance, PingDistance);
     32e:	9f 93       	push	r25
     330:	8f 93       	push	r24
     332:	7f 93       	push	r23
     334:	6f 93       	push	r22
     336:	ef 92       	push	r14
     338:	ff 92       	push	r15
     33a:	0f 93       	push	r16
     33c:	1f 93       	push	r17
     33e:	df 92       	push	r13
     340:	cf 92       	push	r12
     342:	9f 92       	push	r9
     344:	8f 92       	push	r8
     346:	bf 92       	push	r11
     348:	af 92       	push	r10
     34a:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
				USART_SendString(OutputString);
     34e:	83 2d       	mov	r24, r3
     350:	92 2d       	mov	r25, r2
     352:	89 d2       	rcall	.+1298   	; 0x866 <USART_SendString>
				
				degrees += 2;
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	c8 0e       	add	r12, r24
     358:	d1 1c       	adc	r13, r1
				
				servo_turn(degrees);
     35a:	c6 01       	movw	r24, r12
     35c:	d3 d3       	rcall	.+1958   	; 0xb04 <servo_turn>
		if(serialInput == 's') {
			
			degrees = 45;
			servo_turn(degrees);
			
			while(degrees <= 135) {
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
     368:	99 e8       	ldi	r25, 0x89	; 137
     36a:	c9 16       	cp	r12, r25
     36c:	d1 04       	cpc	r13, r1
     36e:	21 f0       	breq	.+8      	; 0x378 <main+0x1ac>
		lprintf("%c", serialInput);
		
		//Big Scan
		if(serialInput == 'S') {
			
			degrees = 0;
     370:	83 01       	movw	r16, r6
     372:	e5 2c       	mov	r14, r5
     374:	f4 2c       	mov	r15, r4
     376:	c4 cf       	rjmp	.-120    	; 0x300 <main+0x134>
				servo_turn(degrees);

			}
			
			degrees = 90;
			servo_turn(degrees);
     378:	8a e5       	ldi	r24, 0x5A	; 90
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	c3 d3       	rcall	.+1926   	; 0xb04 <servo_turn>
     37e:	38 c0       	rjmp	.+112    	; 0x3f0 <main+0x224>
		}
		
		
		if(serialInput == 'f')
     380:	a6 96       	adiw	r28, 0x26	; 38
     382:	2f ad       	ldd	r18, Y+63	; 0x3f
     384:	a6 97       	sbiw	r28, 0x26	; 38
     386:	26 36       	cpi	r18, 0x66	; 102
     388:	b9 f4       	brne	.+46     	; 0x3b8 <main+0x1ec>
		{

			char nextletter = 0;
			while(nextletter == 0) {
				nextletter = USART_Receive();
     38a:	67 d2       	rcall	.+1230   	; 0x85a <USART_Receive>
		
		if(serialInput == 'f')
		{

			char nextletter = 0;
			while(nextletter == 0) {
     38c:	88 23       	and	r24, r24
     38e:	e9 f3       	breq	.-6      	; 0x38a <main+0x1be>
				nextletter = USART_Receive();
			}
			int actualnumber = (((int) nextletter)-48) * 10;
     390:	28 2f       	mov	r18, r24
     392:	30 e0       	ldi	r19, 0x00	; 0
     394:	22 0f       	add	r18, r18
     396:	33 1f       	adc	r19, r19
     398:	b9 01       	movw	r22, r18
     39a:	66 0f       	add	r22, r22
     39c:	77 1f       	adc	r23, r23
     39e:	66 0f       	add	r22, r22
     3a0:	77 1f       	adc	r23, r23
     3a2:	26 0f       	add	r18, r22
     3a4:	37 1f       	adc	r19, r23
     3a6:	b9 01       	movw	r22, r18
     3a8:	60 5e       	subi	r22, 0xE0	; 224
     3aa:	71 40       	sbci	r23, 0x01	; 1
			//lprintf("%c", nextletter);
			//wait_ms(500);
			move_forward(sensor_data, actualnumber);
     3ac:	a8 96       	adiw	r28, 0x28	; 40
     3ae:	8e ad       	ldd	r24, Y+62	; 0x3e
     3b0:	9f ad       	ldd	r25, Y+63	; 0x3f
     3b2:	a8 97       	sbiw	r28, 0x28	; 40
     3b4:	44 d4       	rcall	.+2184   	; 0xc3e <move_forward>
     3b6:	29 c0       	rjmp	.+82     	; 0x40a <main+0x23e>
		}
		
		if(serialInput == 'r')
     3b8:	a6 96       	adiw	r28, 0x26	; 38
     3ba:	8f ad       	ldd	r24, Y+63	; 0x3f
     3bc:	a6 97       	sbiw	r28, 0x26	; 38
     3be:	82 37       	cpi	r24, 0x72	; 114
     3c0:	b9 f4       	brne	.+46     	; 0x3f0 <main+0x224>
		{
			//int tempDegrees = atoi(numRecieved);
						
			char nextletter = 0;
			while(nextletter == 0)
				nextletter = USART_Receive();
     3c2:	4b d2       	rcall	.+1174   	; 0x85a <USART_Receive>
		if(serialInput == 'r')
		{
			//int tempDegrees = atoi(numRecieved);
						
			char nextletter = 0;
			while(nextletter == 0)
     3c4:	88 23       	and	r24, r24
     3c6:	e9 f3       	breq	.-6      	; 0x3c2 <main+0x1f6>
				nextletter = USART_Receive();
			int actualnumber = (((int) nextletter)-48) * 10;
     3c8:	28 2f       	mov	r18, r24
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	22 0f       	add	r18, r18
     3ce:	33 1f       	adc	r19, r19
     3d0:	b9 01       	movw	r22, r18
     3d2:	66 0f       	add	r22, r22
     3d4:	77 1f       	adc	r23, r23
     3d6:	66 0f       	add	r22, r22
     3d8:	77 1f       	adc	r23, r23
     3da:	26 0f       	add	r18, r22
     3dc:	37 1f       	adc	r19, r23
     3de:	b9 01       	movw	r22, r18
     3e0:	60 5e       	subi	r22, 0xE0	; 224
     3e2:	71 40       	sbci	r23, 0x01	; 1
			//lprintf("actual %d\n", actualnumber);
			turn_clockwise(sensor_data, actualnumber);
     3e4:	a8 96       	adiw	r28, 0x28	; 40
     3e6:	8e ad       	ldd	r24, Y+62	; 0x3e
     3e8:	9f ad       	ldd	r25, Y+63	; 0x3f
     3ea:	a8 97       	sbiw	r28, 0x28	; 40
     3ec:	b1 d6       	rcall	.+3426   	; 0x1150 <turn_clockwise>
     3ee:	18 c0       	rjmp	.+48     	; 0x420 <main+0x254>
			USART_Flush();
			lprintf("Flushed!\n");
		}
		*/
		
		if(serialInput == 'b')
     3f0:	a6 96       	adiw	r28, 0x26	; 38
     3f2:	9f ad       	ldd	r25, Y+63	; 0x3f
     3f4:	a6 97       	sbiw	r28, 0x26	; 38
     3f6:	92 36       	cpi	r25, 0x62	; 98
     3f8:	41 f4       	brne	.+16     	; 0x40a <main+0x23e>
		{
			move_backward(sensor_data, 5);
     3fa:	65 e0       	ldi	r22, 0x05	; 5
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	a8 96       	adiw	r28, 0x28	; 40
     400:	8e ad       	ldd	r24, Y+62	; 0x3e
     402:	9f ad       	ldd	r25, Y+63	; 0x3f
     404:	a8 97       	sbiw	r28, 0x28	; 40
     406:	b1 d3       	rcall	.+1890   	; 0xb6a <move_backward>
     408:	10 cf       	rjmp	.-480    	; 0x22a <main+0x5e>
		}
		
			
		if(serialInput == 'd')
     40a:	a6 96       	adiw	r28, 0x26	; 38
     40c:	2f ad       	ldd	r18, Y+63	; 0x3f
     40e:	a6 97       	sbiw	r28, 0x26	; 38
     410:	24 36       	cpi	r18, 0x64	; 100
     412:	31 f4       	brne	.+12     	; 0x420 <main+0x254>
		{
			reportData(sensor_data);
     414:	a8 96       	adiw	r28, 0x28	; 40
     416:	8e ad       	ldd	r24, Y+62	; 0x3e
     418:	9f ad       	ldd	r25, Y+63	; 0x3f
     41a:	a8 97       	sbiw	r28, 0x28	; 40
     41c:	7f d7       	rcall	.+3838   	; 0x131c <reportData>
     41e:	05 cf       	rjmp	.-502    	; 0x22a <main+0x5e>
		}
		
		
		if(serialInput == 'Q')
     420:	a6 96       	adiw	r28, 0x26	; 38
     422:	8f ad       	ldd	r24, Y+63	; 0x3f
     424:	a6 97       	sbiw	r28, 0x26	; 38
     426:	81 35       	cpi	r24, 0x51	; 81
     428:	09 f0       	breq	.+2      	; 0x42c <main+0x260>
     42a:	ff ce       	rjmp	.-514    	; 0x22a <main+0x5e>
		{
			//Play song cuz we're done
			oi_byte_tx(141);
     42c:	8d e8       	ldi	r24, 0x8D	; 141
     42e:	f7 d0       	rcall	.+494    	; 0x61e <oi_byte_tx>
			oi_byte_tx(1);
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	f5 d0       	rcall	.+490    	; 0x61e <oi_byte_tx>
     434:	fa ce       	rjmp	.-524    	; 0x22a <main+0x5e>

00000436 <lcd_toggle_clear>:
	int i;

	for (i=0;i<size;i++) {		
		lcd_putc(string[i]);
	}
}
     436:	de 9a       	sbi	0x1b, 6	; 27
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	d0 d2       	rcall	.+1440   	; 0x9dc <wait_ms>
     43c:	de 98       	cbi	0x1b, 6	; 27
     43e:	8b b3       	in	r24, 0x1b	; 27
     440:	80 7f       	andi	r24, 0xF0	; 240
     442:	8b bb       	out	0x1b, r24	; 27
     444:	08 95       	ret

00000446 <lcd_command>:
     446:	cf 93       	push	r28
     448:	c8 2f       	mov	r28, r24
     44a:	dc 98       	cbi	0x1b, 4	; 27
     44c:	8b b3       	in	r24, 0x1b	; 27
     44e:	9c 2f       	mov	r25, r28
     450:	92 95       	swap	r25
     452:	9f 70       	andi	r25, 0x0F	; 15
     454:	89 2b       	or	r24, r25
     456:	8b bb       	out	0x1b, r24	; 27
     458:	82 e0       	ldi	r24, 0x02	; 2
     45a:	ed df       	rcall	.-38     	; 0x436 <lcd_toggle_clear>
     45c:	8b b3       	in	r24, 0x1b	; 27
     45e:	cf 70       	andi	r28, 0x0F	; 15
     460:	c8 2b       	or	r28, r24
     462:	cb bb       	out	0x1b, r28	; 27
     464:	82 e0       	ldi	r24, 0x02	; 2
     466:	e7 df       	rcall	.-50     	; 0x436 <lcd_toggle_clear>
     468:	dc 9a       	sbi	0x1b, 4	; 27
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <lcd_clear>:
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	ea df       	rcall	.-44     	; 0x446 <lcd_command>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	b2 c2       	rjmp	.+1380   	; 0x9dc <wait_ms>

00000478 <lcd_home_line1>:
     478:	82 e0       	ldi	r24, 0x02	; 2
     47a:	e5 cf       	rjmp	.-54     	; 0x446 <lcd_command>

0000047c <lcd_init>:
     47c:	8f ef       	ldi	r24, 0xFF	; 255
     47e:	8a bb       	out	0x1a, r24	; 26
     480:	83 e0       	ldi	r24, 0x03	; 3
     482:	8b bb       	out	0x1b, r24	; 27
     484:	de 9a       	sbi	0x1b, 6	; 27
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	a8 d2       	rcall	.+1360   	; 0x9dc <wait_ms>
     48c:	de 98       	cbi	0x1b, 6	; 27
     48e:	85 e0       	ldi	r24, 0x05	; 5
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	a4 d2       	rcall	.+1352   	; 0x9dc <wait_ms>
     494:	de 9a       	sbi	0x1b, 6	; 27
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	a0 d2       	rcall	.+1344   	; 0x9dc <wait_ms>
     49c:	de 98       	cbi	0x1b, 6	; 27
     49e:	de 9a       	sbi	0x1b, 6	; 27
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	9b d2       	rcall	.+1334   	; 0x9dc <wait_ms>
     4a6:	de 98       	cbi	0x1b, 6	; 27
     4a8:	82 e0       	ldi	r24, 0x02	; 2
     4aa:	8b bb       	out	0x1b, r24	; 27
     4ac:	81 e0       	ldi	r24, 0x01	; 1
     4ae:	c3 df       	rcall	.-122    	; 0x436 <lcd_toggle_clear>
     4b0:	8b b3       	in	r24, 0x1b	; 27
     4b2:	8b bb       	out	0x1b, r24	; 27
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	bf df       	rcall	.-130    	; 0x436 <lcd_toggle_clear>
     4b8:	8b b3       	in	r24, 0x1b	; 27
     4ba:	8e 60       	ori	r24, 0x0E	; 14
     4bc:	8b bb       	out	0x1b, r24	; 27
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	ba df       	rcall	.-140    	; 0x436 <lcd_toggle_clear>
     4c2:	8b b3       	in	r24, 0x1b	; 27
     4c4:	8b bb       	out	0x1b, r24	; 27
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	b6 df       	rcall	.-148    	; 0x436 <lcd_toggle_clear>
     4ca:	8b b3       	in	r24, 0x1b	; 27
     4cc:	86 60       	ori	r24, 0x06	; 6
     4ce:	8b bb       	out	0x1b, r24	; 27
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	b1 df       	rcall	.-158    	; 0x436 <lcd_toggle_clear>
     4d4:	8b b3       	in	r24, 0x1b	; 27
     4d6:	8b bb       	out	0x1b, r24	; 27
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	ad df       	rcall	.-166    	; 0x436 <lcd_toggle_clear>
     4dc:	d8 9a       	sbi	0x1b, 0	; 27
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	aa df       	rcall	.-172    	; 0x436 <lcd_toggle_clear>
     4e2:	dc 9a       	sbi	0x1b, 4	; 27
     4e4:	c9 cf       	rjmp	.-110    	; 0x478 <lcd_home_line1>

000004e6 <lcd_home_line2>:
     4e6:	80 ec       	ldi	r24, 0xC0	; 192
     4e8:	ae cf       	rjmp	.-164    	; 0x446 <lcd_command>

000004ea <lcd_home_line3>:
     4ea:	84 e9       	ldi	r24, 0x94	; 148
     4ec:	ac cf       	rjmp	.-168    	; 0x446 <lcd_command>

000004ee <lcd_home_line4>:
     4ee:	84 ed       	ldi	r24, 0xD4	; 212
     4f0:	aa cf       	rjmp	.-172    	; 0x446 <lcd_command>

000004f2 <lcd_putc>:
     4f2:	cf 93       	push	r28
     4f4:	c8 2f       	mov	r28, r24
     4f6:	8b b3       	in	r24, 0x1b	; 27
     4f8:	9c 2f       	mov	r25, r28
     4fa:	92 95       	swap	r25
     4fc:	9f 70       	andi	r25, 0x0F	; 15
     4fe:	89 2b       	or	r24, r25
     500:	8b bb       	out	0x1b, r24	; 27
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	98 df       	rcall	.-208    	; 0x436 <lcd_toggle_clear>
     506:	8b b3       	in	r24, 0x1b	; 27
     508:	cf 70       	andi	r28, 0x0F	; 15
     50a:	c8 2b       	or	r28, r24
     50c:	cb bb       	out	0x1b, r28	; 27
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	92 df       	rcall	.-220    	; 0x436 <lcd_toggle_clear>
     512:	cf 91       	pop	r28
     514:	08 95       	ret

00000516 <lprintf>:
 *
 * Code from this site was also used: http://www.ozzu.com/cpp-tutorials/tutorial-writing-custom-printf-wrapper-function-t89166.html
 * @author Kerrick Staley & Chad Nelson
 * @date 05/16/2012
 */
void lprintf(const char *format, ...) {
     516:	cf 92       	push	r12
     518:	df 92       	push	r13
     51a:	ef 92       	push	r14
     51c:	ff 92       	push	r15
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	cf 93       	push	r28
     524:	df 93       	push	r29
     526:	cd b7       	in	r28, 0x3d	; 61
     528:	de b7       	in	r29, 0x3e	; 62
     52a:	c1 55       	subi	r28, 0x51	; 81
     52c:	d1 09       	sbc	r29, r1
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	fe 01       	movw	r30, r28
     53a:	e4 5a       	subi	r30, 0xA4	; 164
     53c:	ff 4f       	sbci	r31, 0xFF	; 255
     53e:	41 91       	ld	r20, Z+
     540:	51 91       	ld	r21, Z+
	static char lastbuffer[LCD_TOTAL_CHARS + 1];

	char buffer[LCD_TOTAL_CHARS + 1];
	va_list arglist;
	va_start(arglist, format);
	vsnprintf(buffer, LCD_TOTAL_CHARS + 1, format, arglist);
     542:	2e 2f       	mov	r18, r30
     544:	3f 2f       	mov	r19, r31
     546:	61 e5       	ldi	r22, 0x51	; 81
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	ce 01       	movw	r24, r28
     54c:	01 96       	adiw	r24, 0x01	; 1
     54e:	0e 94 3d 12 	call	0x247a	; 0x247a <vsnprintf>
	
	if (!strcmp(lastbuffer, buffer))
     552:	be 01       	movw	r22, r28
     554:	6f 5f       	subi	r22, 0xFF	; 255
     556:	7f 4f       	sbci	r23, 0xFF	; 255
     558:	8a ec       	ldi	r24, 0xCA	; 202
     55a:	94 e0       	ldi	r25, 0x04	; 4
     55c:	0e 94 c8 11 	call	0x2390	; 0x2390 <strcmp>
     560:	28 2f       	mov	r18, r24
     562:	39 2f       	mov	r19, r25
     564:	23 2b       	or	r18, r19
     566:	09 f4       	brne	.+2      	; 0x56a <lprintf+0x54>
     568:	44 c0       	rjmp	.+136    	; 0x5f2 <lprintf+0xdc>
		return;
	
	strcpy(lastbuffer, buffer);
     56a:	be 01       	movw	r22, r28
     56c:	6f 5f       	subi	r22, 0xFF	; 255
     56e:	7f 4f       	sbci	r23, 0xFF	; 255
     570:	8a ec       	ldi	r24, 0xCA	; 202
     572:	94 e0       	ldi	r25, 0x04	; 4
     574:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <strcpy>
	lcd_clear();
     578:	7a df       	rcall	.-268    	; 0x46e <lcd_clear>
     57a:	cc 24       	eor	r12, r12
     57c:	c3 94       	inc	r12
     57e:	d1 2c       	mov	r13, r1
     580:	cc 0e       	add	r12, r28
     582:	dd 1e       	adc	r13, r29
	char *str = buffer;
	int charnum = 0;
     584:	00 e0       	ldi	r16, 0x00	; 0
     586:	10 e0       	ldi	r17, 0x00	; 0
	while (*str && charnum < LCD_TOTAL_CHARS) {
		if (*str == '\n') {
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
     588:	0f 2e       	mov	r0, r31
     58a:	f4 e1       	ldi	r31, 0x14	; 20
     58c:	ef 2e       	mov	r14, r31
     58e:	f1 2c       	mov	r15, r1
     590:	f0 2d       	mov	r31, r0
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
     592:	27 c0       	rjmp	.+78     	; 0x5e2 <lprintf+0xcc>
		if (*str == '\n') {
     594:	8a 30       	cpi	r24, 0x0A	; 10
     596:	51 f4       	brne	.+20     	; 0x5ac <lprintf+0x96>
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
     598:	c8 01       	movw	r24, r16
     59a:	b7 01       	movw	r22, r14
     59c:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__divmodhi4>
     5a0:	97 01       	movw	r18, r14
     5a2:	28 1b       	sub	r18, r24
     5a4:	39 0b       	sbc	r19, r25
     5a6:	02 0f       	add	r16, r18
     5a8:	13 1f       	adc	r17, r19
     5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <lprintf+0x9c>
		} else {
			lcd_putc(*str);
     5ac:	a2 df       	rcall	.-188    	; 0x4f2 <lcd_putc>
			charnum++;
     5ae:	0f 5f       	subi	r16, 0xFF	; 255
     5b0:	1f 4f       	sbci	r17, 0xFF	; 255
		 * 0x54...0x68 : line 4
		 * 
		 * The cursor position must be reset at the end of every line, otherwise, after writing line 1, it writes line 3 and then nothingness
		 */
		
		if (charnum % LCD_WIDTH == 0) { 
     5b2:	c8 01       	movw	r24, r16
     5b4:	b7 01       	movw	r22, r14
     5b6:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__divmodhi4>
     5ba:	89 2b       	or	r24, r25
     5bc:	91 f4       	brne	.+36     	; 0x5e2 <lprintf+0xcc>
			switch (charnum / LCD_WIDTH) {
     5be:	c8 01       	movw	r24, r16
     5c0:	b7 01       	movw	r22, r14
     5c2:	0e 94 55 0f 	call	0x1eaa	; 0x1eaa <__divmodhi4>
     5c6:	62 30       	cpi	r22, 0x02	; 2
     5c8:	71 05       	cpc	r23, r1
     5ca:	41 f0       	breq	.+16     	; 0x5dc <lprintf+0xc6>
     5cc:	63 30       	cpi	r22, 0x03	; 3
     5ce:	71 05       	cpc	r23, r1
     5d0:	39 f0       	breq	.+14     	; 0x5e0 <lprintf+0xca>
     5d2:	61 30       	cpi	r22, 0x01	; 1
     5d4:	71 05       	cpc	r23, r1
     5d6:	29 f4       	brne	.+10     	; 0x5e2 <lprintf+0xcc>
			case 1:
				lcd_home_line2();
     5d8:	86 df       	rcall	.-244    	; 0x4e6 <lcd_home_line2>
				break;
     5da:	03 c0       	rjmp	.+6      	; 0x5e2 <lprintf+0xcc>
			case 2:
				lcd_home_line3();
     5dc:	86 df       	rcall	.-244    	; 0x4ea <lcd_home_line3>
				break;
     5de:	01 c0       	rjmp	.+2      	; 0x5e2 <lprintf+0xcc>
			case 3:
				lcd_home_line4();
     5e0:	86 df       	rcall	.-244    	; 0x4ee <lcd_home_line4>
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
     5e2:	f6 01       	movw	r30, r12
     5e4:	81 91       	ld	r24, Z+
     5e6:	6f 01       	movw	r12, r30
     5e8:	88 23       	and	r24, r24
     5ea:	19 f0       	breq	.+6      	; 0x5f2 <lprintf+0xdc>
     5ec:	00 35       	cpi	r16, 0x50	; 80
     5ee:	11 05       	cpc	r17, r1
     5f0:	8c f2       	brlt	.-94     	; 0x594 <lprintf+0x7e>
				lcd_home_line4();
			}
		}
	}
	va_end(arglist);
}
     5f2:	cf 5a       	subi	r28, 0xAF	; 175
     5f4:	df 4f       	sbci	r29, 0xFF	; 255
     5f6:	0f b6       	in	r0, 0x3f	; 63
     5f8:	f8 94       	cli
     5fa:	de bf       	out	0x3e, r29	; 62
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	cd bf       	out	0x3d, r28	; 61
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	1f 91       	pop	r17
     606:	0f 91       	pop	r16
     608:	ff 90       	pop	r15
     60a:	ef 90       	pop	r14
     60c:	df 90       	pop	r13
     60e:	cf 90       	pop	r12
     610:	08 95       	ret

00000612 <oi_alloc>:
	oi_byte_tx(num_notes);
	for (i=0;i<num_notes;i++) {
		oi_byte_tx(notes[i]);
		oi_byte_tx(duration[i]);
	}
}
     612:	64 e3       	ldi	r22, 0x34	; 52
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0c 94 88 0f 	jmp	0x1f10	; 0x1f10 <calloc>

0000061e <oi_byte_tx>:
     61e:	eb e9       	ldi	r30, 0x9B	; 155
     620:	f0 e0       	ldi	r31, 0x00	; 0
     622:	90 81       	ld	r25, Z
     624:	95 ff       	sbrs	r25, 5
     626:	fd cf       	rjmp	.-6      	; 0x622 <oi_byte_tx+0x4>
     628:	80 93 9c 00 	sts	0x009C, r24
     62c:	08 95       	ret

0000062e <oi_set_wheels>:
}



/// Drive wheels directly; speeds are in mm / sec
void oi_set_wheels(int16_t right_wheel, int16_t left_wheel) {
     62e:	0f 93       	push	r16
     630:	1f 93       	push	r17
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	18 2f       	mov	r17, r24
     638:	09 2f       	mov	r16, r25
     63a:	c6 2f       	mov	r28, r22
     63c:	d7 2f       	mov	r29, r23
	oi_byte_tx(OI_OPCODE_DRIVE_WHEELS);
     63e:	81 e9       	ldi	r24, 0x91	; 145
     640:	ee df       	rcall	.-36     	; 0x61e <oi_byte_tx>
	oi_byte_tx(right_wheel>>8);
     642:	80 2f       	mov	r24, r16
     644:	ec df       	rcall	.-40     	; 0x61e <oi_byte_tx>
	oi_byte_tx(right_wheel & 0xff);
     646:	81 2f       	mov	r24, r17
     648:	ea df       	rcall	.-44     	; 0x61e <oi_byte_tx>
	oi_byte_tx(left_wheel>>8);
     64a:	8d 2f       	mov	r24, r29
     64c:	e8 df       	rcall	.-48     	; 0x61e <oi_byte_tx>
	oi_byte_tx(left_wheel& 0xff);
     64e:	8c 2f       	mov	r24, r28
     650:	e6 df       	rcall	.-52     	; 0x61e <oi_byte_tx>
}
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	1f 91       	pop	r17
     658:	0f 91       	pop	r16
     65a:	08 95       	ret

0000065c <oi_set_leds>:
* @play_led        uint8_t either 0 (off) or 1 (on)
* @advance_led     uint8_t either 0 (off) or 1 (on)
* @power_color     uint8_t the color of the power LED; 0 = green, 255 = red
* @power_intensity uint8_t the intensity of the power LED; 0 = off, 255 = full intensity
*/
void oi_set_leds(uint8_t play_led, uint8_t advance_led, uint8_t power_color, uint8_t power_intensity) {
     65c:	0f 93       	push	r16
     65e:	1f 93       	push	r17
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	08 2f       	mov	r16, r24
     666:	16 2f       	mov	r17, r22
     668:	d4 2f       	mov	r29, r20
     66a:	c2 2f       	mov	r28, r18
	// LED Opcode
	oi_byte_tx(OI_OPCODE_LEDS);
     66c:	8b e8       	ldi	r24, 0x8B	; 139
     66e:	d7 df       	rcall	.-82     	; 0x61e <oi_byte_tx>

	// Set the Play and Advance LEDs
	oi_byte_tx(advance_led << 3 && play_led << 2);
     670:	11 23       	and	r17, r17
     672:	41 f0       	breq	.+16     	; 0x684 <oi_set_leds+0x28>
     674:	61 e0       	ldi	r22, 0x01	; 1
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	01 11       	cpse	r16, r1
     67a:	02 c0       	rjmp	.+4      	; 0x680 <oi_set_leds+0x24>
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	70 e0       	ldi	r23, 0x00	; 0
     680:	cb 01       	movw	r24, r22
     682:	02 c0       	rjmp	.+4      	; 0x688 <oi_set_leds+0x2c>
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	ca df       	rcall	.-108    	; 0x61e <oi_byte_tx>

	// Set the power led color
	oi_byte_tx(power_color);
     68a:	8d 2f       	mov	r24, r29
     68c:	c8 df       	rcall	.-112    	; 0x61e <oi_byte_tx>

	// Set the power led intensity
	oi_byte_tx(power_intensity);
     68e:	8c 2f       	mov	r24, r28
     690:	c6 df       	rcall	.-116    	; 0x61e <oi_byte_tx>
}
     692:	df 91       	pop	r29
     694:	cf 91       	pop	r28
     696:	1f 91       	pop	r17
     698:	0f 91       	pop	r16
     69a:	08 95       	ret

0000069c <oi_byte_rx>:


// Receive a byte of data from the Create serial connection. Blocks until a byte is received.
unsigned char oi_byte_rx(void) {
	// wait until a byte is received (Receive Complete flag, RXC, is set)
	while (!(UCSR1A & (1 << RXC)));
     69c:	eb e9       	ldi	r30, 0x9B	; 155
     69e:	f0 e0       	ldi	r31, 0x00	; 0
     6a0:	80 81       	ld	r24, Z
     6a2:	88 23       	and	r24, r24
     6a4:	ec f7       	brge	.-6      	; 0x6a0 <oi_byte_rx+0x4>

	return UDR1;
     6a6:	80 91 9c 00 	lds	r24, 0x009C
}
     6aa:	08 95       	ret

000006ac <oi_update>:
}



/// Update the Create. This will update all the sensor data and store it in the oi_t struct.
void oi_update(oi_t *self) {
     6ac:	ef 92       	push	r14
     6ae:	ff 92       	push	r15
     6b0:	0f 93       	push	r16
     6b2:	1f 93       	push	r17
     6b4:	cf 93       	push	r28
     6b6:	df 93       	push	r29
     6b8:	7c 01       	movw	r14, r24
	int i;

	// Clear the receive buffer
	while (UCSR1A & (1 << RXC)) 
     6ba:	80 91 9b 00 	lds	r24, 0x009B
     6be:	88 23       	and	r24, r24
     6c0:	44 f4       	brge	.+16     	; 0x6d2 <oi_update+0x26>
		i = UDR1;
     6c2:	ac e9       	ldi	r26, 0x9C	; 156
     6c4:	b0 e0       	ldi	r27, 0x00	; 0
/// Update the Create. This will update all the sensor data and store it in the oi_t struct.
void oi_update(oi_t *self) {
	int i;

	// Clear the receive buffer
	while (UCSR1A & (1 << RXC)) 
     6c6:	eb e9       	ldi	r30, 0x9B	; 155
     6c8:	f0 e0       	ldi	r31, 0x00	; 0
		i = UDR1;
     6ca:	8c 91       	ld	r24, X
/// Update the Create. This will update all the sensor data and store it in the oi_t struct.
void oi_update(oi_t *self) {
	int i;

	// Clear the receive buffer
	while (UCSR1A & (1 << RXC)) 
     6cc:	80 81       	ld	r24, Z
     6ce:	88 23       	and	r24, r24
     6d0:	e4 f3       	brlt	.-8      	; 0x6ca <oi_update+0x1e>
		i = UDR1;

	// Query a list of sensor values
	oi_byte_tx(OI_OPCODE_SENSORS);
     6d2:	8e e8       	ldi	r24, 0x8E	; 142
     6d4:	a4 df       	rcall	.-184    	; 0x61e <oi_byte_tx>
	// Send the sensor packet ID
	oi_byte_tx(OI_SENSOR_PACKET_GROUP6); 
     6d6:	86 e0       	ldi	r24, 0x06	; 6
     6d8:	a2 df       	rcall	.-188    	; 0x61e <oi_byte_tx>
}



/// Update the Create. This will update all the sensor data and store it in the oi_t struct.
void oi_update(oi_t *self) {
     6da:	87 01       	movw	r16, r14
     6dc:	0c 5c       	subi	r16, 0xCC	; 204
     6de:	1f 4f       	sbci	r17, 0xFF	; 255
	oi_byte_tx(OI_OPCODE_SENSORS);
	// Send the sensor packet ID
	oi_byte_tx(OI_SENSOR_PACKET_GROUP6); 

	// Read all the sensor data
	char *sensor = (char *) self;
     6e0:	e7 01       	movw	r28, r14
	for (i = 0; i < 52; i++) {
		// read each sensor byte
		*(sensor++) = oi_byte_rx();
     6e2:	dc df       	rcall	.-72     	; 0x69c <oi_byte_rx>
     6e4:	89 93       	st	Y+, r24
	// Send the sensor packet ID
	oi_byte_tx(OI_SENSOR_PACKET_GROUP6); 

	// Read all the sensor data
	char *sensor = (char *) self;
	for (i = 0; i < 52; i++) {
     6e6:	c0 17       	cp	r28, r16
     6e8:	d1 07       	cpc	r29, r17
     6ea:	d9 f7       	brne	.-10     	; 0x6e2 <oi_update+0x36>
	}
	
	sensor = (char *) self;
	
	// Fix byte ordering for multi-byte members of the struct
	self->distance                 = (sensor[12] << 8) + sensor[13];
     6ec:	f7 01       	movw	r30, r14
     6ee:	94 85       	ldd	r25, Z+12	; 0x0c
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	25 85       	ldd	r18, Z+13	; 0x0d
     6f4:	82 0f       	add	r24, r18
     6f6:	91 1d       	adc	r25, r1
     6f8:	95 87       	std	Z+13, r25	; 0x0d
     6fa:	84 87       	std	Z+12, r24	; 0x0c
	self->angle                    = (sensor[14] << 8) + sensor[15];
     6fc:	96 85       	ldd	r25, Z+14	; 0x0e
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	27 85       	ldd	r18, Z+15	; 0x0f
     702:	82 0f       	add	r24, r18
     704:	91 1d       	adc	r25, r1
     706:	97 87       	std	Z+15, r25	; 0x0f
     708:	86 87       	std	Z+14, r24	; 0x0e
	self->voltage                  = (sensor[17] << 8) + sensor[18];
     70a:	91 89       	ldd	r25, Z+17	; 0x11
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	22 89       	ldd	r18, Z+18	; 0x12
     710:	82 0f       	add	r24, r18
     712:	91 1d       	adc	r25, r1
     714:	92 8b       	std	Z+18, r25	; 0x12
     716:	81 8b       	std	Z+17, r24	; 0x11
	self->current                  = (sensor[19] << 8) + sensor[20];
     718:	93 89       	ldd	r25, Z+19	; 0x13
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	24 89       	ldd	r18, Z+20	; 0x14
     71e:	82 0f       	add	r24, r18
     720:	91 1d       	adc	r25, r1
     722:	94 8b       	std	Z+20, r25	; 0x14
     724:	83 8b       	std	Z+19, r24	; 0x13
	self->charge                   = (sensor[22] << 8) + sensor[23];
     726:	96 89       	ldd	r25, Z+22	; 0x16
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	27 89       	ldd	r18, Z+23	; 0x17
     72c:	82 0f       	add	r24, r18
     72e:	91 1d       	adc	r25, r1
     730:	97 8b       	std	Z+23, r25	; 0x17
     732:	86 8b       	std	Z+22, r24	; 0x16
	self->capacity                 = (sensor[24] << 8) + sensor[25];
     734:	90 8d       	ldd	r25, Z+24	; 0x18
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	21 8d       	ldd	r18, Z+25	; 0x19
     73a:	82 0f       	add	r24, r18
     73c:	91 1d       	adc	r25, r1
     73e:	91 8f       	std	Z+25, r25	; 0x19
     740:	80 8f       	std	Z+24, r24	; 0x18
	self->wall_signal              = (sensor[26] << 8) + sensor[27];
     742:	92 8d       	ldd	r25, Z+26	; 0x1a
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	23 8d       	ldd	r18, Z+27	; 0x1b
     748:	82 0f       	add	r24, r18
     74a:	91 1d       	adc	r25, r1
     74c:	93 8f       	std	Z+27, r25	; 0x1b
     74e:	82 8f       	std	Z+26, r24	; 0x1a
	self->cliff_left_signal        = (sensor[28] << 8) + sensor[29];
     750:	94 8d       	ldd	r25, Z+28	; 0x1c
     752:	80 e0       	ldi	r24, 0x00	; 0
     754:	25 8d       	ldd	r18, Z+29	; 0x1d
     756:	82 0f       	add	r24, r18
     758:	91 1d       	adc	r25, r1
     75a:	95 8f       	std	Z+29, r25	; 0x1d
     75c:	84 8f       	std	Z+28, r24	; 0x1c
	self->cliff_frontleft_signal   = (sensor[30] << 8) + sensor[31]; 
     75e:	96 8d       	ldd	r25, Z+30	; 0x1e
     760:	80 e0       	ldi	r24, 0x00	; 0
     762:	27 8d       	ldd	r18, Z+31	; 0x1f
     764:	82 0f       	add	r24, r18
     766:	91 1d       	adc	r25, r1
     768:	97 8f       	std	Z+31, r25	; 0x1f
     76a:	86 8f       	std	Z+30, r24	; 0x1e
	self->cliff_frontright_signal  = (sensor[32] << 8) + sensor[33];
     76c:	90 a1       	ldd	r25, Z+32	; 0x20
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	21 a1       	ldd	r18, Z+33	; 0x21
     772:	82 0f       	add	r24, r18
     774:	91 1d       	adc	r25, r1
     776:	91 a3       	std	Z+33, r25	; 0x21
     778:	80 a3       	std	Z+32, r24	; 0x20
	self->cliff_right_signal       = (sensor[34] << 8) + sensor[35];
     77a:	92 a1       	ldd	r25, Z+34	; 0x22
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	23 a1       	ldd	r18, Z+35	; 0x23
     780:	82 0f       	add	r24, r18
     782:	91 1d       	adc	r25, r1
     784:	93 a3       	std	Z+35, r25	; 0x23
     786:	82 a3       	std	Z+34, r24	; 0x22
	self->cargo_bay_voltage        = (sensor[41] << 8) + sensor[42];
     788:	42 a5       	ldd	r20, Z+42	; 0x2a
     78a:	50 e0       	ldi	r21, 0x00	; 0
     78c:	31 a5       	ldd	r19, Z+41	; 0x29
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	24 0f       	add	r18, r20
     792:	35 1f       	adc	r19, r21
     794:	36 a3       	std	Z+38, r19	; 0x26
     796:	25 a3       	std	Z+37, r18	; 0x25
	self->requested_velocity       = (sensor[48] << 8) + sensor[42];
     798:	90 a9       	ldd	r25, Z+48	; 0x30
     79a:	80 e0       	ldi	r24, 0x00	; 0
     79c:	84 0f       	add	r24, r20
     79e:	95 1f       	adc	r25, r21
     7a0:	95 a7       	std	Z+45, r25	; 0x2d
     7a2:	84 a7       	std	Z+44, r24	; 0x2c
	self->requested_radius         = (sensor[50] << 8) + sensor[51];
     7a4:	92 a9       	ldd	r25, Z+50	; 0x32
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	23 a9       	ldd	r18, Z+51	; 0x33
     7aa:	82 0f       	add	r24, r18
     7ac:	91 1d       	adc	r25, r1
     7ae:	97 a7       	std	Z+47, r25	; 0x2f
     7b0:	86 a7       	std	Z+46, r24	; 0x2e
	self->requested_right_velocity = (sensor[52] << 8) + sensor[53];
     7b2:	94 a9       	ldd	r25, Z+52	; 0x34
     7b4:	80 e0       	ldi	r24, 0x00	; 0
     7b6:	25 a9       	ldd	r18, Z+53	; 0x35
     7b8:	82 0f       	add	r24, r18
     7ba:	91 1d       	adc	r25, r1
     7bc:	91 ab       	std	Z+49, r25	; 0x31
     7be:	80 ab       	std	Z+48, r24	; 0x30
	self->requested_left_velocity  = (sensor[54] << 8) + sensor[55];
     7c0:	96 a9       	ldd	r25, Z+54	; 0x36
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	27 a9       	ldd	r18, Z+55	; 0x37
     7c6:	82 0f       	add	r24, r18
     7c8:	91 1d       	adc	r25, r1
     7ca:	93 ab       	std	Z+51, r25	; 0x33
     7cc:	82 ab       	std	Z+50, r24	; 0x32
	
	wait_ms(35); // reduces USART errors that occur when continuously transmitting/receiving
     7ce:	83 e2       	ldi	r24, 0x23	; 35
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	04 d1       	rcall	.+520    	; 0x9dc <wait_ms>
}
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	1f 91       	pop	r17
     7da:	0f 91       	pop	r16
     7dc:	ff 90       	pop	r15
     7de:	ef 90       	pop	r14
     7e0:	08 95       	ret

000007e2 <oi_init>:
void oi_free(oi_t *self) {
	free(self);
}

/// Initialize the Create
void oi_init(oi_t *self) {
     7e2:	0f 93       	push	r16
     7e4:	1f 93       	push	r17
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
     7ea:	ec 01       	movw	r28, r24
	// Setup USART1 to communicate to the iRobot Create using serial (baud = 57600)
	UBRR1L = 16; // UBRR = (FOSC/16/BAUD-1);
     7ec:	09 e9       	ldi	r16, 0x99	; 153
     7ee:	10 e0       	ldi	r17, 0x00	; 0
     7f0:	80 e1       	ldi	r24, 0x10	; 16
     7f2:	f8 01       	movw	r30, r16
     7f4:	80 83       	st	Z, r24
	UCSR1B = (1 << RXEN) | (1 << TXEN);
     7f6:	88 e1       	ldi	r24, 0x18	; 24
     7f8:	80 93 9a 00 	sts	0x009A, r24
	UCSR1C = (3 << UCSZ10);
     7fc:	86 e0       	ldi	r24, 0x06	; 6
     7fe:	80 93 9d 00 	sts	0x009D, r24

	// Starts the SCI. Must be sent first
	oi_byte_tx(OI_OPCODE_START);
     802:	80 e8       	ldi	r24, 0x80	; 128
     804:	0c df       	rcall	.-488    	; 0x61e <oi_byte_tx>
	oi_byte_tx(OI_OPCODE_BAUD);
     806:	81 e8       	ldi	r24, 0x81	; 129
     808:	0a df       	rcall	.-492    	; 0x61e <oi_byte_tx>

	oi_byte_tx(8); // baud code for 28800
     80a:	88 e0       	ldi	r24, 0x08	; 8
     80c:	08 df       	rcall	.-496    	; 0x61e <oi_byte_tx>
	wait_ms(100);
     80e:	84 e6       	ldi	r24, 0x64	; 100
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	e4 d0       	rcall	.+456    	; 0x9dc <wait_ms>
	
	// Set the baud rate on the Cerebot II to match the Create's baud
	UBRR1L = 33; // UBRR = (FOSC/16/BAUD-1);
     814:	81 e2       	ldi	r24, 0x21	; 33
     816:	f8 01       	movw	r30, r16
     818:	80 83       	st	Z, r24

	// Use Full mode, unrestricted control
	oi_byte_tx(OI_OPCODE_FULL);
     81a:	84 e8       	ldi	r24, 0x84	; 132
     81c:	00 df       	rcall	.-512    	; 0x61e <oi_byte_tx>
	oi_set_leds(1, 1, 7, 255);
     81e:	2f ef       	ldi	r18, 0xFF	; 255
     820:	47 e0       	ldi	r20, 0x07	; 7
     822:	61 e0       	ldi	r22, 0x01	; 1
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	1a df       	rcall	.-460    	; 0x65c <oi_set_leds>
	
	oi_update(self);
     828:	ce 01       	movw	r24, r28
     82a:	40 df       	rcall	.-384    	; 0x6ac <oi_update>
	oi_update(self); // call twice to clear distance/angle
     82c:	ce 01       	movw	r24, r28
     82e:	3e df       	rcall	.-388    	; 0x6ac <oi_update>
}
     830:	df 91       	pop	r29
     832:	cf 91       	pop	r28
     834:	1f 91       	pop	r17
     836:	0f 91       	pop	r16
     838:	08 95       	ret

0000083a <serial_init>:
	}
	
	//return string
	return receivedVars;
	
}
     83a:	10 92 90 00 	sts	0x0090, r1
     83e:	83 e3       	ldi	r24, 0x33	; 51
     840:	89 b9       	out	0x09, r24	; 9
     842:	82 e0       	ldi	r24, 0x02	; 2
     844:	8b b9       	out	0x0b, r24	; 11
     846:	8e e0       	ldi	r24, 0x0E	; 14
     848:	80 93 95 00 	sts	0x0095, r24
     84c:	88 e1       	ldi	r24, 0x18	; 24
     84e:	8a b9       	out	0x0a, r24	; 10
     850:	08 95       	ret

00000852 <USART_Transmit>:
     852:	5d 9b       	sbis	0x0b, 5	; 11
     854:	fe cf       	rjmp	.-4      	; 0x852 <USART_Transmit>
     856:	8c b9       	out	0x0c, r24	; 12
     858:	08 95       	ret

0000085a <USART_Receive>:
     85a:	5f 9b       	sbis	0x0b, 7	; 11
     85c:	02 c0       	rjmp	.+4      	; 0x862 <USART_Receive+0x8>
     85e:	8c b1       	in	r24, 0x0c	; 12
     860:	08 95       	ret
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret

00000866 <USART_SendString>:


void USART_SendString(char SentString[])
{
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	c8 2f       	mov	r28, r24
     86c:	d9 2f       	mov	r29, r25
	char flag = 1;
	int i = 0;
	while(flag)
	{
		if(SentString[i])
     86e:	89 91       	ld	r24, Y+
     870:	88 23       	and	r24, r24
     872:	11 f0       	breq	.+4      	; 0x878 <USART_SendString+0x12>
		{
			USART_Transmit(SentString[i]);
     874:	ee df       	rcall	.-36     	; 0x852 <USART_Transmit>
     876:	fb cf       	rjmp	.-10     	; 0x86e <USART_SendString+0x8>
		}
		else
		{
			flag = 0;
			USART_Transmit(10);
     878:	8a e0       	ldi	r24, 0x0A	; 10
     87a:	eb df       	rcall	.-42     	; 0x852 <USART_Transmit>
			USART_Transmit(13);
     87c:	8d e0       	ldi	r24, 0x0D	; 13
     87e:	e9 df       	rcall	.-46     	; 0x852 <USART_Transmit>
		}
		i++;
	}
	
}
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	08 95       	ret

00000886 <ADC_init>:
	
	oi_set_wheels(0, 0); // stop
	//degrees -= 10;
	sprintf(sensorData,"Turned left %d degrees", sum);
	USART_SendString(sensorData);
}
     886:	37 9a       	sbi	0x06, 7	; 6
     888:	86 b1       	in	r24, 0x06	; 6
     88a:	87 60       	ori	r24, 0x07	; 7
     88c:	86 b9       	out	0x06, r24	; 6
     88e:	87 b1       	in	r24, 0x07	; 7
     890:	80 6c       	ori	r24, 0xC0	; 192
     892:	87 b9       	out	0x07, r24	; 7
     894:	08 95       	ret

00000896 <ADC_read>:
     896:	97 b1       	in	r25, 0x07	; 7
     898:	8f 71       	andi	r24, 0x1F	; 31
     89a:	98 2b       	or	r25, r24
     89c:	97 b9       	out	0x07, r25	; 7
     89e:	36 9a       	sbi	0x06, 6	; 6
     8a0:	36 99       	sbic	0x06, 6	; 6
     8a2:	fe cf       	rjmp	.-4      	; 0x8a0 <ADC_read+0xa>
     8a4:	24 b1       	in	r18, 0x04	; 4
     8a6:	35 b1       	in	r19, 0x05	; 5
     8a8:	82 2f       	mov	r24, r18
     8aa:	93 2f       	mov	r25, r19
     8ac:	08 95       	ret

000008ae <calcCm>:
     8ae:	bc 01       	movw	r22, r24
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	7b d6       	rcall	.+3318   	; 0x15ac <__floatunsisf>
     8b6:	2a e9       	ldi	r18, 0x9A	; 154
     8b8:	39 e9       	ldi	r19, 0x99	; 153
     8ba:	49 e7       	ldi	r20, 0x79	; 121
     8bc:	50 e4       	ldi	r21, 0x40	; 64
     8be:	04 d7       	rcall	.+3592   	; 0x16c8 <__mulsf3>
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	40 ea       	ldi	r20, 0xA0	; 160
     8c6:	50 e4       	ldi	r21, 0x40	; 64
     8c8:	79 d5       	rcall	.+2802   	; 0x13bc <__addsf3>
     8ca:	9b 01       	movw	r18, r22
     8cc:	ac 01       	movw	r20, r24
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	70 eb       	ldi	r23, 0xB0	; 176
     8d2:	83 e3       	ldi	r24, 0x33	; 51
     8d4:	97 e4       	ldi	r25, 0x47	; 71
     8d6:	d6 c5       	rjmp	.+2988   	; 0x1484 <__divsf3>

000008d8 <song_init>:
     8d8:	8c e8       	ldi	r24, 0x8C	; 140
     8da:	a1 de       	rcall	.-702    	; 0x61e <oi_byte_tx>
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	9f de       	rcall	.-706    	; 0x61e <oi_byte_tx>
     8e0:	88 e1       	ldi	r24, 0x18	; 24
     8e2:	9d de       	rcall	.-710    	; 0x61e <oi_byte_tx>
     8e4:	83 e4       	ldi	r24, 0x43	; 67
     8e6:	9b de       	rcall	.-714    	; 0x61e <oi_byte_tx>
     8e8:	80 e1       	ldi	r24, 0x10	; 16
     8ea:	99 de       	rcall	.-718    	; 0x61e <oi_byte_tx>
     8ec:	83 e4       	ldi	r24, 0x43	; 67
     8ee:	97 de       	rcall	.-722    	; 0x61e <oi_byte_tx>
     8f0:	80 e1       	ldi	r24, 0x10	; 16
     8f2:	95 de       	rcall	.-726    	; 0x61e <oi_byte_tx>
     8f4:	8f e3       	ldi	r24, 0x3F	; 63
     8f6:	93 de       	rcall	.-730    	; 0x61e <oi_byte_tx>
     8f8:	80 e1       	ldi	r24, 0x10	; 16
     8fa:	91 de       	rcall	.-734    	; 0x61e <oi_byte_tx>
     8fc:	8c e3       	ldi	r24, 0x3C	; 60
     8fe:	8f de       	rcall	.-738    	; 0x61e <oi_byte_tx>
     900:	80 e2       	ldi	r24, 0x20	; 32
     902:	8d de       	rcall	.-742    	; 0x61e <oi_byte_tx>
     904:	8c e3       	ldi	r24, 0x3C	; 60
     906:	8b de       	rcall	.-746    	; 0x61e <oi_byte_tx>
     908:	80 e2       	ldi	r24, 0x20	; 32
     90a:	89 de       	rcall	.-750    	; 0x61e <oi_byte_tx>
     90c:	81 e4       	ldi	r24, 0x41	; 65
     90e:	87 de       	rcall	.-754    	; 0x61e <oi_byte_tx>
     910:	80 e2       	ldi	r24, 0x20	; 32
     912:	85 de       	rcall	.-758    	; 0x61e <oi_byte_tx>
     914:	81 e4       	ldi	r24, 0x41	; 65
     916:	83 de       	rcall	.-762    	; 0x61e <oi_byte_tx>
     918:	80 e2       	ldi	r24, 0x20	; 32
     91a:	81 de       	rcall	.-766    	; 0x61e <oi_byte_tx>
     91c:	81 e4       	ldi	r24, 0x41	; 65
     91e:	7f de       	rcall	.-770    	; 0x61e <oi_byte_tx>
     920:	80 e1       	ldi	r24, 0x10	; 16
     922:	7d de       	rcall	.-774    	; 0x61e <oi_byte_tx>
     924:	85 e4       	ldi	r24, 0x45	; 69
     926:	7b de       	rcall	.-778    	; 0x61e <oi_byte_tx>
     928:	80 e1       	ldi	r24, 0x10	; 16
     92a:	79 de       	rcall	.-782    	; 0x61e <oi_byte_tx>
     92c:	85 e4       	ldi	r24, 0x45	; 69
     92e:	77 de       	rcall	.-786    	; 0x61e <oi_byte_tx>
     930:	80 e1       	ldi	r24, 0x10	; 16
     932:	75 de       	rcall	.-790    	; 0x61e <oi_byte_tx>
     934:	86 e4       	ldi	r24, 0x46	; 70
     936:	73 de       	rcall	.-794    	; 0x61e <oi_byte_tx>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	71 de       	rcall	.-798    	; 0x61e <oi_byte_tx>
     93c:	88 e4       	ldi	r24, 0x48	; 72
     93e:	6f de       	rcall	.-802    	; 0x61e <oi_byte_tx>
     940:	80 e1       	ldi	r24, 0x10	; 16
     942:	6d de       	rcall	.-806    	; 0x61e <oi_byte_tx>
     944:	86 e4       	ldi	r24, 0x46	; 70
     946:	6b de       	rcall	.-810    	; 0x61e <oi_byte_tx>
     948:	80 e1       	ldi	r24, 0x10	; 16
     94a:	69 de       	rcall	.-814    	; 0x61e <oi_byte_tx>
     94c:	86 e4       	ldi	r24, 0x46	; 70
     94e:	67 de       	rcall	.-818    	; 0x61e <oi_byte_tx>
     950:	80 e1       	ldi	r24, 0x10	; 16
     952:	65 de       	rcall	.-822    	; 0x61e <oi_byte_tx>
     954:	81 e4       	ldi	r24, 0x41	; 65
     956:	63 de       	rcall	.-826    	; 0x61e <oi_byte_tx>
     958:	80 e1       	ldi	r24, 0x10	; 16
     95a:	61 de       	rcall	.-830    	; 0x61e <oi_byte_tx>
     95c:	8e e3       	ldi	r24, 0x3E	; 62
     95e:	5f de       	rcall	.-834    	; 0x61e <oi_byte_tx>
     960:	80 e2       	ldi	r24, 0x20	; 32
     962:	5d de       	rcall	.-838    	; 0x61e <oi_byte_tx>
     964:	8e e3       	ldi	r24, 0x3E	; 62
     966:	5b de       	rcall	.-842    	; 0x61e <oi_byte_tx>
     968:	80 e2       	ldi	r24, 0x20	; 32
     96a:	59 de       	rcall	.-846    	; 0x61e <oi_byte_tx>
     96c:	83 e4       	ldi	r24, 0x43	; 67
     96e:	57 de       	rcall	.-850    	; 0x61e <oi_byte_tx>
     970:	80 e2       	ldi	r24, 0x20	; 32
     972:	55 de       	rcall	.-854    	; 0x61e <oi_byte_tx>
     974:	83 e4       	ldi	r24, 0x43	; 67
     976:	53 de       	rcall	.-858    	; 0x61e <oi_byte_tx>
     978:	80 e2       	ldi	r24, 0x20	; 32
     97a:	51 de       	rcall	.-862    	; 0x61e <oi_byte_tx>
     97c:	83 e4       	ldi	r24, 0x43	; 67
     97e:	4f de       	rcall	.-866    	; 0x61e <oi_byte_tx>
     980:	80 e1       	ldi	r24, 0x10	; 16
     982:	4d de       	rcall	.-870    	; 0x61e <oi_byte_tx>
     984:	81 e4       	ldi	r24, 0x41	; 65
     986:	4b de       	rcall	.-874    	; 0x61e <oi_byte_tx>
     988:	80 e1       	ldi	r24, 0x10	; 16
     98a:	49 de       	rcall	.-878    	; 0x61e <oi_byte_tx>
     98c:	81 e4       	ldi	r24, 0x41	; 65
     98e:	47 de       	rcall	.-882    	; 0x61e <oi_byte_tx>
     990:	80 e1       	ldi	r24, 0x10	; 16
     992:	45 de       	rcall	.-886    	; 0x61e <oi_byte_tx>
     994:	83 e4       	ldi	r24, 0x43	; 67
     996:	43 de       	rcall	.-890    	; 0x61e <oi_byte_tx>
     998:	80 e1       	ldi	r24, 0x10	; 16
     99a:	41 de       	rcall	.-894    	; 0x61e <oi_byte_tx>
     99c:	81 e4       	ldi	r24, 0x41	; 65
     99e:	3f de       	rcall	.-898    	; 0x61e <oi_byte_tx>
     9a0:	80 e1       	ldi	r24, 0x10	; 16
     9a2:	3d ce       	rjmp	.-902    	; 0x61e <oi_byte_tx>

000009a4 <timer2_start>:
     9a4:	10 92 20 05 	sts	0x0520, r1
     9a8:	10 92 1f 05 	sts	0x051F, r1
     9ac:	81 11       	cpse	r24, r1
     9ae:	06 c0       	rjmp	.+12     	; 0x9bc <timer2_start+0x18>
     9b0:	8b e0       	ldi	r24, 0x0B	; 11
     9b2:	85 bd       	out	0x25, r24	; 37
     9b4:	87 b7       	in	r24, 0x37	; 55
     9b6:	80 68       	ori	r24, 0x80	; 128
     9b8:	87 bf       	out	0x37, r24	; 55
     9ba:	07 c0       	rjmp	.+14     	; 0x9ca <timer2_start+0x26>
     9bc:	81 30       	cpi	r24, 0x01	; 1
     9be:	29 f4       	brne	.+10     	; 0x9ca <timer2_start+0x26>
     9c0:	89 e0       	ldi	r24, 0x09	; 9
     9c2:	85 bd       	out	0x25, r24	; 37
     9c4:	87 b7       	in	r24, 0x37	; 55
     9c6:	80 68       	ori	r24, 0x80	; 128
     9c8:	87 bf       	out	0x37, r24	; 55
     9ca:	78 94       	sei
     9cc:	08 95       	ret

000009ce <timer2_stop>:
     9ce:	87 b7       	in	r24, 0x37	; 55
     9d0:	8f 77       	andi	r24, 0x7F	; 127
     9d2:	87 bf       	out	0x37, r24	; 55
     9d4:	85 b5       	in	r24, 0x25	; 37
     9d6:	8f 77       	andi	r24, 0x7F	; 127
     9d8:	85 bd       	out	0x25, r24	; 37
     9da:	08 95       	ret

000009dc <wait_ms>:
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	ec 01       	movw	r28, r24
     9e2:	8a ef       	ldi	r24, 0xFA	; 250
     9e4:	83 bd       	out	0x23, r24	; 35
     9e6:	10 92 20 05 	sts	0x0520, r1
     9ea:	10 92 1f 05 	sts	0x051F, r1
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	d9 df       	rcall	.-78     	; 0x9a4 <timer2_start>
     9f2:	20 91 1f 05 	lds	r18, 0x051F
     9f6:	30 91 20 05 	lds	r19, 0x0520
     9fa:	2c 17       	cp	r18, r28
     9fc:	3d 07       	cpc	r19, r29
     9fe:	c8 f3       	brcs	.-14     	; 0x9f2 <wait_ms+0x16>
     a00:	e6 df       	rcall	.-52     	; 0x9ce <timer2_stop>
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	08 95       	ret

00000a08 <__vector_9>:
     a08:	1f 92       	push	r1
     a0a:	0f 92       	push	r0
     a0c:	0f b6       	in	r0, 0x3f	; 63
     a0e:	0f 92       	push	r0
     a10:	11 24       	eor	r1, r1
     a12:	8f 93       	push	r24
     a14:	9f 93       	push	r25
     a16:	80 91 1f 05 	lds	r24, 0x051F
     a1a:	90 91 20 05 	lds	r25, 0x0520
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	90 93 20 05 	sts	0x0520, r25
     a24:	80 93 1f 05 	sts	0x051F, r24
     a28:	9f 91       	pop	r25
     a2a:	8f 91       	pop	r24
     a2c:	0f 90       	pop	r0
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	0f 90       	pop	r0
     a32:	1f 90       	pop	r1
     a34:	18 95       	reti

00000a36 <init_push_buttons>:
     a36:	84 b3       	in	r24, 0x14	; 20
     a38:	80 7c       	andi	r24, 0xC0	; 192
     a3a:	84 bb       	out	0x14, r24	; 20
     a3c:	85 b3       	in	r24, 0x15	; 21
     a3e:	8f 63       	ori	r24, 0x3F	; 63
     a40:	85 bb       	out	0x15, r24	; 21
     a42:	08 95       	ret

00000a44 <ping_init>:
     a44:	1f bc       	out	0x2f, r1	; 47
     a46:	84 ec       	ldi	r24, 0xC4	; 196
     a48:	8e bd       	out	0x2e, r24	; 46
     a4a:	17 be       	out	0x37, r1	; 55
     a4c:	08 95       	ret

00000a4e <__vector_11>:
     a4e:	1f 92       	push	r1
     a50:	0f 92       	push	r0
     a52:	0f b6       	in	r0, 0x3f	; 63
     a54:	0f 92       	push	r0
     a56:	11 24       	eor	r1, r1
     a58:	2f 93       	push	r18
     a5a:	3f 93       	push	r19
     a5c:	8f 93       	push	r24
     a5e:	9f 93       	push	r25
     a60:	86 b5       	in	r24, 0x26	; 38
     a62:	97 b5       	in	r25, 0x27	; 39
     a64:	90 93 1e 05 	sts	0x051E, r25
     a68:	80 93 1d 05 	sts	0x051D, r24
     a6c:	20 91 1b 05 	lds	r18, 0x051B
     a70:	30 91 1c 05 	lds	r19, 0x051C
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	23 2b       	or	r18, r19
     a7a:	11 f0       	breq	.+4      	; 0xa80 <__vector_11+0x32>
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	90 93 1c 05 	sts	0x051C, r25
     a84:	80 93 1b 05 	sts	0x051B, r24
     a88:	9f 91       	pop	r25
     a8a:	8f 91       	pop	r24
     a8c:	3f 91       	pop	r19
     a8e:	2f 91       	pop	r18
     a90:	0f 90       	pop	r0
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	0f 90       	pop	r0
     a96:	1f 90       	pop	r1
     a98:	18 95       	reti

00000a9a <send_pulse>:
     a9a:	8c 9a       	sbi	0x11, 4	; 17
     a9c:	94 9a       	sbi	0x12, 4	; 18
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	9c df       	rcall	.-200    	; 0x9dc <wait_ms>
     aa4:	94 98       	cbi	0x12, 4	; 18
     aa6:	8c 98       	cbi	0x11, 4	; 17
     aa8:	08 95       	ret

00000aaa <time2dist>:
     aaa:	bc 01       	movw	r22, r24
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	7d d5       	rcall	.+2810   	; 0x15ac <__floatunsisf>
     ab2:	22 ef       	ldi	r18, 0xF2	; 242
     ab4:	32 ed       	ldi	r19, 0xD2	; 210
     ab6:	4d e8       	ldi	r20, 0x8D	; 141
     ab8:	5e e3       	ldi	r21, 0x3E	; 62
     aba:	06 d6       	rcall	.+3084   	; 0x16c8 <__mulsf3>
     abc:	20 e5       	ldi	r18, 0x50	; 80
     abe:	3d e8       	ldi	r19, 0x8D	; 141
     ac0:	4f ef       	ldi	r20, 0xFF	; 255
     ac2:	51 e4       	ldi	r21, 0x41	; 65
     ac4:	7a c4       	rjmp	.+2292   	; 0x13ba <__subsf3>

00000ac6 <ping_read>:
     ac6:	e9 df       	rcall	.-46     	; 0xa9a <send_pulse>
     ac8:	80 e2       	ldi	r24, 0x20	; 32
     aca:	87 bf       	out	0x37, r24	; 55
     acc:	80 91 1b 05 	lds	r24, 0x051B
     ad0:	90 91 1c 05 	lds	r25, 0x051C
     ad4:	89 2b       	or	r24, r25
     ad6:	d1 f7       	brne	.-12     	; 0xacc <ping_read+0x6>
     ad8:	84 e8       	ldi	r24, 0x84	; 132
     ada:	8e bd       	out	0x2e, r24	; 46
     adc:	20 91 1d 05 	lds	r18, 0x051D
     ae0:	30 91 1e 05 	lds	r19, 0x051E
     ae4:	80 91 1b 05 	lds	r24, 0x051B
     ae8:	90 91 1c 05 	lds	r25, 0x051C
     aec:	89 2b       	or	r24, r25
     aee:	d1 f3       	breq	.-12     	; 0xae4 <ping_read+0x1e>
     af0:	84 ec       	ldi	r24, 0xC4	; 196
     af2:	8e bd       	out	0x2e, r24	; 46
     af4:	80 91 1d 05 	lds	r24, 0x051D
     af8:	90 91 1e 05 	lds	r25, 0x051E
     afc:	17 be       	out	0x37, r1	; 55
     afe:	82 1b       	sub	r24, r18
     b00:	93 0b       	sbc	r25, r19
     b02:	d3 cf       	rjmp	.-90     	; 0xaaa <time2dist>

00000b04 <servo_turn>:
     b04:	bc 01       	movw	r22, r24
     b06:	88 27       	eor	r24, r24
     b08:	77 fd       	sbrc	r23, 7
     b0a:	80 95       	com	r24
     b0c:	98 2f       	mov	r25, r24
     b0e:	50 d5       	rcall	.+2720   	; 0x15b0 <__floatsisf>
     b10:	2b e3       	ldi	r18, 0x3B	; 59
     b12:	3a ea       	ldi	r19, 0xAA	; 170
     b14:	4a e1       	ldi	r20, 0x1A	; 26
     b16:	5c e3       	ldi	r21, 0x3C	; 60
     b18:	d7 d5       	rcall	.+2990   	; 0x16c8 <__mulsf3>
     b1a:	28 e4       	ldi	r18, 0x48	; 72
     b1c:	31 ee       	ldi	r19, 0xE1	; 225
     b1e:	4a ef       	ldi	r20, 0xFA	; 250
     b20:	5e e3       	ldi	r21, 0x3E	; 62
     b22:	4c d4       	rcall	.+2200   	; 0x13bc <__addsf3>
     b24:	20 e0       	ldi	r18, 0x00	; 0
     b26:	30 e0       	ldi	r19, 0x00	; 0
     b28:	4a e7       	ldi	r20, 0x7A	; 122
     b2a:	53 e4       	ldi	r21, 0x43	; 67
     b2c:	cd d5       	rcall	.+2970   	; 0x16c8 <__mulsf3>
     b2e:	12 d5       	rcall	.+2596   	; 0x1554 <__fixunssfsi>
     b30:	61 50       	subi	r22, 0x01	; 1
     b32:	71 09       	sbc	r23, r1
     b34:	70 93 85 00 	sts	0x0085, r23
     b38:	60 93 84 00 	sts	0x0084, r22
     b3c:	84 e1       	ldi	r24, 0x14	; 20
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	4d cf       	rjmp	.-358    	; 0x9dc <wait_ms>

00000b42 <timer3_init>:
     b42:	83 ec       	ldi	r24, 0xC3	; 195
     b44:	99 e0       	ldi	r25, 0x09	; 9
     b46:	90 93 87 00 	sts	0x0087, r25
     b4a:	80 93 86 00 	sts	0x0086, r24
     b4e:	80 e5       	ldi	r24, 0x50	; 80
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	90 93 85 00 	sts	0x0085, r25
     b56:	80 93 84 00 	sts	0x0084, r24
     b5a:	83 e2       	ldi	r24, 0x23	; 35
     b5c:	80 93 8b 00 	sts	0x008B, r24
     b60:	8b e1       	ldi	r24, 0x1B	; 27
     b62:	80 93 8a 00 	sts	0x008A, r24
     b66:	14 9a       	sbi	0x02, 4	; 2
     b68:	08 95       	ret

00000b6a <move_backward>:
     b6a:	cf 92       	push	r12
     b6c:	df 92       	push	r13
     b6e:	ef 92       	push	r14
     b70:	ff 92       	push	r15
     b72:	0f 93       	push	r16
     b74:	1f 93       	push	r17
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	ec 97       	sbiw	r28, 0x3c	; 60
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	7c 01       	movw	r14, r24
     b8c:	06 2f       	mov	r16, r22
     b8e:	17 2f       	mov	r17, r23
     b90:	68 e3       	ldi	r22, 0x38	; 56
     b92:	7f ef       	ldi	r23, 0xFF	; 255
     b94:	88 e3       	ldi	r24, 0x38	; 56
     b96:	9f ef       	ldi	r25, 0xFF	; 255
     b98:	4a dd       	rcall	.-1388   	; 0x62e <oi_set_wheels>
     b9a:	c0 2e       	mov	r12, r16
     b9c:	d1 2e       	mov	r13, r17
     b9e:	cc 0c       	add	r12, r12
     ba0:	dd 1c       	adc	r13, r13
     ba2:	c6 01       	movw	r24, r12
     ba4:	88 0f       	add	r24, r24
     ba6:	99 1f       	adc	r25, r25
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	c8 0e       	add	r12, r24
     bae:	d9 1e       	adc	r13, r25
     bb0:	1c 14       	cp	r1, r12
     bb2:	1d 04       	cpc	r1, r13
     bb4:	6c f4       	brge	.+26     	; 0xbd0 <move_backward+0x66>
     bb6:	00 e0       	ldi	r16, 0x00	; 0
     bb8:	10 e0       	ldi	r17, 0x00	; 0
     bba:	c7 01       	movw	r24, r14
     bbc:	77 dd       	rcall	.-1298   	; 0x6ac <oi_update>
     bbe:	f7 01       	movw	r30, r14
     bc0:	84 85       	ldd	r24, Z+12	; 0x0c
     bc2:	95 85       	ldd	r25, Z+13	; 0x0d
     bc4:	08 1b       	sub	r16, r24
     bc6:	19 0b       	sbc	r17, r25
     bc8:	0c 15       	cp	r16, r12
     bca:	1d 05       	cpc	r17, r13
     bcc:	b4 f3       	brlt	.-20     	; 0xbba <move_backward+0x50>
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <move_backward+0x6a>
     bd0:	00 e0       	ldi	r16, 0x00	; 0
     bd2:	10 e0       	ldi	r17, 0x00	; 0
     bd4:	60 e0       	ldi	r22, 0x00	; 0
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	28 dd       	rcall	.-1456   	; 0x62e <oi_set_wheels>
     bde:	b8 01       	movw	r22, r16
     be0:	88 27       	eor	r24, r24
     be2:	77 fd       	sbrc	r23, 7
     be4:	80 95       	com	r24
     be6:	98 2f       	mov	r25, r24
     be8:	e3 d4       	rcall	.+2502   	; 0x15b0 <__floatsisf>
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e2       	ldi	r20, 0x20	; 32
     bf0:	51 e4       	ldi	r21, 0x41	; 65
     bf2:	48 d4       	rcall	.+2192   	; 0x1484 <__divsf3>
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	7f 93       	push	r23
     bfa:	6f 93       	push	r22
     bfc:	86 e1       	ldi	r24, 0x16	; 22
     bfe:	91 e0       	ldi	r25, 0x01	; 1
     c00:	9f 93       	push	r25
     c02:	8f 93       	push	r24
     c04:	8e 01       	movw	r16, r28
     c06:	0f 5f       	subi	r16, 0xFF	; 255
     c08:	1f 4f       	sbci	r17, 0xFF	; 255
     c0a:	1f 93       	push	r17
     c0c:	0f 93       	push	r16
     c0e:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     c12:	c8 01       	movw	r24, r16
     c14:	28 de       	rcall	.-944    	; 0x866 <USART_SendString>
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	f8 94       	cli
     c1a:	de bf       	out	0x3e, r29	; 62
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	cd bf       	out	0x3d, r28	; 61
     c20:	ec 96       	adiw	r28, 0x3c	; 60
     c22:	0f b6       	in	r0, 0x3f	; 63
     c24:	f8 94       	cli
     c26:	de bf       	out	0x3e, r29	; 62
     c28:	0f be       	out	0x3f, r0	; 63
     c2a:	cd bf       	out	0x3d, r28	; 61
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	1f 91       	pop	r17
     c32:	0f 91       	pop	r16
     c34:	ff 90       	pop	r15
     c36:	ef 90       	pop	r14
     c38:	df 90       	pop	r13
     c3a:	cf 90       	pop	r12
     c3c:	08 95       	ret

00000c3e <move_forward>:
     c3e:	8f 92       	push	r8
     c40:	9f 92       	push	r9
     c42:	af 92       	push	r10
     c44:	bf 92       	push	r11
     c46:	cf 92       	push	r12
     c48:	df 92       	push	r13
     c4a:	ef 92       	push	r14
     c4c:	ff 92       	push	r15
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	c5 55       	subi	r28, 0x55	; 85
     c5c:	d1 09       	sbc	r29, r1
     c5e:	0f b6       	in	r0, 0x3f	; 63
     c60:	f8 94       	cli
     c62:	de bf       	out	0x3e, r29	; 62
     c64:	0f be       	out	0x3f, r0	; 63
     c66:	cd bf       	out	0x3d, r28	; 61
     c68:	8c 01       	movw	r16, r24
     c6a:	e6 2e       	mov	r14, r22
     c6c:	f7 2e       	mov	r15, r23
     c6e:	66 e9       	ldi	r22, 0x96	; 150
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	86 e9       	ldi	r24, 0x96	; 150
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	db dc       	rcall	.-1610   	; 0x62e <oi_set_wheels>
     c78:	8e 2c       	mov	r8, r14
     c7a:	9f 2c       	mov	r9, r15
     c7c:	88 0c       	add	r8, r8
     c7e:	99 1c       	adc	r9, r9
     c80:	c4 01       	movw	r24, r8
     c82:	88 0f       	add	r24, r24
     c84:	99 1f       	adc	r25, r25
     c86:	88 0f       	add	r24, r24
     c88:	99 1f       	adc	r25, r25
     c8a:	88 0e       	add	r8, r24
     c8c:	99 1e       	adc	r9, r25
     c8e:	a1 2c       	mov	r10, r1
     c90:	b1 2c       	mov	r11, r1
     c92:	1c c2       	rjmp	.+1080   	; 0x10cc <move_forward+0x48e>
     c94:	c8 01       	movw	r24, r16
     c96:	0a dd       	rcall	.-1516   	; 0x6ac <oi_update>
     c98:	f8 01       	movw	r30, r16
     c9a:	84 85       	ldd	r24, Z+12	; 0x0c
     c9c:	95 85       	ldd	r25, Z+13	; 0x0d
     c9e:	a8 0e       	add	r10, r24
     ca0:	b9 1e       	adc	r11, r25
     ca2:	40 81       	ld	r20, Z
     ca4:	41 ff       	sbrs	r20, 1
     ca6:	2d c0       	rjmp	.+90     	; 0xd02 <move_forward+0xc4>
     ca8:	60 e0       	ldi	r22, 0x00	; 0
     caa:	70 e0       	ldi	r23, 0x00	; 0
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	be dc       	rcall	.-1668   	; 0x62e <oi_set_wheels>
     cb2:	b5 01       	movw	r22, r10
     cb4:	88 27       	eor	r24, r24
     cb6:	77 fd       	sbrc	r23, 7
     cb8:	80 95       	com	r24
     cba:	98 2f       	mov	r25, r24
     cbc:	79 d4       	rcall	.+2290   	; 0x15b0 <__floatsisf>
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	40 e2       	ldi	r20, 0x20	; 32
     cc4:	51 e4       	ldi	r21, 0x41	; 65
     cc6:	de d3       	rcall	.+1980   	; 0x1484 <__divsf3>
     cc8:	9f 93       	push	r25
     cca:	8f 93       	push	r24
     ccc:	7f 93       	push	r23
     cce:	6f 93       	push	r22
     cd0:	87 e3       	ldi	r24, 0x37	; 55
     cd2:	91 e0       	ldi	r25, 0x01	; 1
     cd4:	9f 93       	push	r25
     cd6:	8f 93       	push	r24
     cd8:	7e 01       	movw	r14, r28
     cda:	fa e1       	ldi	r31, 0x1A	; 26
     cdc:	ef 0e       	add	r14, r31
     cde:	f1 1c       	adc	r15, r1
     ce0:	ff 92       	push	r15
     ce2:	ef 92       	push	r14
     ce4:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     ce8:	c7 01       	movw	r24, r14
     cea:	bd dd       	rcall	.-1158   	; 0x866 <USART_SendString>
     cec:	6a e0       	ldi	r22, 0x0A	; 10
     cee:	70 e0       	ldi	r23, 0x00	; 0
     cf0:	c8 01       	movw	r24, r16
     cf2:	3b df       	rcall	.-394    	; 0xb6a <move_backward>
     cf4:	0f b6       	in	r0, 0x3f	; 63
     cf6:	f8 94       	cli
     cf8:	de bf       	out	0x3e, r29	; 62
     cfa:	0f be       	out	0x3f, r0	; 63
     cfc:	cd bf       	out	0x3d, r28	; 61
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	13 c2       	rjmp	.+1062   	; 0x1128 <__stack+0x29>
     d02:	40 ff       	sbrs	r20, 0
     d04:	2d c0       	rjmp	.+90     	; 0xd60 <move_forward+0x122>
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	8f dc       	rcall	.-1762   	; 0x62e <oi_set_wheels>
     d10:	b5 01       	movw	r22, r10
     d12:	88 27       	eor	r24, r24
     d14:	77 fd       	sbrc	r23, 7
     d16:	80 95       	com	r24
     d18:	98 2f       	mov	r25, r24
     d1a:	4a d4       	rcall	.+2196   	; 0x15b0 <__floatsisf>
     d1c:	20 e0       	ldi	r18, 0x00	; 0
     d1e:	30 e0       	ldi	r19, 0x00	; 0
     d20:	40 e2       	ldi	r20, 0x20	; 32
     d22:	51 e4       	ldi	r21, 0x41	; 65
     d24:	af d3       	rcall	.+1886   	; 0x1484 <__divsf3>
     d26:	9f 93       	push	r25
     d28:	8f 93       	push	r24
     d2a:	7f 93       	push	r23
     d2c:	6f 93       	push	r22
     d2e:	80 e7       	ldi	r24, 0x70	; 112
     d30:	91 e0       	ldi	r25, 0x01	; 1
     d32:	9f 93       	push	r25
     d34:	8f 93       	push	r24
     d36:	7e 01       	movw	r14, r28
     d38:	5a e1       	ldi	r21, 0x1A	; 26
     d3a:	e5 0e       	add	r14, r21
     d3c:	f1 1c       	adc	r15, r1
     d3e:	ff 92       	push	r15
     d40:	ef 92       	push	r14
     d42:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     d46:	c7 01       	movw	r24, r14
     d48:	8e dd       	rcall	.-1252   	; 0x866 <USART_SendString>
     d4a:	6a e0       	ldi	r22, 0x0A	; 10
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	c8 01       	movw	r24, r16
     d50:	0c df       	rcall	.-488    	; 0xb6a <move_backward>
     d52:	0f b6       	in	r0, 0x3f	; 63
     d54:	f8 94       	cli
     d56:	de bf       	out	0x3e, r29	; 62
     d58:	0f be       	out	0x3f, r0	; 63
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	82 e0       	ldi	r24, 0x02	; 2
     d5e:	e4 c1       	rjmp	.+968    	; 0x1128 <__stack+0x29>
     d60:	f8 01       	movw	r30, r16
     d62:	e6 8c       	ldd	r14, Z+30	; 0x1e
     d64:	f7 8c       	ldd	r15, Z+31	; 0x1f
     d66:	f1 e2       	ldi	r31, 0x21	; 33
     d68:	ef 16       	cp	r14, r31
     d6a:	f3 e0       	ldi	r31, 0x03	; 3
     d6c:	ff 06       	cpc	r15, r31
     d6e:	68 f1       	brcs	.+90     	; 0xdca <move_forward+0x18c>
     d70:	8a ea       	ldi	r24, 0xAA	; 170
     d72:	91 e0       	ldi	r25, 0x01	; 1
     d74:	9f 93       	push	r25
     d76:	8f 93       	push	r24
     d78:	ce db       	rcall	.-2148   	; 0x516 <lprintf>
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	55 dc       	rcall	.-1878   	; 0x62e <oi_set_wheels>
     d84:	b5 01       	movw	r22, r10
     d86:	88 27       	eor	r24, r24
     d88:	77 fd       	sbrc	r23, 7
     d8a:	80 95       	com	r24
     d8c:	98 2f       	mov	r25, r24
     d8e:	10 d4       	rcall	.+2080   	; 0x15b0 <__floatsisf>
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	40 e2       	ldi	r20, 0x20	; 32
     d96:	51 e4       	ldi	r21, 0x41	; 65
     d98:	75 d3       	rcall	.+1770   	; 0x1484 <__divsf3>
     d9a:	9f 93       	push	r25
     d9c:	8f 93       	push	r24
     d9e:	7f 93       	push	r23
     da0:	6f 93       	push	r22
     da2:	88 eb       	ldi	r24, 0xB8	; 184
     da4:	91 e0       	ldi	r25, 0x01	; 1
     da6:	9f 93       	push	r25
     da8:	8f 93       	push	r24
     daa:	8e 01       	movw	r16, r28
     dac:	06 5e       	subi	r16, 0xE6	; 230
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	1f 93       	push	r17
     db2:	0f 93       	push	r16
     db4:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     db8:	c8 01       	movw	r24, r16
     dba:	55 dd       	rcall	.-1366   	; 0x866 <USART_SendString>
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	f8 94       	cli
     dc0:	de bf       	out	0x3e, r29	; 62
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	cd bf       	out	0x3d, r28	; 61
     dc6:	83 e0       	ldi	r24, 0x03	; 3
     dc8:	af c1       	rjmp	.+862    	; 0x1128 <__stack+0x29>
     dca:	f8 01       	movw	r30, r16
     dcc:	c0 a0       	ldd	r12, Z+32	; 0x20
     dce:	d1 a0       	ldd	r13, Z+33	; 0x21
     dd0:	f1 e2       	ldi	r31, 0x21	; 33
     dd2:	cf 16       	cp	r12, r31
     dd4:	f3 e0       	ldi	r31, 0x03	; 3
     dd6:	df 06       	cpc	r13, r31
     dd8:	68 f1       	brcs	.+90     	; 0xe34 <move_forward+0x1f6>
     dda:	8a ea       	ldi	r24, 0xAA	; 170
     ddc:	91 e0       	ldi	r25, 0x01	; 1
     dde:	9f 93       	push	r25
     de0:	8f 93       	push	r24
     de2:	99 db       	rcall	.-2254   	; 0x516 <lprintf>
     de4:	60 e0       	ldi	r22, 0x00	; 0
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	80 e0       	ldi	r24, 0x00	; 0
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	20 dc       	rcall	.-1984   	; 0x62e <oi_set_wheels>
     dee:	b5 01       	movw	r22, r10
     df0:	88 27       	eor	r24, r24
     df2:	77 fd       	sbrc	r23, 7
     df4:	80 95       	com	r24
     df6:	98 2f       	mov	r25, r24
     df8:	db d3       	rcall	.+1974   	; 0x15b0 <__floatsisf>
     dfa:	20 e0       	ldi	r18, 0x00	; 0
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	40 e2       	ldi	r20, 0x20	; 32
     e00:	51 e4       	ldi	r21, 0x41	; 65
     e02:	40 d3       	rcall	.+1664   	; 0x1484 <__divsf3>
     e04:	9f 93       	push	r25
     e06:	8f 93       	push	r24
     e08:	7f 93       	push	r23
     e0a:	6f 93       	push	r22
     e0c:	82 ef       	ldi	r24, 0xF2	; 242
     e0e:	91 e0       	ldi	r25, 0x01	; 1
     e10:	9f 93       	push	r25
     e12:	8f 93       	push	r24
     e14:	8e 01       	movw	r16, r28
     e16:	06 5e       	subi	r16, 0xE6	; 230
     e18:	1f 4f       	sbci	r17, 0xFF	; 255
     e1a:	1f 93       	push	r17
     e1c:	0f 93       	push	r16
     e1e:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     e22:	c8 01       	movw	r24, r16
     e24:	20 dd       	rcall	.-1472   	; 0x866 <USART_SendString>
     e26:	0f b6       	in	r0, 0x3f	; 63
     e28:	f8 94       	cli
     e2a:	de bf       	out	0x3e, r29	; 62
     e2c:	0f be       	out	0x3f, r0	; 63
     e2e:	cd bf       	out	0x3d, r28	; 61
     e30:	83 e0       	ldi	r24, 0x03	; 3
     e32:	7a c1       	rjmp	.+756    	; 0x1128 <__stack+0x29>
     e34:	f8 01       	movw	r30, r16
     e36:	82 a1       	ldd	r24, Z+34	; 0x22
     e38:	93 a1       	ldd	r25, Z+35	; 0x23
     e3a:	81 32       	cpi	r24, 0x21	; 33
     e3c:	f3 e0       	ldi	r31, 0x03	; 3
     e3e:	9f 07       	cpc	r25, r31
     e40:	68 f1       	brcs	.+90     	; 0xe9c <move_forward+0x25e>
     e42:	8a ea       	ldi	r24, 0xAA	; 170
     e44:	91 e0       	ldi	r25, 0x01	; 1
     e46:	9f 93       	push	r25
     e48:	8f 93       	push	r24
     e4a:	65 db       	rcall	.-2358   	; 0x516 <lprintf>
     e4c:	60 e0       	ldi	r22, 0x00	; 0
     e4e:	70 e0       	ldi	r23, 0x00	; 0
     e50:	80 e0       	ldi	r24, 0x00	; 0
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	ec db       	rcall	.-2088   	; 0x62e <oi_set_wheels>
     e56:	b5 01       	movw	r22, r10
     e58:	88 27       	eor	r24, r24
     e5a:	77 fd       	sbrc	r23, 7
     e5c:	80 95       	com	r24
     e5e:	98 2f       	mov	r25, r24
     e60:	a7 d3       	rcall	.+1870   	; 0x15b0 <__floatsisf>
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	40 e2       	ldi	r20, 0x20	; 32
     e68:	51 e4       	ldi	r21, 0x41	; 65
     e6a:	0c d3       	rcall	.+1560   	; 0x1484 <__divsf3>
     e6c:	9f 93       	push	r25
     e6e:	8f 93       	push	r24
     e70:	7f 93       	push	r23
     e72:	6f 93       	push	r22
     e74:	88 ef       	ldi	r24, 0xF8	; 248
     e76:	91 e0       	ldi	r25, 0x01	; 1
     e78:	9f 93       	push	r25
     e7a:	8f 93       	push	r24
     e7c:	8e 01       	movw	r16, r28
     e7e:	06 5e       	subi	r16, 0xE6	; 230
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	1f 93       	push	r17
     e84:	0f 93       	push	r16
     e86:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     e8a:	c8 01       	movw	r24, r16
     e8c:	ec dc       	rcall	.-1576   	; 0x866 <USART_SendString>
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	f8 94       	cli
     e92:	de bf       	out	0x3e, r29	; 62
     e94:	0f be       	out	0x3f, r0	; 63
     e96:	cd bf       	out	0x3d, r28	; 61
     e98:	83 e0       	ldi	r24, 0x03	; 3
     e9a:	46 c1       	rjmp	.+652    	; 0x1128 <__stack+0x29>
     e9c:	f8 01       	movw	r30, r16
     e9e:	24 8d       	ldd	r18, Z+28	; 0x1c
     ea0:	35 8d       	ldd	r19, Z+29	; 0x1d
     ea2:	21 32       	cpi	r18, 0x21	; 33
     ea4:	f3 e0       	ldi	r31, 0x03	; 3
     ea6:	3f 07       	cpc	r19, r31
     ea8:	68 f1       	brcs	.+90     	; 0xf04 <move_forward+0x2c6>
     eaa:	8a ea       	ldi	r24, 0xAA	; 170
     eac:	91 e0       	ldi	r25, 0x01	; 1
     eae:	9f 93       	push	r25
     eb0:	8f 93       	push	r24
     eb2:	31 db       	rcall	.-2462   	; 0x516 <lprintf>
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	80 e0       	ldi	r24, 0x00	; 0
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	b8 db       	rcall	.-2192   	; 0x62e <oi_set_wheels>
     ebe:	b5 01       	movw	r22, r10
     ec0:	88 27       	eor	r24, r24
     ec2:	77 fd       	sbrc	r23, 7
     ec4:	80 95       	com	r24
     ec6:	98 2f       	mov	r25, r24
     ec8:	73 d3       	rcall	.+1766   	; 0x15b0 <__floatsisf>
     eca:	20 e0       	ldi	r18, 0x00	; 0
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	40 e2       	ldi	r20, 0x20	; 32
     ed0:	51 e4       	ldi	r21, 0x41	; 65
     ed2:	d8 d2       	rcall	.+1456   	; 0x1484 <__divsf3>
     ed4:	9f 93       	push	r25
     ed6:	8f 93       	push	r24
     ed8:	7f 93       	push	r23
     eda:	6f 93       	push	r22
     edc:	8e eb       	ldi	r24, 0xBE	; 190
     ede:	91 e0       	ldi	r25, 0x01	; 1
     ee0:	9f 93       	push	r25
     ee2:	8f 93       	push	r24
     ee4:	8e 01       	movw	r16, r28
     ee6:	06 5e       	subi	r16, 0xE6	; 230
     ee8:	1f 4f       	sbci	r17, 0xFF	; 255
     eea:	1f 93       	push	r17
     eec:	0f 93       	push	r16
     eee:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     ef2:	c8 01       	movw	r24, r16
     ef4:	b8 dc       	rcall	.-1680   	; 0x866 <USART_SendString>
     ef6:	0f b6       	in	r0, 0x3f	; 63
     ef8:	f8 94       	cli
     efa:	de bf       	out	0x3e, r29	; 62
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	cd bf       	out	0x3d, r28	; 61
     f00:	83 e0       	ldi	r24, 0x03	; 3
     f02:	12 c1       	rjmp	.+548    	; 0x1128 <__stack+0x29>
     f04:	4c 71       	andi	r20, 0x1C	; 28
     f06:	a9 f1       	breq	.+106    	; 0xf72 <move_forward+0x334>
     f08:	b5 01       	movw	r22, r10
     f0a:	88 27       	eor	r24, r24
     f0c:	77 fd       	sbrc	r23, 7
     f0e:	80 95       	com	r24
     f10:	98 2f       	mov	r25, r24
     f12:	4e d3       	rcall	.+1692   	; 0x15b0 <__floatsisf>
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e2       	ldi	r20, 0x20	; 32
     f1a:	51 e4       	ldi	r21, 0x41	; 65
     f1c:	b3 d2       	rcall	.+1382   	; 0x1484 <__divsf3>
     f1e:	9f 93       	push	r25
     f20:	8f 93       	push	r24
     f22:	7f 93       	push	r23
     f24:	6f 93       	push	r22
     f26:	ff 92       	push	r15
     f28:	ef 92       	push	r14
     f2a:	ff 92       	push	r15
     f2c:	ef 92       	push	r14
     f2e:	df 92       	push	r13
     f30:	cf 92       	push	r12
     f32:	df 92       	push	r13
     f34:	cf 92       	push	r12
     f36:	8d e2       	ldi	r24, 0x2D	; 45
     f38:	92 e0       	ldi	r25, 0x02	; 2
     f3a:	9f 93       	push	r25
     f3c:	8f 93       	push	r24
     f3e:	8e 01       	movw	r16, r28
     f40:	06 5e       	subi	r16, 0xE6	; 230
     f42:	1f 4f       	sbci	r17, 0xFF	; 255
     f44:	1f 93       	push	r17
     f46:	0f 93       	push	r16
     f48:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     f4c:	c8 01       	movw	r24, r16
     f4e:	8b dc       	rcall	.-1770   	; 0x866 <USART_SendString>
     f50:	83 e9       	ldi	r24, 0x93	; 147
     f52:	92 e0       	ldi	r25, 0x02	; 2
     f54:	9f 93       	push	r25
     f56:	8f 93       	push	r24
     f58:	de da       	rcall	.-2628   	; 0x516 <lprintf>
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	65 db       	rcall	.-2358   	; 0x62e <oi_set_wheels>
     f64:	0f b6       	in	r0, 0x3f	; 63
     f66:	f8 94       	cli
     f68:	de bf       	out	0x3e, r29	; 62
     f6a:	0f be       	out	0x3f, r0	; 63
     f6c:	cd bf       	out	0x3d, r28	; 61
     f6e:	84 e0       	ldi	r24, 0x04	; 4
     f70:	db c0       	rjmp	.+438    	; 0x1128 <__stack+0x29>
     f72:	ea e0       	ldi	r30, 0x0A	; 10
     f74:	ee 16       	cp	r14, r30
     f76:	f1 04       	cpc	r15, r1
     f78:	40 f5       	brcc	.+80     	; 0xfca <move_forward+0x38c>
     f7a:	b5 01       	movw	r22, r10
     f7c:	88 27       	eor	r24, r24
     f7e:	77 fd       	sbrc	r23, 7
     f80:	80 95       	com	r24
     f82:	98 2f       	mov	r25, r24
     f84:	15 d3       	rcall	.+1578   	; 0x15b0 <__floatsisf>
     f86:	20 e0       	ldi	r18, 0x00	; 0
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	40 e2       	ldi	r20, 0x20	; 32
     f8c:	51 e4       	ldi	r21, 0x41	; 65
     f8e:	7a d2       	rcall	.+1268   	; 0x1484 <__divsf3>
     f90:	9f 93       	push	r25
     f92:	8f 93       	push	r24
     f94:	7f 93       	push	r23
     f96:	6f 93       	push	r22
     f98:	87 ea       	ldi	r24, 0xA7	; 167
     f9a:	92 e0       	ldi	r25, 0x02	; 2
     f9c:	9f 93       	push	r25
     f9e:	8f 93       	push	r24
     fa0:	8e 01       	movw	r16, r28
     fa2:	06 5e       	subi	r16, 0xE6	; 230
     fa4:	1f 4f       	sbci	r17, 0xFF	; 255
     fa6:	1f 93       	push	r17
     fa8:	0f 93       	push	r16
     faa:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
     fae:	c8 01       	movw	r24, r16
     fb0:	5a dc       	rcall	.-1868   	; 0x866 <USART_SendString>
     fb2:	60 e0       	ldi	r22, 0x00	; 0
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	39 db       	rcall	.-2446   	; 0x62e <oi_set_wheels>
     fbc:	0f b6       	in	r0, 0x3f	; 63
     fbe:	f8 94       	cli
     fc0:	de bf       	out	0x3e, r29	; 62
     fc2:	0f be       	out	0x3f, r0	; 63
     fc4:	cd bf       	out	0x3d, r28	; 61
     fc6:	85 e0       	ldi	r24, 0x05	; 5
     fc8:	af c0       	rjmp	.+350    	; 0x1128 <__stack+0x29>
     fca:	5a e0       	ldi	r21, 0x0A	; 10
     fcc:	c5 16       	cp	r12, r21
     fce:	d1 04       	cpc	r13, r1
     fd0:	40 f5       	brcc	.+80     	; 0x1022 <move_forward+0x3e4>
     fd2:	b5 01       	movw	r22, r10
     fd4:	88 27       	eor	r24, r24
     fd6:	77 fd       	sbrc	r23, 7
     fd8:	80 95       	com	r24
     fda:	98 2f       	mov	r25, r24
     fdc:	e9 d2       	rcall	.+1490   	; 0x15b0 <__floatsisf>
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	40 e2       	ldi	r20, 0x20	; 32
     fe4:	51 e4       	ldi	r21, 0x41	; 65
     fe6:	4e d2       	rcall	.+1180   	; 0x1484 <__divsf3>
     fe8:	9f 93       	push	r25
     fea:	8f 93       	push	r24
     fec:	7f 93       	push	r23
     fee:	6f 93       	push	r22
     ff0:	81 ee       	ldi	r24, 0xE1	; 225
     ff2:	92 e0       	ldi	r25, 0x02	; 2
     ff4:	9f 93       	push	r25
     ff6:	8f 93       	push	r24
     ff8:	8e 01       	movw	r16, r28
     ffa:	06 5e       	subi	r16, 0xE6	; 230
     ffc:	1f 4f       	sbci	r17, 0xFF	; 255
     ffe:	1f 93       	push	r17
    1000:	0f 93       	push	r16
    1002:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    1006:	c8 01       	movw	r24, r16
    1008:	2e dc       	rcall	.-1956   	; 0x866 <USART_SendString>
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	80 e0       	ldi	r24, 0x00	; 0
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0d db       	rcall	.-2534   	; 0x62e <oi_set_wheels>
    1014:	0f b6       	in	r0, 0x3f	; 63
    1016:	f8 94       	cli
    1018:	de bf       	out	0x3e, r29	; 62
    101a:	0f be       	out	0x3f, r0	; 63
    101c:	cd bf       	out	0x3d, r28	; 61
    101e:	86 e0       	ldi	r24, 0x06	; 6
    1020:	83 c0       	rjmp	.+262    	; 0x1128 <__stack+0x29>
    1022:	2a 30       	cpi	r18, 0x0A	; 10
    1024:	31 05       	cpc	r19, r1
    1026:	40 f5       	brcc	.+80     	; 0x1078 <move_forward+0x43a>
    1028:	b5 01       	movw	r22, r10
    102a:	88 27       	eor	r24, r24
    102c:	77 fd       	sbrc	r23, 7
    102e:	80 95       	com	r24
    1030:	98 2f       	mov	r25, r24
    1032:	be d2       	rcall	.+1404   	; 0x15b0 <__floatsisf>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	40 e2       	ldi	r20, 0x20	; 32
    103a:	51 e4       	ldi	r21, 0x41	; 65
    103c:	23 d2       	rcall	.+1094   	; 0x1484 <__divsf3>
    103e:	9f 93       	push	r25
    1040:	8f 93       	push	r24
    1042:	7f 93       	push	r23
    1044:	6f 93       	push	r22
    1046:	8c e1       	ldi	r24, 0x1C	; 28
    1048:	93 e0       	ldi	r25, 0x03	; 3
    104a:	9f 93       	push	r25
    104c:	8f 93       	push	r24
    104e:	8e 01       	movw	r16, r28
    1050:	06 5e       	subi	r16, 0xE6	; 230
    1052:	1f 4f       	sbci	r17, 0xFF	; 255
    1054:	1f 93       	push	r17
    1056:	0f 93       	push	r16
    1058:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    105c:	c8 01       	movw	r24, r16
    105e:	03 dc       	rcall	.-2042   	; 0x866 <USART_SendString>
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	e2 da       	rcall	.-2620   	; 0x62e <oi_set_wheels>
    106a:	0f b6       	in	r0, 0x3f	; 63
    106c:	f8 94       	cli
    106e:	de bf       	out	0x3e, r29	; 62
    1070:	0f be       	out	0x3f, r0	; 63
    1072:	cd bf       	out	0x3d, r28	; 61
    1074:	87 e0       	ldi	r24, 0x07	; 7
    1076:	58 c0       	rjmp	.+176    	; 0x1128 <__stack+0x29>
    1078:	0a 97       	sbiw	r24, 0x0a	; 10
    107a:	40 f5       	brcc	.+80     	; 0x10cc <move_forward+0x48e>
    107c:	b5 01       	movw	r22, r10
    107e:	88 27       	eor	r24, r24
    1080:	77 fd       	sbrc	r23, 7
    1082:	80 95       	com	r24
    1084:	98 2f       	mov	r25, r24
    1086:	94 d2       	rcall	.+1320   	; 0x15b0 <__floatsisf>
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	40 e2       	ldi	r20, 0x20	; 32
    108e:	51 e4       	ldi	r21, 0x41	; 65
    1090:	f9 d1       	rcall	.+1010   	; 0x1484 <__divsf3>
    1092:	9f 93       	push	r25
    1094:	8f 93       	push	r24
    1096:	7f 93       	push	r23
    1098:	6f 93       	push	r22
    109a:	80 e5       	ldi	r24, 0x50	; 80
    109c:	93 e0       	ldi	r25, 0x03	; 3
    109e:	9f 93       	push	r25
    10a0:	8f 93       	push	r24
    10a2:	8e 01       	movw	r16, r28
    10a4:	06 5e       	subi	r16, 0xE6	; 230
    10a6:	1f 4f       	sbci	r17, 0xFF	; 255
    10a8:	1f 93       	push	r17
    10aa:	0f 93       	push	r16
    10ac:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    10b0:	c8 01       	movw	r24, r16
    10b2:	d9 db       	rcall	.-2126   	; 0x866 <USART_SendString>
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	b8 da       	rcall	.-2704   	; 0x62e <oi_set_wheels>
    10be:	0f b6       	in	r0, 0x3f	; 63
    10c0:	f8 94       	cli
    10c2:	de bf       	out	0x3e, r29	; 62
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	cd bf       	out	0x3d, r28	; 61
    10c8:	88 e0       	ldi	r24, 0x08	; 8
    10ca:	2e c0       	rjmp	.+92     	; 0x1128 <__stack+0x29>
    10cc:	a8 14       	cp	r10, r8
    10ce:	b9 04       	cpc	r11, r9
    10d0:	0c f4       	brge	.+2      	; 0x10d4 <move_forward+0x496>
    10d2:	e0 cd       	rjmp	.-1088   	; 0xc94 <move_forward+0x56>
    10d4:	60 e0       	ldi	r22, 0x00	; 0
    10d6:	70 e0       	ldi	r23, 0x00	; 0
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	a8 da       	rcall	.-2736   	; 0x62e <oi_set_wheels>
    10de:	b5 01       	movw	r22, r10
    10e0:	88 27       	eor	r24, r24
    10e2:	77 fd       	sbrc	r23, 7
    10e4:	80 95       	com	r24
    10e6:	98 2f       	mov	r25, r24
    10e8:	63 d2       	rcall	.+1222   	; 0x15b0 <__floatsisf>
    10ea:	20 e0       	ldi	r18, 0x00	; 0
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	40 e2       	ldi	r20, 0x20	; 32
    10f0:	51 e4       	ldi	r21, 0x41	; 65
    10f2:	c8 d1       	rcall	.+912    	; 0x1484 <__divsf3>
    10f4:	9f 93       	push	r25
    10f6:	8f 93       	push	r24
    10f8:	7f 93       	push	r23
    10fa:	6f 93       	push	r22
    10fc:	85 e8       	ldi	r24, 0x85	; 133
    10fe:	93 e0       	ldi	r25, 0x03	; 3
    1100:	9f 93       	push	r25
    1102:	8f 93       	push	r24
    1104:	8e 01       	movw	r16, r28
    1106:	0f 5f       	subi	r16, 0xFF	; 255
    1108:	1f 4f       	sbci	r17, 0xFF	; 255
    110a:	1f 93       	push	r17
    110c:	0f 93       	push	r16
    110e:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    1112:	c8 01       	movw	r24, r16
    1114:	a8 db       	rcall	.-2224   	; 0x866 <USART_SendString>
    1116:	8c e9       	ldi	r24, 0x9C	; 156
    1118:	93 e0       	ldi	r25, 0x03	; 3
    111a:	a5 db       	rcall	.-2230   	; 0x866 <USART_SendString>
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	f8 94       	cli
    1120:	de bf       	out	0x3e, r29	; 62
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	cb 5a       	subi	r28, 0xAB	; 171
    112a:	df 4f       	sbci	r29, 0xFF	; 255
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	df 91       	pop	r29
    1138:	cf 91       	pop	r28
    113a:	1f 91       	pop	r17
    113c:	0f 91       	pop	r16
    113e:	ff 90       	pop	r15
    1140:	ef 90       	pop	r14
    1142:	df 90       	pop	r13
    1144:	cf 90       	pop	r12
    1146:	bf 90       	pop	r11
    1148:	af 90       	pop	r10
    114a:	9f 90       	pop	r9
    114c:	8f 90       	pop	r8
    114e:	08 95       	ret

00001150 <turn_clockwise>:
    1150:	cf 92       	push	r12
    1152:	df 92       	push	r13
    1154:	ef 92       	push	r14
    1156:	ff 92       	push	r15
    1158:	0f 93       	push	r16
    115a:	1f 93       	push	r17
    115c:	cf 93       	push	r28
    115e:	df 93       	push	r29
    1160:	cd b7       	in	r28, 0x3d	; 61
    1162:	de b7       	in	r29, 0x3e	; 62
    1164:	c4 56       	subi	r28, 0x64	; 100
    1166:	d1 09       	sbc	r29, r1
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	de bf       	out	0x3e, r29	; 62
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	cd bf       	out	0x3d, r28	; 61
    1172:	8c 01       	movw	r16, r24
    1174:	6b 01       	movw	r12, r22
    1176:	66 e9       	ldi	r22, 0x96	; 150
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	8a e6       	ldi	r24, 0x6A	; 106
    117c:	9f ef       	ldi	r25, 0xFF	; 255
    117e:	57 da       	rcall	.-2898   	; 0x62e <oi_set_wheels>
    1180:	e1 2c       	mov	r14, r1
    1182:	f1 2c       	mov	r15, r1
    1184:	2c e0       	ldi	r18, 0x0C	; 12
    1186:	c2 1a       	sub	r12, r18
    1188:	d1 08       	sbc	r13, r1
    118a:	9a c0       	rjmp	.+308    	; 0x12c0 <turn_clockwise+0x170>
    118c:	c8 01       	movw	r24, r16
    118e:	8e da       	rcall	.-2788   	; 0x6ac <oi_update>
    1190:	f8 01       	movw	r30, r16
    1192:	86 85       	ldd	r24, Z+14	; 0x0e
    1194:	97 85       	ldd	r25, Z+15	; 0x0f
    1196:	e8 1a       	sub	r14, r24
    1198:	f9 0a       	sbc	r15, r25
    119a:	86 8d       	ldd	r24, Z+30	; 0x1e
    119c:	97 8d       	ldd	r25, Z+31	; 0x1f
    119e:	81 32       	cpi	r24, 0x21	; 33
    11a0:	93 40       	sbci	r25, 0x03	; 3
    11a2:	f8 f0       	brcs	.+62     	; 0x11e2 <turn_clockwise+0x92>
    11a4:	8a ea       	ldi	r24, 0xAA	; 170
    11a6:	91 e0       	ldi	r25, 0x01	; 1
    11a8:	9f 93       	push	r25
    11aa:	8f 93       	push	r24
    11ac:	b4 d9       	rcall	.-3224   	; 0x516 <lprintf>
    11ae:	60 e0       	ldi	r22, 0x00	; 0
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	3b da       	rcall	.-2954   	; 0x62e <oi_set_wheels>
    11b8:	ff 92       	push	r15
    11ba:	ef 92       	push	r14
    11bc:	8e e9       	ldi	r24, 0x9E	; 158
    11be:	93 e0       	ldi	r25, 0x03	; 3
    11c0:	9f 93       	push	r25
    11c2:	8f 93       	push	r24
    11c4:	8e 01       	movw	r16, r28
    11c6:	07 5d       	subi	r16, 0xD7	; 215
    11c8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ca:	1f 93       	push	r17
    11cc:	0f 93       	push	r16
    11ce:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    11d2:	c8 01       	movw	r24, r16
    11d4:	48 db       	rcall	.-2416   	; 0x866 <USART_SendString>
    11d6:	0f b6       	in	r0, 0x3f	; 63
    11d8:	f8 94       	cli
    11da:	de bf       	out	0x3e, r29	; 62
    11dc:	0f be       	out	0x3f, r0	; 63
    11de:	cd bf       	out	0x3d, r28	; 61
    11e0:	8d c0       	rjmp	.+282    	; 0x12fc <turn_clockwise+0x1ac>
    11e2:	f8 01       	movw	r30, r16
    11e4:	80 a1       	ldd	r24, Z+32	; 0x20
    11e6:	91 a1       	ldd	r25, Z+33	; 0x21
    11e8:	81 32       	cpi	r24, 0x21	; 33
    11ea:	93 40       	sbci	r25, 0x03	; 3
    11ec:	f8 f0       	brcs	.+62     	; 0x122c <turn_clockwise+0xdc>
    11ee:	8a ea       	ldi	r24, 0xAA	; 170
    11f0:	91 e0       	ldi	r25, 0x01	; 1
    11f2:	9f 93       	push	r25
    11f4:	8f 93       	push	r24
    11f6:	8f d9       	rcall	.-3298   	; 0x516 <lprintf>
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	70 e0       	ldi	r23, 0x00	; 0
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	16 da       	rcall	.-3028   	; 0x62e <oi_set_wheels>
    1202:	ff 92       	push	r15
    1204:	ef 92       	push	r14
    1206:	83 ed       	ldi	r24, 0xD3	; 211
    1208:	93 e0       	ldi	r25, 0x03	; 3
    120a:	9f 93       	push	r25
    120c:	8f 93       	push	r24
    120e:	8e 01       	movw	r16, r28
    1210:	07 5d       	subi	r16, 0xD7	; 215
    1212:	1f 4f       	sbci	r17, 0xFF	; 255
    1214:	1f 93       	push	r17
    1216:	0f 93       	push	r16
    1218:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    121c:	c8 01       	movw	r24, r16
    121e:	23 db       	rcall	.-2490   	; 0x866 <USART_SendString>
    1220:	0f b6       	in	r0, 0x3f	; 63
    1222:	f8 94       	cli
    1224:	de bf       	out	0x3e, r29	; 62
    1226:	0f be       	out	0x3f, r0	; 63
    1228:	cd bf       	out	0x3d, r28	; 61
    122a:	68 c0       	rjmp	.+208    	; 0x12fc <turn_clockwise+0x1ac>
    122c:	f8 01       	movw	r30, r16
    122e:	82 a1       	ldd	r24, Z+34	; 0x22
    1230:	93 a1       	ldd	r25, Z+35	; 0x23
    1232:	81 32       	cpi	r24, 0x21	; 33
    1234:	93 40       	sbci	r25, 0x03	; 3
    1236:	f8 f0       	brcs	.+62     	; 0x1276 <turn_clockwise+0x126>
    1238:	8a ea       	ldi	r24, 0xAA	; 170
    123a:	91 e0       	ldi	r25, 0x01	; 1
    123c:	9f 93       	push	r25
    123e:	8f 93       	push	r24
    1240:	6a d9       	rcall	.-3372   	; 0x516 <lprintf>
    1242:	60 e0       	ldi	r22, 0x00	; 0
    1244:	70 e0       	ldi	r23, 0x00	; 0
    1246:	80 e0       	ldi	r24, 0x00	; 0
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	f1 d9       	rcall	.-3102   	; 0x62e <oi_set_wheels>
    124c:	ff 92       	push	r15
    124e:	ef 92       	push	r14
    1250:	89 ed       	ldi	r24, 0xD9	; 217
    1252:	93 e0       	ldi	r25, 0x03	; 3
    1254:	9f 93       	push	r25
    1256:	8f 93       	push	r24
    1258:	8e 01       	movw	r16, r28
    125a:	07 5d       	subi	r16, 0xD7	; 215
    125c:	1f 4f       	sbci	r17, 0xFF	; 255
    125e:	1f 93       	push	r17
    1260:	0f 93       	push	r16
    1262:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    1266:	c8 01       	movw	r24, r16
    1268:	fe da       	rcall	.-2564   	; 0x866 <USART_SendString>
    126a:	0f b6       	in	r0, 0x3f	; 63
    126c:	f8 94       	cli
    126e:	de bf       	out	0x3e, r29	; 62
    1270:	0f be       	out	0x3f, r0	; 63
    1272:	cd bf       	out	0x3d, r28	; 61
    1274:	43 c0       	rjmp	.+134    	; 0x12fc <turn_clockwise+0x1ac>
    1276:	f8 01       	movw	r30, r16
    1278:	84 8d       	ldd	r24, Z+28	; 0x1c
    127a:	95 8d       	ldd	r25, Z+29	; 0x1d
    127c:	81 32       	cpi	r24, 0x21	; 33
    127e:	93 40       	sbci	r25, 0x03	; 3
    1280:	f8 f0       	brcs	.+62     	; 0x12c0 <turn_clockwise+0x170>
    1282:	8a ea       	ldi	r24, 0xAA	; 170
    1284:	91 e0       	ldi	r25, 0x01	; 1
    1286:	9f 93       	push	r25
    1288:	8f 93       	push	r24
    128a:	45 d9       	rcall	.-3446   	; 0x516 <lprintf>
    128c:	60 e0       	ldi	r22, 0x00	; 0
    128e:	70 e0       	ldi	r23, 0x00	; 0
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	cc d9       	rcall	.-3176   	; 0x62e <oi_set_wheels>
    1296:	ff 92       	push	r15
    1298:	ef 92       	push	r14
    129a:	84 ea       	ldi	r24, 0xA4	; 164
    129c:	93 e0       	ldi	r25, 0x03	; 3
    129e:	9f 93       	push	r25
    12a0:	8f 93       	push	r24
    12a2:	8e 01       	movw	r16, r28
    12a4:	07 5d       	subi	r16, 0xD7	; 215
    12a6:	1f 4f       	sbci	r17, 0xFF	; 255
    12a8:	1f 93       	push	r17
    12aa:	0f 93       	push	r16
    12ac:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    12b0:	c8 01       	movw	r24, r16
    12b2:	d9 da       	rcall	.-2638   	; 0x866 <USART_SendString>
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	f8 94       	cli
    12b8:	de bf       	out	0x3e, r29	; 62
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	cd bf       	out	0x3d, r28	; 61
    12be:	1e c0       	rjmp	.+60     	; 0x12fc <turn_clockwise+0x1ac>
    12c0:	ec 14       	cp	r14, r12
    12c2:	fd 04       	cpc	r15, r13
    12c4:	0c f4       	brge	.+2      	; 0x12c8 <turn_clockwise+0x178>
    12c6:	62 cf       	rjmp	.-316    	; 0x118c <turn_clockwise+0x3c>
    12c8:	60 e0       	ldi	r22, 0x00	; 0
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	ae d9       	rcall	.-3236   	; 0x62e <oi_set_wheels>
    12d2:	ff 92       	push	r15
    12d4:	ef 92       	push	r14
    12d6:	89 e0       	ldi	r24, 0x09	; 9
    12d8:	94 e0       	ldi	r25, 0x04	; 4
    12da:	9f 93       	push	r25
    12dc:	8f 93       	push	r24
    12de:	8e 01       	movw	r16, r28
    12e0:	0f 5f       	subi	r16, 0xFF	; 255
    12e2:	1f 4f       	sbci	r17, 0xFF	; 255
    12e4:	1f 93       	push	r17
    12e6:	0f 93       	push	r16
    12e8:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
    12ec:	c8 01       	movw	r24, r16
    12ee:	bb da       	rcall	.-2698   	; 0x866 <USART_SendString>
    12f0:	0f 90       	pop	r0
    12f2:	0f 90       	pop	r0
    12f4:	0f 90       	pop	r0
    12f6:	0f 90       	pop	r0
    12f8:	0f 90       	pop	r0
    12fa:	0f 90       	pop	r0
    12fc:	cc 59       	subi	r28, 0x9C	; 156
    12fe:	df 4f       	sbci	r29, 0xFF	; 255
    1300:	0f b6       	in	r0, 0x3f	; 63
    1302:	f8 94       	cli
    1304:	de bf       	out	0x3e, r29	; 62
    1306:	0f be       	out	0x3f, r0	; 63
    1308:	cd bf       	out	0x3d, r28	; 61
    130a:	df 91       	pop	r29
    130c:	cf 91       	pop	r28
    130e:	1f 91       	pop	r17
    1310:	0f 91       	pop	r16
    1312:	ff 90       	pop	r15
    1314:	ef 90       	pop	r14
    1316:	df 90       	pop	r13
    1318:	cf 90       	pop	r12
    131a:	08 95       	ret

0000131c <reportData>:

void reportData(oi_t *sensor)
{
    131c:	0f 93       	push	r16
    131e:	1f 93       	push	r17
    1320:	cf 93       	push	r28
    1322:	df 93       	push	r29
    1324:	cd b7       	in	r28, 0x3d	; 61
    1326:	de b7       	in	r29, 0x3e	; 62
    1328:	c4 56       	subi	r28, 0x64	; 100
    132a:	d1 09       	sbc	r29, r1
    132c:	0f b6       	in	r0, 0x3f	; 63
    132e:	f8 94       	cli
    1330:	de bf       	out	0x3e, r29	; 62
    1332:	0f be       	out	0x3f, r0	; 63
    1334:	cd bf       	out	0x3d, r28	; 61
    1336:	8c 01       	movw	r16, r24
	char senDat[100];
	oi_update(sensor);
    1338:	b9 d9       	rcall	.-3214   	; 0x6ac <oi_update>
	
	sprintf(senDat, "Cliff Left: %d | Cliff FrontLeft: %d | Cliff FrontRight: %d | Cliff Right: %d | Wheel Drop Left: %d | Wheel Drop Middle: %d | Wheel Drop Left: %d", sensor->cliff_left_signal, sensor->cliff_frontleft_signal, sensor->cliff_frontright_signal, sensor->cliff_right_signal,sensor->wheeldrop_left, sensor->wheeldrop_caster, sensor->wheeldrop_right);
    133a:	f8 01       	movw	r30, r16
    133c:	80 81       	ld	r24, Z
    133e:	82 fb       	bst	r24, 2
    1340:	88 27       	eor	r24, r24
    1342:	80 f9       	bld	r24, 0
    1344:	1f 92       	push	r1
    1346:	8f 93       	push	r24
    1348:	80 81       	ld	r24, Z
    134a:	82 95       	swap	r24
    134c:	81 70       	andi	r24, 0x01	; 1
    134e:	1f 92       	push	r1
    1350:	8f 93       	push	r24
    1352:	80 81       	ld	r24, Z
    1354:	83 fb       	bst	r24, 3
    1356:	88 27       	eor	r24, r24
    1358:	80 f9       	bld	r24, 0
    135a:	1f 92       	push	r1
    135c:	8f 93       	push	r24
    135e:	83 a1       	ldd	r24, Z+35	; 0x23
    1360:	8f 93       	push	r24
    1362:	82 a1       	ldd	r24, Z+34	; 0x22
    1364:	8f 93       	push	r24
    1366:	81 a1       	ldd	r24, Z+33	; 0x21
    1368:	8f 93       	push	r24
    136a:	80 a1       	ldd	r24, Z+32	; 0x20
    136c:	8f 93       	push	r24
    136e:	87 8d       	ldd	r24, Z+31	; 0x1f
    1370:	8f 93       	push	r24
    1372:	86 8d       	ldd	r24, Z+30	; 0x1e
    1374:	8f 93       	push	r24
    1376:	85 8d       	ldd	r24, Z+29	; 0x1d
    1378:	8f 93       	push	r24
    137a:	84 8d       	ldd	r24, Z+28	; 0x1c
    137c:	8f 93       	push	r24
    137e:	88 e3       	ldi	r24, 0x38	; 56
    1380:	94 e0       	ldi	r25, 0x04	; 4
    1382:	9f 93       	push	r25
    1384:	8f 93       	push	r24
    1386:	8e 01       	movw	r16, r28
    1388:	0f 5f       	subi	r16, 0xFF	; 255
    138a:	1f 4f       	sbci	r17, 0xFF	; 255
    138c:	1f 93       	push	r17
    138e:	0f 93       	push	r16
    1390:	0e 94 0f 12 	call	0x241e	; 0x241e <sprintf>
	USART_SendString(senDat);
    1394:	c8 01       	movw	r24, r16
    1396:	67 da       	rcall	.-2866   	; 0x866 <USART_SendString>
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	f8 94       	cli
    139c:	de bf       	out	0x3e, r29	; 62
    139e:	0f be       	out	0x3f, r0	; 63
    13a0:	cd bf       	out	0x3d, r28	; 61

}
    13a2:	cc 59       	subi	r28, 0x9C	; 156
    13a4:	df 4f       	sbci	r29, 0xFF	; 255
    13a6:	0f b6       	in	r0, 0x3f	; 63
    13a8:	f8 94       	cli
    13aa:	de bf       	out	0x3e, r29	; 62
    13ac:	0f be       	out	0x3f, r0	; 63
    13ae:	cd bf       	out	0x3d, r28	; 61
    13b0:	df 91       	pop	r29
    13b2:	cf 91       	pop	r28
    13b4:	1f 91       	pop	r17
    13b6:	0f 91       	pop	r16
    13b8:	08 95       	ret

000013ba <__subsf3>:
    13ba:	50 58       	subi	r21, 0x80	; 128

000013bc <__addsf3>:
    13bc:	bb 27       	eor	r27, r27
    13be:	aa 27       	eor	r26, r26
    13c0:	0e d0       	rcall	.+28     	; 0x13de <__addsf3x>
    13c2:	48 c1       	rjmp	.+656    	; 0x1654 <__fp_round>
    13c4:	39 d1       	rcall	.+626    	; 0x1638 <__fp_pscA>
    13c6:	30 f0       	brcs	.+12     	; 0x13d4 <__addsf3+0x18>
    13c8:	3e d1       	rcall	.+636    	; 0x1646 <__fp_pscB>
    13ca:	20 f0       	brcs	.+8      	; 0x13d4 <__addsf3+0x18>
    13cc:	31 f4       	brne	.+12     	; 0x13da <__addsf3+0x1e>
    13ce:	9f 3f       	cpi	r25, 0xFF	; 255
    13d0:	11 f4       	brne	.+4      	; 0x13d6 <__addsf3+0x1a>
    13d2:	1e f4       	brtc	.+6      	; 0x13da <__addsf3+0x1e>
    13d4:	2e c1       	rjmp	.+604    	; 0x1632 <__fp_nan>
    13d6:	0e f4       	brtc	.+2      	; 0x13da <__addsf3+0x1e>
    13d8:	e0 95       	com	r30
    13da:	e7 fb       	bst	r30, 7
    13dc:	24 c1       	rjmp	.+584    	; 0x1626 <__fp_inf>

000013de <__addsf3x>:
    13de:	e9 2f       	mov	r30, r25
    13e0:	4a d1       	rcall	.+660    	; 0x1676 <__fp_split3>
    13e2:	80 f3       	brcs	.-32     	; 0x13c4 <__addsf3+0x8>
    13e4:	ba 17       	cp	r27, r26
    13e6:	62 07       	cpc	r22, r18
    13e8:	73 07       	cpc	r23, r19
    13ea:	84 07       	cpc	r24, r20
    13ec:	95 07       	cpc	r25, r21
    13ee:	18 f0       	brcs	.+6      	; 0x13f6 <__addsf3x+0x18>
    13f0:	71 f4       	brne	.+28     	; 0x140e <__addsf3x+0x30>
    13f2:	9e f5       	brtc	.+102    	; 0x145a <__addsf3x+0x7c>
    13f4:	62 c1       	rjmp	.+708    	; 0x16ba <__fp_zero>
    13f6:	0e f4       	brtc	.+2      	; 0x13fa <__addsf3x+0x1c>
    13f8:	e0 95       	com	r30
    13fa:	0b 2e       	mov	r0, r27
    13fc:	ba 2f       	mov	r27, r26
    13fe:	a0 2d       	mov	r26, r0
    1400:	0b 01       	movw	r0, r22
    1402:	b9 01       	movw	r22, r18
    1404:	90 01       	movw	r18, r0
    1406:	0c 01       	movw	r0, r24
    1408:	ca 01       	movw	r24, r20
    140a:	a0 01       	movw	r20, r0
    140c:	11 24       	eor	r1, r1
    140e:	ff 27       	eor	r31, r31
    1410:	59 1b       	sub	r21, r25
    1412:	99 f0       	breq	.+38     	; 0x143a <__addsf3x+0x5c>
    1414:	59 3f       	cpi	r21, 0xF9	; 249
    1416:	50 f4       	brcc	.+20     	; 0x142c <__addsf3x+0x4e>
    1418:	50 3e       	cpi	r21, 0xE0	; 224
    141a:	68 f1       	brcs	.+90     	; 0x1476 <__addsf3x+0x98>
    141c:	1a 16       	cp	r1, r26
    141e:	f0 40       	sbci	r31, 0x00	; 0
    1420:	a2 2f       	mov	r26, r18
    1422:	23 2f       	mov	r18, r19
    1424:	34 2f       	mov	r19, r20
    1426:	44 27       	eor	r20, r20
    1428:	58 5f       	subi	r21, 0xF8	; 248
    142a:	f3 cf       	rjmp	.-26     	; 0x1412 <__addsf3x+0x34>
    142c:	46 95       	lsr	r20
    142e:	37 95       	ror	r19
    1430:	27 95       	ror	r18
    1432:	a7 95       	ror	r26
    1434:	f0 40       	sbci	r31, 0x00	; 0
    1436:	53 95       	inc	r21
    1438:	c9 f7       	brne	.-14     	; 0x142c <__addsf3x+0x4e>
    143a:	7e f4       	brtc	.+30     	; 0x145a <__addsf3x+0x7c>
    143c:	1f 16       	cp	r1, r31
    143e:	ba 0b       	sbc	r27, r26
    1440:	62 0b       	sbc	r22, r18
    1442:	73 0b       	sbc	r23, r19
    1444:	84 0b       	sbc	r24, r20
    1446:	ba f0       	brmi	.+46     	; 0x1476 <__addsf3x+0x98>
    1448:	91 50       	subi	r25, 0x01	; 1
    144a:	a1 f0       	breq	.+40     	; 0x1474 <__addsf3x+0x96>
    144c:	ff 0f       	add	r31, r31
    144e:	bb 1f       	adc	r27, r27
    1450:	66 1f       	adc	r22, r22
    1452:	77 1f       	adc	r23, r23
    1454:	88 1f       	adc	r24, r24
    1456:	c2 f7       	brpl	.-16     	; 0x1448 <__addsf3x+0x6a>
    1458:	0e c0       	rjmp	.+28     	; 0x1476 <__addsf3x+0x98>
    145a:	ba 0f       	add	r27, r26
    145c:	62 1f       	adc	r22, r18
    145e:	73 1f       	adc	r23, r19
    1460:	84 1f       	adc	r24, r20
    1462:	48 f4       	brcc	.+18     	; 0x1476 <__addsf3x+0x98>
    1464:	87 95       	ror	r24
    1466:	77 95       	ror	r23
    1468:	67 95       	ror	r22
    146a:	b7 95       	ror	r27
    146c:	f7 95       	ror	r31
    146e:	9e 3f       	cpi	r25, 0xFE	; 254
    1470:	08 f0       	brcs	.+2      	; 0x1474 <__addsf3x+0x96>
    1472:	b3 cf       	rjmp	.-154    	; 0x13da <__addsf3+0x1e>
    1474:	93 95       	inc	r25
    1476:	88 0f       	add	r24, r24
    1478:	08 f0       	brcs	.+2      	; 0x147c <__addsf3x+0x9e>
    147a:	99 27       	eor	r25, r25
    147c:	ee 0f       	add	r30, r30
    147e:	97 95       	ror	r25
    1480:	87 95       	ror	r24
    1482:	08 95       	ret

00001484 <__divsf3>:
    1484:	0c d0       	rcall	.+24     	; 0x149e <__divsf3x>
    1486:	e6 c0       	rjmp	.+460    	; 0x1654 <__fp_round>
    1488:	de d0       	rcall	.+444    	; 0x1646 <__fp_pscB>
    148a:	40 f0       	brcs	.+16     	; 0x149c <__divsf3+0x18>
    148c:	d5 d0       	rcall	.+426    	; 0x1638 <__fp_pscA>
    148e:	30 f0       	brcs	.+12     	; 0x149c <__divsf3+0x18>
    1490:	21 f4       	brne	.+8      	; 0x149a <__divsf3+0x16>
    1492:	5f 3f       	cpi	r21, 0xFF	; 255
    1494:	19 f0       	breq	.+6      	; 0x149c <__divsf3+0x18>
    1496:	c7 c0       	rjmp	.+398    	; 0x1626 <__fp_inf>
    1498:	51 11       	cpse	r21, r1
    149a:	10 c1       	rjmp	.+544    	; 0x16bc <__fp_szero>
    149c:	ca c0       	rjmp	.+404    	; 0x1632 <__fp_nan>

0000149e <__divsf3x>:
    149e:	eb d0       	rcall	.+470    	; 0x1676 <__fp_split3>
    14a0:	98 f3       	brcs	.-26     	; 0x1488 <__divsf3+0x4>

000014a2 <__divsf3_pse>:
    14a2:	99 23       	and	r25, r25
    14a4:	c9 f3       	breq	.-14     	; 0x1498 <__divsf3+0x14>
    14a6:	55 23       	and	r21, r21
    14a8:	b1 f3       	breq	.-20     	; 0x1496 <__divsf3+0x12>
    14aa:	95 1b       	sub	r25, r21
    14ac:	55 0b       	sbc	r21, r21
    14ae:	bb 27       	eor	r27, r27
    14b0:	aa 27       	eor	r26, r26
    14b2:	62 17       	cp	r22, r18
    14b4:	73 07       	cpc	r23, r19
    14b6:	84 07       	cpc	r24, r20
    14b8:	38 f0       	brcs	.+14     	; 0x14c8 <__divsf3_pse+0x26>
    14ba:	9f 5f       	subi	r25, 0xFF	; 255
    14bc:	5f 4f       	sbci	r21, 0xFF	; 255
    14be:	22 0f       	add	r18, r18
    14c0:	33 1f       	adc	r19, r19
    14c2:	44 1f       	adc	r20, r20
    14c4:	aa 1f       	adc	r26, r26
    14c6:	a9 f3       	breq	.-22     	; 0x14b2 <__divsf3_pse+0x10>
    14c8:	33 d0       	rcall	.+102    	; 0x1530 <__divsf3_pse+0x8e>
    14ca:	0e 2e       	mov	r0, r30
    14cc:	3a f0       	brmi	.+14     	; 0x14dc <__divsf3_pse+0x3a>
    14ce:	e0 e8       	ldi	r30, 0x80	; 128
    14d0:	30 d0       	rcall	.+96     	; 0x1532 <__divsf3_pse+0x90>
    14d2:	91 50       	subi	r25, 0x01	; 1
    14d4:	50 40       	sbci	r21, 0x00	; 0
    14d6:	e6 95       	lsr	r30
    14d8:	00 1c       	adc	r0, r0
    14da:	ca f7       	brpl	.-14     	; 0x14ce <__divsf3_pse+0x2c>
    14dc:	29 d0       	rcall	.+82     	; 0x1530 <__divsf3_pse+0x8e>
    14de:	fe 2f       	mov	r31, r30
    14e0:	27 d0       	rcall	.+78     	; 0x1530 <__divsf3_pse+0x8e>
    14e2:	66 0f       	add	r22, r22
    14e4:	77 1f       	adc	r23, r23
    14e6:	88 1f       	adc	r24, r24
    14e8:	bb 1f       	adc	r27, r27
    14ea:	26 17       	cp	r18, r22
    14ec:	37 07       	cpc	r19, r23
    14ee:	48 07       	cpc	r20, r24
    14f0:	ab 07       	cpc	r26, r27
    14f2:	b0 e8       	ldi	r27, 0x80	; 128
    14f4:	09 f0       	breq	.+2      	; 0x14f8 <__divsf3_pse+0x56>
    14f6:	bb 0b       	sbc	r27, r27
    14f8:	80 2d       	mov	r24, r0
    14fa:	bf 01       	movw	r22, r30
    14fc:	ff 27       	eor	r31, r31
    14fe:	93 58       	subi	r25, 0x83	; 131
    1500:	5f 4f       	sbci	r21, 0xFF	; 255
    1502:	2a f0       	brmi	.+10     	; 0x150e <__divsf3_pse+0x6c>
    1504:	9e 3f       	cpi	r25, 0xFE	; 254
    1506:	51 05       	cpc	r21, r1
    1508:	68 f0       	brcs	.+26     	; 0x1524 <__divsf3_pse+0x82>
    150a:	8d c0       	rjmp	.+282    	; 0x1626 <__fp_inf>
    150c:	d7 c0       	rjmp	.+430    	; 0x16bc <__fp_szero>
    150e:	5f 3f       	cpi	r21, 0xFF	; 255
    1510:	ec f3       	brlt	.-6      	; 0x150c <__divsf3_pse+0x6a>
    1512:	98 3e       	cpi	r25, 0xE8	; 232
    1514:	dc f3       	brlt	.-10     	; 0x150c <__divsf3_pse+0x6a>
    1516:	86 95       	lsr	r24
    1518:	77 95       	ror	r23
    151a:	67 95       	ror	r22
    151c:	b7 95       	ror	r27
    151e:	f7 95       	ror	r31
    1520:	9f 5f       	subi	r25, 0xFF	; 255
    1522:	c9 f7       	brne	.-14     	; 0x1516 <__divsf3_pse+0x74>
    1524:	88 0f       	add	r24, r24
    1526:	91 1d       	adc	r25, r1
    1528:	96 95       	lsr	r25
    152a:	87 95       	ror	r24
    152c:	97 f9       	bld	r25, 7
    152e:	08 95       	ret
    1530:	e1 e0       	ldi	r30, 0x01	; 1
    1532:	66 0f       	add	r22, r22
    1534:	77 1f       	adc	r23, r23
    1536:	88 1f       	adc	r24, r24
    1538:	bb 1f       	adc	r27, r27
    153a:	62 17       	cp	r22, r18
    153c:	73 07       	cpc	r23, r19
    153e:	84 07       	cpc	r24, r20
    1540:	ba 07       	cpc	r27, r26
    1542:	20 f0       	brcs	.+8      	; 0x154c <__divsf3_pse+0xaa>
    1544:	62 1b       	sub	r22, r18
    1546:	73 0b       	sbc	r23, r19
    1548:	84 0b       	sbc	r24, r20
    154a:	ba 0b       	sbc	r27, r26
    154c:	ee 1f       	adc	r30, r30
    154e:	88 f7       	brcc	.-30     	; 0x1532 <__divsf3_pse+0x90>
    1550:	e0 95       	com	r30
    1552:	08 95       	ret

00001554 <__fixunssfsi>:
    1554:	98 d0       	rcall	.+304    	; 0x1686 <__fp_splitA>
    1556:	88 f0       	brcs	.+34     	; 0x157a <__fixunssfsi+0x26>
    1558:	9f 57       	subi	r25, 0x7F	; 127
    155a:	90 f0       	brcs	.+36     	; 0x1580 <__fixunssfsi+0x2c>
    155c:	b9 2f       	mov	r27, r25
    155e:	99 27       	eor	r25, r25
    1560:	b7 51       	subi	r27, 0x17	; 23
    1562:	a0 f0       	brcs	.+40     	; 0x158c <__fixunssfsi+0x38>
    1564:	d1 f0       	breq	.+52     	; 0x159a <__fixunssfsi+0x46>
    1566:	66 0f       	add	r22, r22
    1568:	77 1f       	adc	r23, r23
    156a:	88 1f       	adc	r24, r24
    156c:	99 1f       	adc	r25, r25
    156e:	1a f0       	brmi	.+6      	; 0x1576 <__fixunssfsi+0x22>
    1570:	ba 95       	dec	r27
    1572:	c9 f7       	brne	.-14     	; 0x1566 <__fixunssfsi+0x12>
    1574:	12 c0       	rjmp	.+36     	; 0x159a <__fixunssfsi+0x46>
    1576:	b1 30       	cpi	r27, 0x01	; 1
    1578:	81 f0       	breq	.+32     	; 0x159a <__fixunssfsi+0x46>
    157a:	9f d0       	rcall	.+318    	; 0x16ba <__fp_zero>
    157c:	b1 e0       	ldi	r27, 0x01	; 1
    157e:	08 95       	ret
    1580:	9c c0       	rjmp	.+312    	; 0x16ba <__fp_zero>
    1582:	67 2f       	mov	r22, r23
    1584:	78 2f       	mov	r23, r24
    1586:	88 27       	eor	r24, r24
    1588:	b8 5f       	subi	r27, 0xF8	; 248
    158a:	39 f0       	breq	.+14     	; 0x159a <__fixunssfsi+0x46>
    158c:	b9 3f       	cpi	r27, 0xF9	; 249
    158e:	cc f3       	brlt	.-14     	; 0x1582 <__fixunssfsi+0x2e>
    1590:	86 95       	lsr	r24
    1592:	77 95       	ror	r23
    1594:	67 95       	ror	r22
    1596:	b3 95       	inc	r27
    1598:	d9 f7       	brne	.-10     	; 0x1590 <__fixunssfsi+0x3c>
    159a:	3e f4       	brtc	.+14     	; 0x15aa <__fixunssfsi+0x56>
    159c:	90 95       	com	r25
    159e:	80 95       	com	r24
    15a0:	70 95       	com	r23
    15a2:	61 95       	neg	r22
    15a4:	7f 4f       	sbci	r23, 0xFF	; 255
    15a6:	8f 4f       	sbci	r24, 0xFF	; 255
    15a8:	9f 4f       	sbci	r25, 0xFF	; 255
    15aa:	08 95       	ret

000015ac <__floatunsisf>:
    15ac:	e8 94       	clt
    15ae:	09 c0       	rjmp	.+18     	; 0x15c2 <__floatsisf+0x12>

000015b0 <__floatsisf>:
    15b0:	97 fb       	bst	r25, 7
    15b2:	3e f4       	brtc	.+14     	; 0x15c2 <__floatsisf+0x12>
    15b4:	90 95       	com	r25
    15b6:	80 95       	com	r24
    15b8:	70 95       	com	r23
    15ba:	61 95       	neg	r22
    15bc:	7f 4f       	sbci	r23, 0xFF	; 255
    15be:	8f 4f       	sbci	r24, 0xFF	; 255
    15c0:	9f 4f       	sbci	r25, 0xFF	; 255
    15c2:	99 23       	and	r25, r25
    15c4:	a9 f0       	breq	.+42     	; 0x15f0 <__floatsisf+0x40>
    15c6:	f9 2f       	mov	r31, r25
    15c8:	96 e9       	ldi	r25, 0x96	; 150
    15ca:	bb 27       	eor	r27, r27
    15cc:	93 95       	inc	r25
    15ce:	f6 95       	lsr	r31
    15d0:	87 95       	ror	r24
    15d2:	77 95       	ror	r23
    15d4:	67 95       	ror	r22
    15d6:	b7 95       	ror	r27
    15d8:	f1 11       	cpse	r31, r1
    15da:	f8 cf       	rjmp	.-16     	; 0x15cc <__floatsisf+0x1c>
    15dc:	fa f4       	brpl	.+62     	; 0x161c <__floatsisf+0x6c>
    15de:	bb 0f       	add	r27, r27
    15e0:	11 f4       	brne	.+4      	; 0x15e6 <__floatsisf+0x36>
    15e2:	60 ff       	sbrs	r22, 0
    15e4:	1b c0       	rjmp	.+54     	; 0x161c <__floatsisf+0x6c>
    15e6:	6f 5f       	subi	r22, 0xFF	; 255
    15e8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ea:	8f 4f       	sbci	r24, 0xFF	; 255
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255
    15ee:	16 c0       	rjmp	.+44     	; 0x161c <__floatsisf+0x6c>
    15f0:	88 23       	and	r24, r24
    15f2:	11 f0       	breq	.+4      	; 0x15f8 <__floatsisf+0x48>
    15f4:	96 e9       	ldi	r25, 0x96	; 150
    15f6:	11 c0       	rjmp	.+34     	; 0x161a <__floatsisf+0x6a>
    15f8:	77 23       	and	r23, r23
    15fa:	21 f0       	breq	.+8      	; 0x1604 <__floatsisf+0x54>
    15fc:	9e e8       	ldi	r25, 0x8E	; 142
    15fe:	87 2f       	mov	r24, r23
    1600:	76 2f       	mov	r23, r22
    1602:	05 c0       	rjmp	.+10     	; 0x160e <__floatsisf+0x5e>
    1604:	66 23       	and	r22, r22
    1606:	71 f0       	breq	.+28     	; 0x1624 <__floatsisf+0x74>
    1608:	96 e8       	ldi	r25, 0x86	; 134
    160a:	86 2f       	mov	r24, r22
    160c:	70 e0       	ldi	r23, 0x00	; 0
    160e:	60 e0       	ldi	r22, 0x00	; 0
    1610:	2a f0       	brmi	.+10     	; 0x161c <__floatsisf+0x6c>
    1612:	9a 95       	dec	r25
    1614:	66 0f       	add	r22, r22
    1616:	77 1f       	adc	r23, r23
    1618:	88 1f       	adc	r24, r24
    161a:	da f7       	brpl	.-10     	; 0x1612 <__floatsisf+0x62>
    161c:	88 0f       	add	r24, r24
    161e:	96 95       	lsr	r25
    1620:	87 95       	ror	r24
    1622:	97 f9       	bld	r25, 7
    1624:	08 95       	ret

00001626 <__fp_inf>:
    1626:	97 f9       	bld	r25, 7
    1628:	9f 67       	ori	r25, 0x7F	; 127
    162a:	80 e8       	ldi	r24, 0x80	; 128
    162c:	70 e0       	ldi	r23, 0x00	; 0
    162e:	60 e0       	ldi	r22, 0x00	; 0
    1630:	08 95       	ret

00001632 <__fp_nan>:
    1632:	9f ef       	ldi	r25, 0xFF	; 255
    1634:	80 ec       	ldi	r24, 0xC0	; 192
    1636:	08 95       	ret

00001638 <__fp_pscA>:
    1638:	00 24       	eor	r0, r0
    163a:	0a 94       	dec	r0
    163c:	16 16       	cp	r1, r22
    163e:	17 06       	cpc	r1, r23
    1640:	18 06       	cpc	r1, r24
    1642:	09 06       	cpc	r0, r25
    1644:	08 95       	ret

00001646 <__fp_pscB>:
    1646:	00 24       	eor	r0, r0
    1648:	0a 94       	dec	r0
    164a:	12 16       	cp	r1, r18
    164c:	13 06       	cpc	r1, r19
    164e:	14 06       	cpc	r1, r20
    1650:	05 06       	cpc	r0, r21
    1652:	08 95       	ret

00001654 <__fp_round>:
    1654:	09 2e       	mov	r0, r25
    1656:	03 94       	inc	r0
    1658:	00 0c       	add	r0, r0
    165a:	11 f4       	brne	.+4      	; 0x1660 <__fp_round+0xc>
    165c:	88 23       	and	r24, r24
    165e:	52 f0       	brmi	.+20     	; 0x1674 <__fp_round+0x20>
    1660:	bb 0f       	add	r27, r27
    1662:	40 f4       	brcc	.+16     	; 0x1674 <__fp_round+0x20>
    1664:	bf 2b       	or	r27, r31
    1666:	11 f4       	brne	.+4      	; 0x166c <__fp_round+0x18>
    1668:	60 ff       	sbrs	r22, 0
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <__fp_round+0x20>
    166c:	6f 5f       	subi	r22, 0xFF	; 255
    166e:	7f 4f       	sbci	r23, 0xFF	; 255
    1670:	8f 4f       	sbci	r24, 0xFF	; 255
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	08 95       	ret

00001676 <__fp_split3>:
    1676:	57 fd       	sbrc	r21, 7
    1678:	90 58       	subi	r25, 0x80	; 128
    167a:	44 0f       	add	r20, r20
    167c:	55 1f       	adc	r21, r21
    167e:	59 f0       	breq	.+22     	; 0x1696 <__fp_splitA+0x10>
    1680:	5f 3f       	cpi	r21, 0xFF	; 255
    1682:	71 f0       	breq	.+28     	; 0x16a0 <__fp_splitA+0x1a>
    1684:	47 95       	ror	r20

00001686 <__fp_splitA>:
    1686:	88 0f       	add	r24, r24
    1688:	97 fb       	bst	r25, 7
    168a:	99 1f       	adc	r25, r25
    168c:	61 f0       	breq	.+24     	; 0x16a6 <__fp_splitA+0x20>
    168e:	9f 3f       	cpi	r25, 0xFF	; 255
    1690:	79 f0       	breq	.+30     	; 0x16b0 <__fp_splitA+0x2a>
    1692:	87 95       	ror	r24
    1694:	08 95       	ret
    1696:	12 16       	cp	r1, r18
    1698:	13 06       	cpc	r1, r19
    169a:	14 06       	cpc	r1, r20
    169c:	55 1f       	adc	r21, r21
    169e:	f2 cf       	rjmp	.-28     	; 0x1684 <__fp_split3+0xe>
    16a0:	46 95       	lsr	r20
    16a2:	f1 df       	rcall	.-30     	; 0x1686 <__fp_splitA>
    16a4:	08 c0       	rjmp	.+16     	; 0x16b6 <__fp_splitA+0x30>
    16a6:	16 16       	cp	r1, r22
    16a8:	17 06       	cpc	r1, r23
    16aa:	18 06       	cpc	r1, r24
    16ac:	99 1f       	adc	r25, r25
    16ae:	f1 cf       	rjmp	.-30     	; 0x1692 <__fp_splitA+0xc>
    16b0:	86 95       	lsr	r24
    16b2:	71 05       	cpc	r23, r1
    16b4:	61 05       	cpc	r22, r1
    16b6:	08 94       	sec
    16b8:	08 95       	ret

000016ba <__fp_zero>:
    16ba:	e8 94       	clt

000016bc <__fp_szero>:
    16bc:	bb 27       	eor	r27, r27
    16be:	66 27       	eor	r22, r22
    16c0:	77 27       	eor	r23, r23
    16c2:	cb 01       	movw	r24, r22
    16c4:	97 f9       	bld	r25, 7
    16c6:	08 95       	ret

000016c8 <__mulsf3>:
    16c8:	0b d0       	rcall	.+22     	; 0x16e0 <__mulsf3x>
    16ca:	c4 cf       	rjmp	.-120    	; 0x1654 <__fp_round>
    16cc:	b5 df       	rcall	.-150    	; 0x1638 <__fp_pscA>
    16ce:	28 f0       	brcs	.+10     	; 0x16da <__mulsf3+0x12>
    16d0:	ba df       	rcall	.-140    	; 0x1646 <__fp_pscB>
    16d2:	18 f0       	brcs	.+6      	; 0x16da <__mulsf3+0x12>
    16d4:	95 23       	and	r25, r21
    16d6:	09 f0       	breq	.+2      	; 0x16da <__mulsf3+0x12>
    16d8:	a6 cf       	rjmp	.-180    	; 0x1626 <__fp_inf>
    16da:	ab cf       	rjmp	.-170    	; 0x1632 <__fp_nan>
    16dc:	11 24       	eor	r1, r1
    16de:	ee cf       	rjmp	.-36     	; 0x16bc <__fp_szero>

000016e0 <__mulsf3x>:
    16e0:	ca df       	rcall	.-108    	; 0x1676 <__fp_split3>
    16e2:	a0 f3       	brcs	.-24     	; 0x16cc <__mulsf3+0x4>

000016e4 <__mulsf3_pse>:
    16e4:	95 9f       	mul	r25, r21
    16e6:	d1 f3       	breq	.-12     	; 0x16dc <__mulsf3+0x14>
    16e8:	95 0f       	add	r25, r21
    16ea:	50 e0       	ldi	r21, 0x00	; 0
    16ec:	55 1f       	adc	r21, r21
    16ee:	62 9f       	mul	r22, r18
    16f0:	f0 01       	movw	r30, r0
    16f2:	72 9f       	mul	r23, r18
    16f4:	bb 27       	eor	r27, r27
    16f6:	f0 0d       	add	r31, r0
    16f8:	b1 1d       	adc	r27, r1
    16fa:	63 9f       	mul	r22, r19
    16fc:	aa 27       	eor	r26, r26
    16fe:	f0 0d       	add	r31, r0
    1700:	b1 1d       	adc	r27, r1
    1702:	aa 1f       	adc	r26, r26
    1704:	64 9f       	mul	r22, r20
    1706:	66 27       	eor	r22, r22
    1708:	b0 0d       	add	r27, r0
    170a:	a1 1d       	adc	r26, r1
    170c:	66 1f       	adc	r22, r22
    170e:	82 9f       	mul	r24, r18
    1710:	22 27       	eor	r18, r18
    1712:	b0 0d       	add	r27, r0
    1714:	a1 1d       	adc	r26, r1
    1716:	62 1f       	adc	r22, r18
    1718:	73 9f       	mul	r23, r19
    171a:	b0 0d       	add	r27, r0
    171c:	a1 1d       	adc	r26, r1
    171e:	62 1f       	adc	r22, r18
    1720:	83 9f       	mul	r24, r19
    1722:	a0 0d       	add	r26, r0
    1724:	61 1d       	adc	r22, r1
    1726:	22 1f       	adc	r18, r18
    1728:	74 9f       	mul	r23, r20
    172a:	33 27       	eor	r19, r19
    172c:	a0 0d       	add	r26, r0
    172e:	61 1d       	adc	r22, r1
    1730:	23 1f       	adc	r18, r19
    1732:	84 9f       	mul	r24, r20
    1734:	60 0d       	add	r22, r0
    1736:	21 1d       	adc	r18, r1
    1738:	82 2f       	mov	r24, r18
    173a:	76 2f       	mov	r23, r22
    173c:	6a 2f       	mov	r22, r26
    173e:	11 24       	eor	r1, r1
    1740:	9f 57       	subi	r25, 0x7F	; 127
    1742:	50 40       	sbci	r21, 0x00	; 0
    1744:	8a f0       	brmi	.+34     	; 0x1768 <__mulsf3_pse+0x84>
    1746:	e1 f0       	breq	.+56     	; 0x1780 <__mulsf3_pse+0x9c>
    1748:	88 23       	and	r24, r24
    174a:	4a f0       	brmi	.+18     	; 0x175e <__mulsf3_pse+0x7a>
    174c:	ee 0f       	add	r30, r30
    174e:	ff 1f       	adc	r31, r31
    1750:	bb 1f       	adc	r27, r27
    1752:	66 1f       	adc	r22, r22
    1754:	77 1f       	adc	r23, r23
    1756:	88 1f       	adc	r24, r24
    1758:	91 50       	subi	r25, 0x01	; 1
    175a:	50 40       	sbci	r21, 0x00	; 0
    175c:	a9 f7       	brne	.-22     	; 0x1748 <__mulsf3_pse+0x64>
    175e:	9e 3f       	cpi	r25, 0xFE	; 254
    1760:	51 05       	cpc	r21, r1
    1762:	70 f0       	brcs	.+28     	; 0x1780 <__mulsf3_pse+0x9c>
    1764:	60 cf       	rjmp	.-320    	; 0x1626 <__fp_inf>
    1766:	aa cf       	rjmp	.-172    	; 0x16bc <__fp_szero>
    1768:	5f 3f       	cpi	r21, 0xFF	; 255
    176a:	ec f3       	brlt	.-6      	; 0x1766 <__mulsf3_pse+0x82>
    176c:	98 3e       	cpi	r25, 0xE8	; 232
    176e:	dc f3       	brlt	.-10     	; 0x1766 <__mulsf3_pse+0x82>
    1770:	86 95       	lsr	r24
    1772:	77 95       	ror	r23
    1774:	67 95       	ror	r22
    1776:	b7 95       	ror	r27
    1778:	f7 95       	ror	r31
    177a:	e7 95       	ror	r30
    177c:	9f 5f       	subi	r25, 0xFF	; 255
    177e:	c1 f7       	brne	.-16     	; 0x1770 <__mulsf3_pse+0x8c>
    1780:	fe 2b       	or	r31, r30
    1782:	88 0f       	add	r24, r24
    1784:	91 1d       	adc	r25, r1
    1786:	96 95       	lsr	r25
    1788:	87 95       	ror	r24
    178a:	97 f9       	bld	r25, 7
    178c:	08 95       	ret

0000178e <vfprintf>:
    178e:	2f 92       	push	r2
    1790:	3f 92       	push	r3
    1792:	4f 92       	push	r4
    1794:	5f 92       	push	r5
    1796:	6f 92       	push	r6
    1798:	7f 92       	push	r7
    179a:	8f 92       	push	r8
    179c:	9f 92       	push	r9
    179e:	af 92       	push	r10
    17a0:	bf 92       	push	r11
    17a2:	cf 92       	push	r12
    17a4:	df 92       	push	r13
    17a6:	ef 92       	push	r14
    17a8:	ff 92       	push	r15
    17aa:	0f 93       	push	r16
    17ac:	1f 93       	push	r17
    17ae:	cf 93       	push	r28
    17b0:	df 93       	push	r29
    17b2:	cd b7       	in	r28, 0x3d	; 61
    17b4:	de b7       	in	r29, 0x3e	; 62
    17b6:	62 97       	sbiw	r28, 0x12	; 18
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	f8 94       	cli
    17bc:	de bf       	out	0x3e, r29	; 62
    17be:	0f be       	out	0x3f, r0	; 63
    17c0:	cd bf       	out	0x3d, r28	; 61
    17c2:	7c 01       	movw	r14, r24
    17c4:	1b 01       	movw	r2, r22
    17c6:	6a 01       	movw	r12, r20
    17c8:	fc 01       	movw	r30, r24
    17ca:	17 82       	std	Z+7, r1	; 0x07
    17cc:	16 82       	std	Z+6, r1	; 0x06
    17ce:	83 81       	ldd	r24, Z+3	; 0x03
    17d0:	81 fd       	sbrc	r24, 1
    17d2:	03 c0       	rjmp	.+6      	; 0x17da <vfprintf+0x4c>
    17d4:	4e c3       	rjmp	.+1692   	; 0x1e72 <vfprintf+0x6e4>
    17d6:	65 01       	movw	r12, r10
    17d8:	05 c0       	rjmp	.+10     	; 0x17e4 <vfprintf+0x56>
    17da:	88 24       	eor	r8, r8
    17dc:	83 94       	inc	r8
    17de:	91 2c       	mov	r9, r1
    17e0:	8c 0e       	add	r8, r28
    17e2:	9d 1e       	adc	r9, r29
    17e4:	f7 01       	movw	r30, r14
    17e6:	93 81       	ldd	r25, Z+3	; 0x03
    17e8:	f1 01       	movw	r30, r2
    17ea:	93 fd       	sbrc	r25, 3
    17ec:	85 91       	lpm	r24, Z+
    17ee:	93 ff       	sbrs	r25, 3
    17f0:	81 91       	ld	r24, Z+
    17f2:	1f 01       	movw	r2, r30
    17f4:	88 23       	and	r24, r24
    17f6:	09 f4       	brne	.+2      	; 0x17fa <vfprintf+0x6c>
    17f8:	38 c3       	rjmp	.+1648   	; 0x1e6a <vfprintf+0x6dc>
    17fa:	85 32       	cpi	r24, 0x25	; 37
    17fc:	39 f4       	brne	.+14     	; 0x180c <vfprintf+0x7e>
    17fe:	93 fd       	sbrc	r25, 3
    1800:	85 91       	lpm	r24, Z+
    1802:	93 ff       	sbrs	r25, 3
    1804:	81 91       	ld	r24, Z+
    1806:	1f 01       	movw	r2, r30
    1808:	85 32       	cpi	r24, 0x25	; 37
    180a:	29 f4       	brne	.+10     	; 0x1816 <vfprintf+0x88>
    180c:	b7 01       	movw	r22, r14
    180e:	90 e0       	ldi	r25, 0x00	; 0
    1810:	da d5       	rcall	.+2996   	; 0x23c6 <fputc>
    1812:	56 01       	movw	r10, r12
    1814:	e0 cf       	rjmp	.-64     	; 0x17d6 <vfprintf+0x48>
    1816:	71 2c       	mov	r7, r1
    1818:	61 2c       	mov	r6, r1
    181a:	20 e0       	ldi	r18, 0x00	; 0
    181c:	20 32       	cpi	r18, 0x20	; 32
    181e:	a8 f4       	brcc	.+42     	; 0x184a <vfprintf+0xbc>
    1820:	8b 32       	cpi	r24, 0x2B	; 43
    1822:	61 f0       	breq	.+24     	; 0x183c <vfprintf+0xae>
    1824:	28 f4       	brcc	.+10     	; 0x1830 <vfprintf+0xa2>
    1826:	80 32       	cpi	r24, 0x20	; 32
    1828:	51 f0       	breq	.+20     	; 0x183e <vfprintf+0xb0>
    182a:	83 32       	cpi	r24, 0x23	; 35
    182c:	71 f4       	brne	.+28     	; 0x184a <vfprintf+0xbc>
    182e:	0b c0       	rjmp	.+22     	; 0x1846 <vfprintf+0xb8>
    1830:	8d 32       	cpi	r24, 0x2D	; 45
    1832:	39 f0       	breq	.+14     	; 0x1842 <vfprintf+0xb4>
    1834:	80 33       	cpi	r24, 0x30	; 48
    1836:	49 f4       	brne	.+18     	; 0x184a <vfprintf+0xbc>
    1838:	21 60       	ori	r18, 0x01	; 1
    183a:	28 c0       	rjmp	.+80     	; 0x188c <vfprintf+0xfe>
    183c:	22 60       	ori	r18, 0x02	; 2
    183e:	24 60       	ori	r18, 0x04	; 4
    1840:	25 c0       	rjmp	.+74     	; 0x188c <vfprintf+0xfe>
    1842:	28 60       	ori	r18, 0x08	; 8
    1844:	23 c0       	rjmp	.+70     	; 0x188c <vfprintf+0xfe>
    1846:	20 61       	ori	r18, 0x10	; 16
    1848:	21 c0       	rjmp	.+66     	; 0x188c <vfprintf+0xfe>
    184a:	27 fd       	sbrc	r18, 7
    184c:	27 c0       	rjmp	.+78     	; 0x189c <vfprintf+0x10e>
    184e:	38 2f       	mov	r19, r24
    1850:	30 53       	subi	r19, 0x30	; 48
    1852:	3a 30       	cpi	r19, 0x0A	; 10
    1854:	78 f4       	brcc	.+30     	; 0x1874 <vfprintf+0xe6>
    1856:	26 ff       	sbrs	r18, 6
    1858:	06 c0       	rjmp	.+12     	; 0x1866 <vfprintf+0xd8>
    185a:	fa e0       	ldi	r31, 0x0A	; 10
    185c:	7f 9e       	mul	r7, r31
    185e:	30 0d       	add	r19, r0
    1860:	11 24       	eor	r1, r1
    1862:	73 2e       	mov	r7, r19
    1864:	13 c0       	rjmp	.+38     	; 0x188c <vfprintf+0xfe>
    1866:	4a e0       	ldi	r20, 0x0A	; 10
    1868:	64 9e       	mul	r6, r20
    186a:	30 0d       	add	r19, r0
    186c:	11 24       	eor	r1, r1
    186e:	63 2e       	mov	r6, r19
    1870:	20 62       	ori	r18, 0x20	; 32
    1872:	0c c0       	rjmp	.+24     	; 0x188c <vfprintf+0xfe>
    1874:	8e 32       	cpi	r24, 0x2E	; 46
    1876:	21 f4       	brne	.+8      	; 0x1880 <vfprintf+0xf2>
    1878:	26 fd       	sbrc	r18, 6
    187a:	f7 c2       	rjmp	.+1518   	; 0x1e6a <vfprintf+0x6dc>
    187c:	20 64       	ori	r18, 0x40	; 64
    187e:	06 c0       	rjmp	.+12     	; 0x188c <vfprintf+0xfe>
    1880:	8c 36       	cpi	r24, 0x6C	; 108
    1882:	11 f4       	brne	.+4      	; 0x1888 <vfprintf+0xfa>
    1884:	20 68       	ori	r18, 0x80	; 128
    1886:	02 c0       	rjmp	.+4      	; 0x188c <vfprintf+0xfe>
    1888:	88 36       	cpi	r24, 0x68	; 104
    188a:	41 f4       	brne	.+16     	; 0x189c <vfprintf+0x10e>
    188c:	f1 01       	movw	r30, r2
    188e:	93 fd       	sbrc	r25, 3
    1890:	85 91       	lpm	r24, Z+
    1892:	93 ff       	sbrs	r25, 3
    1894:	81 91       	ld	r24, Z+
    1896:	1f 01       	movw	r2, r30
    1898:	81 11       	cpse	r24, r1
    189a:	c0 cf       	rjmp	.-128    	; 0x181c <vfprintf+0x8e>
    189c:	98 2f       	mov	r25, r24
    189e:	95 54       	subi	r25, 0x45	; 69
    18a0:	93 30       	cpi	r25, 0x03	; 3
    18a2:	18 f4       	brcc	.+6      	; 0x18aa <vfprintf+0x11c>
    18a4:	20 61       	ori	r18, 0x10	; 16
    18a6:	80 5e       	subi	r24, 0xE0	; 224
    18a8:	06 c0       	rjmp	.+12     	; 0x18b6 <vfprintf+0x128>
    18aa:	98 2f       	mov	r25, r24
    18ac:	95 56       	subi	r25, 0x65	; 101
    18ae:	93 30       	cpi	r25, 0x03	; 3
    18b0:	08 f0       	brcs	.+2      	; 0x18b4 <vfprintf+0x126>
    18b2:	94 c1       	rjmp	.+808    	; 0x1bdc <vfprintf+0x44e>
    18b4:	2f 7e       	andi	r18, 0xEF	; 239
    18b6:	26 fd       	sbrc	r18, 6
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <vfprintf+0x130>
    18ba:	16 e0       	ldi	r17, 0x06	; 6
    18bc:	71 2e       	mov	r7, r17
    18be:	bf e3       	ldi	r27, 0x3F	; 63
    18c0:	5b 2e       	mov	r5, r27
    18c2:	52 22       	and	r5, r18
    18c4:	85 36       	cpi	r24, 0x65	; 101
    18c6:	19 f4       	brne	.+6      	; 0x18ce <vfprintf+0x140>
    18c8:	f0 e4       	ldi	r31, 0x40	; 64
    18ca:	5f 2a       	or	r5, r31
    18cc:	07 c0       	rjmp	.+14     	; 0x18dc <vfprintf+0x14e>
    18ce:	86 36       	cpi	r24, 0x66	; 102
    18d0:	19 f4       	brne	.+6      	; 0x18d8 <vfprintf+0x14a>
    18d2:	40 e8       	ldi	r20, 0x80	; 128
    18d4:	54 2a       	or	r5, r20
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <vfprintf+0x14e>
    18d8:	71 10       	cpse	r7, r1
    18da:	7a 94       	dec	r7
    18dc:	57 fe       	sbrs	r5, 7
    18de:	07 c0       	rjmp	.+14     	; 0x18ee <vfprintf+0x160>
    18e0:	5b e3       	ldi	r21, 0x3B	; 59
    18e2:	57 15       	cp	r21, r7
    18e4:	48 f0       	brcs	.+18     	; 0x18f8 <vfprintf+0x16a>
    18e6:	47 2c       	mov	r4, r7
    18e8:	43 94       	inc	r4
    18ea:	27 e0       	ldi	r18, 0x07	; 7
    18ec:	0d c0       	rjmp	.+26     	; 0x1908 <vfprintf+0x17a>
    18ee:	87 e0       	ldi	r24, 0x07	; 7
    18f0:	87 15       	cp	r24, r7
    18f2:	30 f0       	brcs	.+12     	; 0x1900 <vfprintf+0x172>
    18f4:	27 2d       	mov	r18, r7
    18f6:	07 c0       	rjmp	.+14     	; 0x1906 <vfprintf+0x178>
    18f8:	27 e0       	ldi	r18, 0x07	; 7
    18fa:	ac e3       	ldi	r26, 0x3C	; 60
    18fc:	4a 2e       	mov	r4, r26
    18fe:	04 c0       	rjmp	.+8      	; 0x1908 <vfprintf+0x17a>
    1900:	27 e0       	ldi	r18, 0x07	; 7
    1902:	f7 e0       	ldi	r31, 0x07	; 7
    1904:	7f 2e       	mov	r7, r31
    1906:	41 2c       	mov	r4, r1
    1908:	56 01       	movw	r10, r12
    190a:	94 e0       	ldi	r25, 0x04	; 4
    190c:	a9 0e       	add	r10, r25
    190e:	b1 1c       	adc	r11, r1
    1910:	f6 01       	movw	r30, r12
    1912:	60 81       	ld	r22, Z
    1914:	71 81       	ldd	r23, Z+1	; 0x01
    1916:	82 81       	ldd	r24, Z+2	; 0x02
    1918:	93 81       	ldd	r25, Z+3	; 0x03
    191a:	04 2d       	mov	r16, r4
    191c:	a4 01       	movw	r20, r8
    191e:	4e d4       	rcall	.+2204   	; 0x21bc <__ftoa_engine>
    1920:	8c 01       	movw	r16, r24
    1922:	49 81       	ldd	r20, Y+1	; 0x01
    1924:	4c 87       	std	Y+12, r20	; 0x0c
    1926:	40 ff       	sbrs	r20, 0
    1928:	02 c0       	rjmp	.+4      	; 0x192e <vfprintf+0x1a0>
    192a:	43 ff       	sbrs	r20, 3
    192c:	07 c0       	rjmp	.+14     	; 0x193c <vfprintf+0x1ae>
    192e:	51 fc       	sbrc	r5, 1
    1930:	08 c0       	rjmp	.+16     	; 0x1942 <vfprintf+0x1b4>
    1932:	52 fe       	sbrs	r5, 2
    1934:	09 c0       	rjmp	.+18     	; 0x1948 <vfprintf+0x1ba>
    1936:	e0 e2       	ldi	r30, 0x20	; 32
    1938:	de 2e       	mov	r13, r30
    193a:	07 c0       	rjmp	.+14     	; 0x194a <vfprintf+0x1bc>
    193c:	7d e2       	ldi	r23, 0x2D	; 45
    193e:	d7 2e       	mov	r13, r23
    1940:	04 c0       	rjmp	.+8      	; 0x194a <vfprintf+0x1bc>
    1942:	6b e2       	ldi	r22, 0x2B	; 43
    1944:	d6 2e       	mov	r13, r22
    1946:	01 c0       	rjmp	.+2      	; 0x194a <vfprintf+0x1bc>
    1948:	d1 2c       	mov	r13, r1
    194a:	8c 85       	ldd	r24, Y+12	; 0x0c
    194c:	8c 70       	andi	r24, 0x0C	; 12
    194e:	89 f1       	breq	.+98     	; 0x19b2 <vfprintf+0x224>
    1950:	dd 20       	and	r13, r13
    1952:	11 f0       	breq	.+4      	; 0x1958 <vfprintf+0x1ca>
    1954:	84 e0       	ldi	r24, 0x04	; 4
    1956:	01 c0       	rjmp	.+2      	; 0x195a <vfprintf+0x1cc>
    1958:	83 e0       	ldi	r24, 0x03	; 3
    195a:	86 15       	cp	r24, r6
    195c:	10 f0       	brcs	.+4      	; 0x1962 <vfprintf+0x1d4>
    195e:	61 2c       	mov	r6, r1
    1960:	0a c0       	rjmp	.+20     	; 0x1976 <vfprintf+0x1e8>
    1962:	68 1a       	sub	r6, r24
    1964:	53 fc       	sbrc	r5, 3
    1966:	07 c0       	rjmp	.+14     	; 0x1976 <vfprintf+0x1e8>
    1968:	b7 01       	movw	r22, r14
    196a:	80 e2       	ldi	r24, 0x20	; 32
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	2b d5       	rcall	.+2646   	; 0x23c6 <fputc>
    1970:	6a 94       	dec	r6
    1972:	d1 f7       	brne	.-12     	; 0x1968 <vfprintf+0x1da>
    1974:	f4 cf       	rjmp	.-24     	; 0x195e <vfprintf+0x1d0>
    1976:	dd 20       	and	r13, r13
    1978:	21 f0       	breq	.+8      	; 0x1982 <vfprintf+0x1f4>
    197a:	b7 01       	movw	r22, r14
    197c:	8d 2d       	mov	r24, r13
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	22 d5       	rcall	.+2628   	; 0x23c6 <fputc>
    1982:	5c 85       	ldd	r21, Y+12	; 0x0c
    1984:	53 fd       	sbrc	r21, 3
    1986:	03 c0       	rjmp	.+6      	; 0x198e <vfprintf+0x200>
    1988:	00 e9       	ldi	r16, 0x90	; 144
    198a:	10 e0       	ldi	r17, 0x00	; 0
    198c:	0b c0       	rjmp	.+22     	; 0x19a4 <vfprintf+0x216>
    198e:	0c e8       	ldi	r16, 0x8C	; 140
    1990:	10 e0       	ldi	r17, 0x00	; 0
    1992:	08 c0       	rjmp	.+16     	; 0x19a4 <vfprintf+0x216>
    1994:	51 10       	cpse	r5, r1
    1996:	80 52       	subi	r24, 0x20	; 32
    1998:	b7 01       	movw	r22, r14
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	14 d5       	rcall	.+2600   	; 0x23c6 <fputc>
    199e:	0f 5f       	subi	r16, 0xFF	; 255
    19a0:	1f 4f       	sbci	r17, 0xFF	; 255
    19a2:	02 c0       	rjmp	.+4      	; 0x19a8 <vfprintf+0x21a>
    19a4:	80 e1       	ldi	r24, 0x10	; 16
    19a6:	58 22       	and	r5, r24
    19a8:	f8 01       	movw	r30, r16
    19aa:	84 91       	lpm	r24, Z
    19ac:	81 11       	cpse	r24, r1
    19ae:	f2 cf       	rjmp	.-28     	; 0x1994 <vfprintf+0x206>
    19b0:	59 c2       	rjmp	.+1202   	; 0x1e64 <vfprintf+0x6d6>
    19b2:	57 fe       	sbrs	r5, 7
    19b4:	0e c0       	rjmp	.+28     	; 0x19d2 <vfprintf+0x244>
    19b6:	40 0e       	add	r4, r16
    19b8:	4c 85       	ldd	r20, Y+12	; 0x0c
    19ba:	44 ff       	sbrs	r20, 4
    19bc:	04 c0       	rjmp	.+8      	; 0x19c6 <vfprintf+0x238>
    19be:	8a 81       	ldd	r24, Y+2	; 0x02
    19c0:	81 33       	cpi	r24, 0x31	; 49
    19c2:	09 f4       	brne	.+2      	; 0x19c6 <vfprintf+0x238>
    19c4:	4a 94       	dec	r4
    19c6:	14 14       	cp	r1, r4
    19c8:	4c f5       	brge	.+82     	; 0x1a1c <vfprintf+0x28e>
    19ca:	58 e0       	ldi	r21, 0x08	; 8
    19cc:	54 15       	cp	r21, r4
    19ce:	48 f1       	brcs	.+82     	; 0x1a22 <vfprintf+0x294>
    19d0:	2c c0       	rjmp	.+88     	; 0x1a2a <vfprintf+0x29c>
    19d2:	56 fc       	sbrc	r5, 6
    19d4:	2a c0       	rjmp	.+84     	; 0x1a2a <vfprintf+0x29c>
    19d6:	87 2d       	mov	r24, r7
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	80 17       	cp	r24, r16
    19dc:	91 07       	cpc	r25, r17
    19de:	44 f0       	brlt	.+16     	; 0x19f0 <vfprintf+0x262>
    19e0:	0c 3f       	cpi	r16, 0xFC	; 252
    19e2:	8f ef       	ldi	r24, 0xFF	; 255
    19e4:	18 07       	cpc	r17, r24
    19e6:	24 f0       	brlt	.+8      	; 0x19f0 <vfprintf+0x262>
    19e8:	90 e8       	ldi	r25, 0x80	; 128
    19ea:	59 2a       	or	r5, r25
    19ec:	01 c0       	rjmp	.+2      	; 0x19f0 <vfprintf+0x262>
    19ee:	7a 94       	dec	r7
    19f0:	77 20       	and	r7, r7
    19f2:	49 f0       	breq	.+18     	; 0x1a06 <vfprintf+0x278>
    19f4:	e2 e0       	ldi	r30, 0x02	; 2
    19f6:	f0 e0       	ldi	r31, 0x00	; 0
    19f8:	ec 0f       	add	r30, r28
    19fa:	fd 1f       	adc	r31, r29
    19fc:	e7 0d       	add	r30, r7
    19fe:	f1 1d       	adc	r31, r1
    1a00:	80 81       	ld	r24, Z
    1a02:	80 33       	cpi	r24, 0x30	; 48
    1a04:	a1 f3       	breq	.-24     	; 0x19ee <vfprintf+0x260>
    1a06:	57 fe       	sbrs	r5, 7
    1a08:	10 c0       	rjmp	.+32     	; 0x1a2a <vfprintf+0x29c>
    1a0a:	47 2c       	mov	r4, r7
    1a0c:	43 94       	inc	r4
    1a0e:	87 2d       	mov	r24, r7
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	08 17       	cp	r16, r24
    1a14:	19 07       	cpc	r17, r25
    1a16:	44 f4       	brge	.+16     	; 0x1a28 <vfprintf+0x29a>
    1a18:	70 1a       	sub	r7, r16
    1a1a:	07 c0       	rjmp	.+14     	; 0x1a2a <vfprintf+0x29c>
    1a1c:	44 24       	eor	r4, r4
    1a1e:	43 94       	inc	r4
    1a20:	04 c0       	rjmp	.+8      	; 0x1a2a <vfprintf+0x29c>
    1a22:	58 e0       	ldi	r21, 0x08	; 8
    1a24:	45 2e       	mov	r4, r21
    1a26:	01 c0       	rjmp	.+2      	; 0x1a2a <vfprintf+0x29c>
    1a28:	71 2c       	mov	r7, r1
    1a2a:	57 fe       	sbrs	r5, 7
    1a2c:	07 c0       	rjmp	.+14     	; 0x1a3c <vfprintf+0x2ae>
    1a2e:	10 16       	cp	r1, r16
    1a30:	11 06       	cpc	r1, r17
    1a32:	3c f4       	brge	.+14     	; 0x1a42 <vfprintf+0x2b4>
    1a34:	98 01       	movw	r18, r16
    1a36:	2f 5f       	subi	r18, 0xFF	; 255
    1a38:	3f 4f       	sbci	r19, 0xFF	; 255
    1a3a:	05 c0       	rjmp	.+10     	; 0x1a46 <vfprintf+0x2b8>
    1a3c:	25 e0       	ldi	r18, 0x05	; 5
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	02 c0       	rjmp	.+4      	; 0x1a46 <vfprintf+0x2b8>
    1a42:	21 e0       	ldi	r18, 0x01	; 1
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	dd 20       	and	r13, r13
    1a48:	11 f0       	breq	.+4      	; 0x1a4e <vfprintf+0x2c0>
    1a4a:	2f 5f       	subi	r18, 0xFF	; 255
    1a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4e:	77 20       	and	r7, r7
    1a50:	31 f0       	breq	.+12     	; 0x1a5e <vfprintf+0x2d0>
    1a52:	47 2d       	mov	r20, r7
    1a54:	50 e0       	ldi	r21, 0x00	; 0
    1a56:	4f 5f       	subi	r20, 0xFF	; 255
    1a58:	5f 4f       	sbci	r21, 0xFF	; 255
    1a5a:	24 0f       	add	r18, r20
    1a5c:	35 1f       	adc	r19, r21
    1a5e:	46 2d       	mov	r20, r6
    1a60:	50 e0       	ldi	r21, 0x00	; 0
    1a62:	24 17       	cp	r18, r20
    1a64:	35 07       	cpc	r19, r21
    1a66:	14 f4       	brge	.+4      	; 0x1a6c <vfprintf+0x2de>
    1a68:	62 1a       	sub	r6, r18
    1a6a:	01 c0       	rjmp	.+2      	; 0x1a6e <vfprintf+0x2e0>
    1a6c:	61 2c       	mov	r6, r1
    1a6e:	85 2d       	mov	r24, r5
    1a70:	89 70       	andi	r24, 0x09	; 9
    1a72:	41 f4       	brne	.+16     	; 0x1a84 <vfprintf+0x2f6>
    1a74:	05 c0       	rjmp	.+10     	; 0x1a80 <vfprintf+0x2f2>
    1a76:	b7 01       	movw	r22, r14
    1a78:	80 e2       	ldi	r24, 0x20	; 32
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	a4 d4       	rcall	.+2376   	; 0x23c6 <fputc>
    1a7e:	6a 94       	dec	r6
    1a80:	61 10       	cpse	r6, r1
    1a82:	f9 cf       	rjmp	.-14     	; 0x1a76 <vfprintf+0x2e8>
    1a84:	dd 20       	and	r13, r13
    1a86:	21 f0       	breq	.+8      	; 0x1a90 <vfprintf+0x302>
    1a88:	b7 01       	movw	r22, r14
    1a8a:	8d 2d       	mov	r24, r13
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	9b d4       	rcall	.+2358   	; 0x23c6 <fputc>
    1a90:	53 fc       	sbrc	r5, 3
    1a92:	08 c0       	rjmp	.+16     	; 0x1aa4 <vfprintf+0x316>
    1a94:	05 c0       	rjmp	.+10     	; 0x1aa0 <vfprintf+0x312>
    1a96:	b7 01       	movw	r22, r14
    1a98:	80 e3       	ldi	r24, 0x30	; 48
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	94 d4       	rcall	.+2344   	; 0x23c6 <fputc>
    1a9e:	6a 94       	dec	r6
    1aa0:	61 10       	cpse	r6, r1
    1aa2:	f9 cf       	rjmp	.-14     	; 0x1a96 <vfprintf+0x308>
    1aa4:	57 fe       	sbrs	r5, 7
    1aa6:	54 c0       	rjmp	.+168    	; 0x1b50 <vfprintf+0x3c2>
    1aa8:	68 01       	movw	r12, r16
    1aaa:	17 ff       	sbrs	r17, 7
    1aac:	02 c0       	rjmp	.+4      	; 0x1ab2 <vfprintf+0x324>
    1aae:	c1 2c       	mov	r12, r1
    1ab0:	d1 2c       	mov	r13, r1
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	30 e0       	ldi	r19, 0x00	; 0
    1ab6:	a8 01       	movw	r20, r16
    1ab8:	44 19       	sub	r20, r4
    1aba:	51 09       	sbc	r21, r1
    1abc:	5e 87       	std	Y+14, r21	; 0x0e
    1abe:	4d 87       	std	Y+13, r20	; 0x0d
    1ac0:	28 01       	movw	r4, r16
    1ac2:	4c 18       	sub	r4, r12
    1ac4:	5d 08       	sbc	r5, r13
    1ac6:	48 0c       	add	r4, r8
    1ac8:	59 1c       	adc	r5, r9
    1aca:	87 2d       	mov	r24, r7
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	44 27       	eor	r20, r20
    1ad0:	55 27       	eor	r21, r21
    1ad2:	48 1b       	sub	r20, r24
    1ad4:	59 0b       	sbc	r21, r25
    1ad6:	58 8b       	std	Y+16, r21	; 0x10
    1ad8:	4f 87       	std	Y+15, r20	; 0x0f
    1ada:	5f ef       	ldi	r21, 0xFF	; 255
    1adc:	c5 16       	cp	r12, r21
    1ade:	d5 06       	cpc	r13, r21
    1ae0:	41 f4       	brne	.+16     	; 0x1af2 <vfprintf+0x364>
    1ae2:	b7 01       	movw	r22, r14
    1ae4:	8e e2       	ldi	r24, 0x2E	; 46
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	2a 8b       	std	Y+18, r18	; 0x12
    1aea:	39 8b       	std	Y+17, r19	; 0x11
    1aec:	6c d4       	rcall	.+2264   	; 0x23c6 <fputc>
    1aee:	39 89       	ldd	r19, Y+17	; 0x11
    1af0:	2a 89       	ldd	r18, Y+18	; 0x12
    1af2:	0c 15       	cp	r16, r12
    1af4:	1d 05       	cpc	r17, r13
    1af6:	54 f0       	brlt	.+20     	; 0x1b0c <vfprintf+0x37e>
    1af8:	4d 85       	ldd	r20, Y+13	; 0x0d
    1afa:	5e 85       	ldd	r21, Y+14	; 0x0e
    1afc:	4c 15       	cp	r20, r12
    1afe:	5d 05       	cpc	r21, r13
    1b00:	2c f4       	brge	.+10     	; 0x1b0c <vfprintf+0x37e>
    1b02:	f2 01       	movw	r30, r4
    1b04:	e2 0f       	add	r30, r18
    1b06:	f3 1f       	adc	r31, r19
    1b08:	81 81       	ldd	r24, Z+1	; 0x01
    1b0a:	01 c0       	rjmp	.+2      	; 0x1b0e <vfprintf+0x380>
    1b0c:	80 e3       	ldi	r24, 0x30	; 48
    1b0e:	51 e0       	ldi	r21, 0x01	; 1
    1b10:	c5 1a       	sub	r12, r21
    1b12:	d1 08       	sbc	r13, r1
    1b14:	2f 5f       	subi	r18, 0xFF	; 255
    1b16:	3f 4f       	sbci	r19, 0xFF	; 255
    1b18:	4f 85       	ldd	r20, Y+15	; 0x0f
    1b1a:	58 89       	ldd	r21, Y+16	; 0x10
    1b1c:	c4 16       	cp	r12, r20
    1b1e:	d5 06       	cpc	r13, r21
    1b20:	44 f0       	brlt	.+16     	; 0x1b32 <vfprintf+0x3a4>
    1b22:	b7 01       	movw	r22, r14
    1b24:	90 e0       	ldi	r25, 0x00	; 0
    1b26:	2a 8b       	std	Y+18, r18	; 0x12
    1b28:	39 8b       	std	Y+17, r19	; 0x11
    1b2a:	4d d4       	rcall	.+2202   	; 0x23c6 <fputc>
    1b2c:	2a 89       	ldd	r18, Y+18	; 0x12
    1b2e:	39 89       	ldd	r19, Y+17	; 0x11
    1b30:	d4 cf       	rjmp	.-88     	; 0x1ada <vfprintf+0x34c>
    1b32:	c0 16       	cp	r12, r16
    1b34:	d1 06       	cpc	r13, r17
    1b36:	49 f4       	brne	.+18     	; 0x1b4a <vfprintf+0x3bc>
    1b38:	9a 81       	ldd	r25, Y+2	; 0x02
    1b3a:	96 33       	cpi	r25, 0x36	; 54
    1b3c:	28 f4       	brcc	.+10     	; 0x1b48 <vfprintf+0x3ba>
    1b3e:	95 33       	cpi	r25, 0x35	; 53
    1b40:	21 f4       	brne	.+8      	; 0x1b4a <vfprintf+0x3bc>
    1b42:	5c 85       	ldd	r21, Y+12	; 0x0c
    1b44:	54 fd       	sbrc	r21, 4
    1b46:	01 c0       	rjmp	.+2      	; 0x1b4a <vfprintf+0x3bc>
    1b48:	81 e3       	ldi	r24, 0x31	; 49
    1b4a:	b7 01       	movw	r22, r14
    1b4c:	90 e0       	ldi	r25, 0x00	; 0
    1b4e:	44 c0       	rjmp	.+136    	; 0x1bd8 <vfprintf+0x44a>
    1b50:	8a 81       	ldd	r24, Y+2	; 0x02
    1b52:	81 33       	cpi	r24, 0x31	; 49
    1b54:	19 f0       	breq	.+6      	; 0x1b5c <vfprintf+0x3ce>
    1b56:	4c 85       	ldd	r20, Y+12	; 0x0c
    1b58:	4f 7e       	andi	r20, 0xEF	; 239
    1b5a:	4c 87       	std	Y+12, r20	; 0x0c
    1b5c:	b7 01       	movw	r22, r14
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	32 d4       	rcall	.+2148   	; 0x23c6 <fputc>
    1b62:	71 10       	cpse	r7, r1
    1b64:	05 c0       	rjmp	.+10     	; 0x1b70 <vfprintf+0x3e2>
    1b66:	54 fe       	sbrs	r5, 4
    1b68:	14 c0       	rjmp	.+40     	; 0x1b92 <vfprintf+0x404>
    1b6a:	85 e4       	ldi	r24, 0x45	; 69
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	13 c0       	rjmp	.+38     	; 0x1b96 <vfprintf+0x408>
    1b70:	b7 01       	movw	r22, r14
    1b72:	8e e2       	ldi	r24, 0x2E	; 46
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	27 d4       	rcall	.+2126   	; 0x23c6 <fputc>
    1b78:	42 e0       	ldi	r20, 0x02	; 2
    1b7a:	d4 2e       	mov	r13, r20
    1b7c:	f4 01       	movw	r30, r8
    1b7e:	ed 0d       	add	r30, r13
    1b80:	f1 1d       	adc	r31, r1
    1b82:	d3 94       	inc	r13
    1b84:	b7 01       	movw	r22, r14
    1b86:	80 81       	ld	r24, Z
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	1d d4       	rcall	.+2106   	; 0x23c6 <fputc>
    1b8c:	7a 94       	dec	r7
    1b8e:	b1 f7       	brne	.-20     	; 0x1b7c <vfprintf+0x3ee>
    1b90:	ea cf       	rjmp	.-44     	; 0x1b66 <vfprintf+0x3d8>
    1b92:	85 e6       	ldi	r24, 0x65	; 101
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	b7 01       	movw	r22, r14
    1b98:	16 d4       	rcall	.+2092   	; 0x23c6 <fputc>
    1b9a:	17 fd       	sbrc	r17, 7
    1b9c:	06 c0       	rjmp	.+12     	; 0x1baa <vfprintf+0x41c>
    1b9e:	01 15       	cp	r16, r1
    1ba0:	11 05       	cpc	r17, r1
    1ba2:	41 f4       	brne	.+16     	; 0x1bb4 <vfprintf+0x426>
    1ba4:	5c 85       	ldd	r21, Y+12	; 0x0c
    1ba6:	54 ff       	sbrs	r21, 4
    1ba8:	05 c0       	rjmp	.+10     	; 0x1bb4 <vfprintf+0x426>
    1baa:	11 95       	neg	r17
    1bac:	01 95       	neg	r16
    1bae:	11 09       	sbc	r17, r1
    1bb0:	8d e2       	ldi	r24, 0x2D	; 45
    1bb2:	01 c0       	rjmp	.+2      	; 0x1bb6 <vfprintf+0x428>
    1bb4:	8b e2       	ldi	r24, 0x2B	; 43
    1bb6:	b7 01       	movw	r22, r14
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	05 d4       	rcall	.+2058   	; 0x23c6 <fputc>
    1bbc:	80 e3       	ldi	r24, 0x30	; 48
    1bbe:	03 c0       	rjmp	.+6      	; 0x1bc6 <vfprintf+0x438>
    1bc0:	8f 5f       	subi	r24, 0xFF	; 255
    1bc2:	0a 50       	subi	r16, 0x0A	; 10
    1bc4:	11 09       	sbc	r17, r1
    1bc6:	0a 30       	cpi	r16, 0x0A	; 10
    1bc8:	11 05       	cpc	r17, r1
    1bca:	d4 f7       	brge	.-12     	; 0x1bc0 <vfprintf+0x432>
    1bcc:	b7 01       	movw	r22, r14
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	fa d3       	rcall	.+2036   	; 0x23c6 <fputc>
    1bd2:	b7 01       	movw	r22, r14
    1bd4:	c8 01       	movw	r24, r16
    1bd6:	c0 96       	adiw	r24, 0x30	; 48
    1bd8:	f6 d3       	rcall	.+2028   	; 0x23c6 <fputc>
    1bda:	44 c1       	rjmp	.+648    	; 0x1e64 <vfprintf+0x6d6>
    1bdc:	83 36       	cpi	r24, 0x63	; 99
    1bde:	31 f0       	breq	.+12     	; 0x1bec <vfprintf+0x45e>
    1be0:	83 37       	cpi	r24, 0x73	; 115
    1be2:	81 f0       	breq	.+32     	; 0x1c04 <vfprintf+0x476>
    1be4:	83 35       	cpi	r24, 0x53	; 83
    1be6:	09 f0       	breq	.+2      	; 0x1bea <vfprintf+0x45c>
    1be8:	5a c0       	rjmp	.+180    	; 0x1c9e <vfprintf+0x510>
    1bea:	23 c0       	rjmp	.+70     	; 0x1c32 <vfprintf+0x4a4>
    1bec:	56 01       	movw	r10, r12
    1bee:	82 e0       	ldi	r24, 0x02	; 2
    1bf0:	a8 0e       	add	r10, r24
    1bf2:	b1 1c       	adc	r11, r1
    1bf4:	f6 01       	movw	r30, r12
    1bf6:	80 81       	ld	r24, Z
    1bf8:	89 83       	std	Y+1, r24	; 0x01
    1bfa:	cc 24       	eor	r12, r12
    1bfc:	c3 94       	inc	r12
    1bfe:	d1 2c       	mov	r13, r1
    1c00:	84 01       	movw	r16, r8
    1c02:	13 c0       	rjmp	.+38     	; 0x1c2a <vfprintf+0x49c>
    1c04:	56 01       	movw	r10, r12
    1c06:	f2 e0       	ldi	r31, 0x02	; 2
    1c08:	af 0e       	add	r10, r31
    1c0a:	b1 1c       	adc	r11, r1
    1c0c:	f6 01       	movw	r30, r12
    1c0e:	00 81       	ld	r16, Z
    1c10:	11 81       	ldd	r17, Z+1	; 0x01
    1c12:	26 ff       	sbrs	r18, 6
    1c14:	03 c0       	rjmp	.+6      	; 0x1c1c <vfprintf+0x48e>
    1c16:	67 2d       	mov	r22, r7
    1c18:	70 e0       	ldi	r23, 0x00	; 0
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <vfprintf+0x492>
    1c1c:	6f ef       	ldi	r22, 0xFF	; 255
    1c1e:	7f ef       	ldi	r23, 0xFF	; 255
    1c20:	c8 01       	movw	r24, r16
    1c22:	2a 8b       	std	Y+18, r18	; 0x12
    1c24:	c5 d3       	rcall	.+1930   	; 0x23b0 <strnlen>
    1c26:	6c 01       	movw	r12, r24
    1c28:	2a 89       	ldd	r18, Y+18	; 0x12
    1c2a:	9f e7       	ldi	r25, 0x7F	; 127
    1c2c:	59 2e       	mov	r5, r25
    1c2e:	52 22       	and	r5, r18
    1c30:	16 c0       	rjmp	.+44     	; 0x1c5e <vfprintf+0x4d0>
    1c32:	56 01       	movw	r10, r12
    1c34:	f2 e0       	ldi	r31, 0x02	; 2
    1c36:	af 0e       	add	r10, r31
    1c38:	b1 1c       	adc	r11, r1
    1c3a:	f6 01       	movw	r30, r12
    1c3c:	00 81       	ld	r16, Z
    1c3e:	11 81       	ldd	r17, Z+1	; 0x01
    1c40:	26 ff       	sbrs	r18, 6
    1c42:	03 c0       	rjmp	.+6      	; 0x1c4a <vfprintf+0x4bc>
    1c44:	67 2d       	mov	r22, r7
    1c46:	70 e0       	ldi	r23, 0x00	; 0
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <vfprintf+0x4c0>
    1c4a:	6f ef       	ldi	r22, 0xFF	; 255
    1c4c:	7f ef       	ldi	r23, 0xFF	; 255
    1c4e:	c8 01       	movw	r24, r16
    1c50:	2a 8b       	std	Y+18, r18	; 0x12
    1c52:	8c d3       	rcall	.+1816   	; 0x236c <strnlen_P>
    1c54:	6c 01       	movw	r12, r24
    1c56:	2a 89       	ldd	r18, Y+18	; 0x12
    1c58:	80 e8       	ldi	r24, 0x80	; 128
    1c5a:	58 2e       	mov	r5, r24
    1c5c:	52 2a       	or	r5, r18
    1c5e:	53 fc       	sbrc	r5, 3
    1c60:	1a c0       	rjmp	.+52     	; 0x1c96 <vfprintf+0x508>
    1c62:	05 c0       	rjmp	.+10     	; 0x1c6e <vfprintf+0x4e0>
    1c64:	b7 01       	movw	r22, r14
    1c66:	80 e2       	ldi	r24, 0x20	; 32
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	ad d3       	rcall	.+1882   	; 0x23c6 <fputc>
    1c6c:	6a 94       	dec	r6
    1c6e:	86 2d       	mov	r24, r6
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	c8 16       	cp	r12, r24
    1c74:	d9 06       	cpc	r13, r25
    1c76:	b0 f3       	brcs	.-20     	; 0x1c64 <vfprintf+0x4d6>
    1c78:	0e c0       	rjmp	.+28     	; 0x1c96 <vfprintf+0x508>
    1c7a:	f8 01       	movw	r30, r16
    1c7c:	57 fc       	sbrc	r5, 7
    1c7e:	85 91       	lpm	r24, Z+
    1c80:	57 fe       	sbrs	r5, 7
    1c82:	81 91       	ld	r24, Z+
    1c84:	8f 01       	movw	r16, r30
    1c86:	b7 01       	movw	r22, r14
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	9d d3       	rcall	.+1850   	; 0x23c6 <fputc>
    1c8c:	61 10       	cpse	r6, r1
    1c8e:	6a 94       	dec	r6
    1c90:	f1 e0       	ldi	r31, 0x01	; 1
    1c92:	cf 1a       	sub	r12, r31
    1c94:	d1 08       	sbc	r13, r1
    1c96:	c1 14       	cp	r12, r1
    1c98:	d1 04       	cpc	r13, r1
    1c9a:	79 f7       	brne	.-34     	; 0x1c7a <vfprintf+0x4ec>
    1c9c:	e3 c0       	rjmp	.+454    	; 0x1e64 <vfprintf+0x6d6>
    1c9e:	84 36       	cpi	r24, 0x64	; 100
    1ca0:	11 f0       	breq	.+4      	; 0x1ca6 <vfprintf+0x518>
    1ca2:	89 36       	cpi	r24, 0x69	; 105
    1ca4:	49 f5       	brne	.+82     	; 0x1cf8 <vfprintf+0x56a>
    1ca6:	56 01       	movw	r10, r12
    1ca8:	27 ff       	sbrs	r18, 7
    1caa:	09 c0       	rjmp	.+18     	; 0x1cbe <vfprintf+0x530>
    1cac:	44 e0       	ldi	r20, 0x04	; 4
    1cae:	a4 0e       	add	r10, r20
    1cb0:	b1 1c       	adc	r11, r1
    1cb2:	f6 01       	movw	r30, r12
    1cb4:	60 81       	ld	r22, Z
    1cb6:	71 81       	ldd	r23, Z+1	; 0x01
    1cb8:	82 81       	ldd	r24, Z+2	; 0x02
    1cba:	93 81       	ldd	r25, Z+3	; 0x03
    1cbc:	0a c0       	rjmp	.+20     	; 0x1cd2 <vfprintf+0x544>
    1cbe:	f2 e0       	ldi	r31, 0x02	; 2
    1cc0:	af 0e       	add	r10, r31
    1cc2:	b1 1c       	adc	r11, r1
    1cc4:	f6 01       	movw	r30, r12
    1cc6:	60 81       	ld	r22, Z
    1cc8:	71 81       	ldd	r23, Z+1	; 0x01
    1cca:	88 27       	eor	r24, r24
    1ccc:	77 fd       	sbrc	r23, 7
    1cce:	80 95       	com	r24
    1cd0:	98 2f       	mov	r25, r24
    1cd2:	12 2f       	mov	r17, r18
    1cd4:	1f 76       	andi	r17, 0x6F	; 111
    1cd6:	97 ff       	sbrs	r25, 7
    1cd8:	08 c0       	rjmp	.+16     	; 0x1cea <vfprintf+0x55c>
    1cda:	90 95       	com	r25
    1cdc:	80 95       	com	r24
    1cde:	70 95       	com	r23
    1ce0:	61 95       	neg	r22
    1ce2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ce6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce8:	10 68       	ori	r17, 0x80	; 128
    1cea:	2a e0       	ldi	r18, 0x0A	; 10
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	a4 01       	movw	r20, r8
    1cf0:	fc d3       	rcall	.+2040   	; 0x24ea <__ultoa_invert>
    1cf2:	d8 2e       	mov	r13, r24
    1cf4:	d8 18       	sub	r13, r8
    1cf6:	3f c0       	rjmp	.+126    	; 0x1d76 <vfprintf+0x5e8>
    1cf8:	12 2f       	mov	r17, r18
    1cfa:	85 37       	cpi	r24, 0x75	; 117
    1cfc:	21 f4       	brne	.+8      	; 0x1d06 <vfprintf+0x578>
    1cfe:	1f 7e       	andi	r17, 0xEF	; 239
    1d00:	2a e0       	ldi	r18, 0x0A	; 10
    1d02:	30 e0       	ldi	r19, 0x00	; 0
    1d04:	1f c0       	rjmp	.+62     	; 0x1d44 <vfprintf+0x5b6>
    1d06:	19 7f       	andi	r17, 0xF9	; 249
    1d08:	8f 36       	cpi	r24, 0x6F	; 111
    1d0a:	a1 f0       	breq	.+40     	; 0x1d34 <vfprintf+0x5a6>
    1d0c:	20 f4       	brcc	.+8      	; 0x1d16 <vfprintf+0x588>
    1d0e:	88 35       	cpi	r24, 0x58	; 88
    1d10:	09 f0       	breq	.+2      	; 0x1d14 <vfprintf+0x586>
    1d12:	ab c0       	rjmp	.+342    	; 0x1e6a <vfprintf+0x6dc>
    1d14:	0b c0       	rjmp	.+22     	; 0x1d2c <vfprintf+0x59e>
    1d16:	80 37       	cpi	r24, 0x70	; 112
    1d18:	21 f0       	breq	.+8      	; 0x1d22 <vfprintf+0x594>
    1d1a:	88 37       	cpi	r24, 0x78	; 120
    1d1c:	09 f0       	breq	.+2      	; 0x1d20 <vfprintf+0x592>
    1d1e:	a5 c0       	rjmp	.+330    	; 0x1e6a <vfprintf+0x6dc>
    1d20:	01 c0       	rjmp	.+2      	; 0x1d24 <vfprintf+0x596>
    1d22:	10 61       	ori	r17, 0x10	; 16
    1d24:	14 ff       	sbrs	r17, 4
    1d26:	09 c0       	rjmp	.+18     	; 0x1d3a <vfprintf+0x5ac>
    1d28:	14 60       	ori	r17, 0x04	; 4
    1d2a:	07 c0       	rjmp	.+14     	; 0x1d3a <vfprintf+0x5ac>
    1d2c:	24 ff       	sbrs	r18, 4
    1d2e:	08 c0       	rjmp	.+16     	; 0x1d40 <vfprintf+0x5b2>
    1d30:	16 60       	ori	r17, 0x06	; 6
    1d32:	06 c0       	rjmp	.+12     	; 0x1d40 <vfprintf+0x5b2>
    1d34:	28 e0       	ldi	r18, 0x08	; 8
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	05 c0       	rjmp	.+10     	; 0x1d44 <vfprintf+0x5b6>
    1d3a:	20 e1       	ldi	r18, 0x10	; 16
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	02 c0       	rjmp	.+4      	; 0x1d44 <vfprintf+0x5b6>
    1d40:	20 e1       	ldi	r18, 0x10	; 16
    1d42:	32 e0       	ldi	r19, 0x02	; 2
    1d44:	56 01       	movw	r10, r12
    1d46:	17 ff       	sbrs	r17, 7
    1d48:	09 c0       	rjmp	.+18     	; 0x1d5c <vfprintf+0x5ce>
    1d4a:	f4 e0       	ldi	r31, 0x04	; 4
    1d4c:	af 0e       	add	r10, r31
    1d4e:	b1 1c       	adc	r11, r1
    1d50:	f6 01       	movw	r30, r12
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	08 c0       	rjmp	.+16     	; 0x1d6c <vfprintf+0x5de>
    1d5c:	f2 e0       	ldi	r31, 0x02	; 2
    1d5e:	af 0e       	add	r10, r31
    1d60:	b1 1c       	adc	r11, r1
    1d62:	f6 01       	movw	r30, r12
    1d64:	60 81       	ld	r22, Z
    1d66:	71 81       	ldd	r23, Z+1	; 0x01
    1d68:	80 e0       	ldi	r24, 0x00	; 0
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	a4 01       	movw	r20, r8
    1d6e:	bd d3       	rcall	.+1914   	; 0x24ea <__ultoa_invert>
    1d70:	d8 2e       	mov	r13, r24
    1d72:	d8 18       	sub	r13, r8
    1d74:	1f 77       	andi	r17, 0x7F	; 127
    1d76:	16 ff       	sbrs	r17, 6
    1d78:	0b c0       	rjmp	.+22     	; 0x1d90 <vfprintf+0x602>
    1d7a:	21 2f       	mov	r18, r17
    1d7c:	2e 7f       	andi	r18, 0xFE	; 254
    1d7e:	d7 14       	cp	r13, r7
    1d80:	50 f4       	brcc	.+20     	; 0x1d96 <vfprintf+0x608>
    1d82:	14 ff       	sbrs	r17, 4
    1d84:	0a c0       	rjmp	.+20     	; 0x1d9a <vfprintf+0x60c>
    1d86:	12 fd       	sbrc	r17, 2
    1d88:	08 c0       	rjmp	.+16     	; 0x1d9a <vfprintf+0x60c>
    1d8a:	21 2f       	mov	r18, r17
    1d8c:	2e 7e       	andi	r18, 0xEE	; 238
    1d8e:	05 c0       	rjmp	.+10     	; 0x1d9a <vfprintf+0x60c>
    1d90:	0d 2d       	mov	r16, r13
    1d92:	21 2f       	mov	r18, r17
    1d94:	03 c0       	rjmp	.+6      	; 0x1d9c <vfprintf+0x60e>
    1d96:	0d 2d       	mov	r16, r13
    1d98:	01 c0       	rjmp	.+2      	; 0x1d9c <vfprintf+0x60e>
    1d9a:	07 2d       	mov	r16, r7
    1d9c:	24 ff       	sbrs	r18, 4
    1d9e:	0c c0       	rjmp	.+24     	; 0x1db8 <vfprintf+0x62a>
    1da0:	fe 01       	movw	r30, r28
    1da2:	ed 0d       	add	r30, r13
    1da4:	f1 1d       	adc	r31, r1
    1da6:	80 81       	ld	r24, Z
    1da8:	80 33       	cpi	r24, 0x30	; 48
    1daa:	11 f4       	brne	.+4      	; 0x1db0 <vfprintf+0x622>
    1dac:	29 7e       	andi	r18, 0xE9	; 233
    1dae:	08 c0       	rjmp	.+16     	; 0x1dc0 <vfprintf+0x632>
    1db0:	22 ff       	sbrs	r18, 2
    1db2:	05 c0       	rjmp	.+10     	; 0x1dbe <vfprintf+0x630>
    1db4:	0e 5f       	subi	r16, 0xFE	; 254
    1db6:	04 c0       	rjmp	.+8      	; 0x1dc0 <vfprintf+0x632>
    1db8:	82 2f       	mov	r24, r18
    1dba:	86 78       	andi	r24, 0x86	; 134
    1dbc:	09 f0       	breq	.+2      	; 0x1dc0 <vfprintf+0x632>
    1dbe:	0f 5f       	subi	r16, 0xFF	; 255
    1dc0:	23 fd       	sbrc	r18, 3
    1dc2:	13 c0       	rjmp	.+38     	; 0x1dea <vfprintf+0x65c>
    1dc4:	20 ff       	sbrs	r18, 0
    1dc6:	0e c0       	rjmp	.+28     	; 0x1de4 <vfprintf+0x656>
    1dc8:	7d 2c       	mov	r7, r13
    1dca:	06 15       	cp	r16, r6
    1dcc:	58 f4       	brcc	.+22     	; 0x1de4 <vfprintf+0x656>
    1dce:	76 0c       	add	r7, r6
    1dd0:	70 1a       	sub	r7, r16
    1dd2:	06 2d       	mov	r16, r6
    1dd4:	07 c0       	rjmp	.+14     	; 0x1de4 <vfprintf+0x656>
    1dd6:	b7 01       	movw	r22, r14
    1dd8:	80 e2       	ldi	r24, 0x20	; 32
    1dda:	90 e0       	ldi	r25, 0x00	; 0
    1ddc:	2a 8b       	std	Y+18, r18	; 0x12
    1dde:	f3 d2       	rcall	.+1510   	; 0x23c6 <fputc>
    1de0:	0f 5f       	subi	r16, 0xFF	; 255
    1de2:	2a 89       	ldd	r18, Y+18	; 0x12
    1de4:	06 15       	cp	r16, r6
    1de6:	b8 f3       	brcs	.-18     	; 0x1dd6 <vfprintf+0x648>
    1de8:	04 c0       	rjmp	.+8      	; 0x1df2 <vfprintf+0x664>
    1dea:	06 15       	cp	r16, r6
    1dec:	10 f4       	brcc	.+4      	; 0x1df2 <vfprintf+0x664>
    1dee:	60 1a       	sub	r6, r16
    1df0:	01 c0       	rjmp	.+2      	; 0x1df4 <vfprintf+0x666>
    1df2:	61 2c       	mov	r6, r1
    1df4:	24 ff       	sbrs	r18, 4
    1df6:	11 c0       	rjmp	.+34     	; 0x1e1a <vfprintf+0x68c>
    1df8:	b7 01       	movw	r22, r14
    1dfa:	80 e3       	ldi	r24, 0x30	; 48
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	2a 8b       	std	Y+18, r18	; 0x12
    1e00:	e2 d2       	rcall	.+1476   	; 0x23c6 <fputc>
    1e02:	2a 89       	ldd	r18, Y+18	; 0x12
    1e04:	22 ff       	sbrs	r18, 2
    1e06:	1c c0       	rjmp	.+56     	; 0x1e40 <vfprintf+0x6b2>
    1e08:	21 ff       	sbrs	r18, 1
    1e0a:	03 c0       	rjmp	.+6      	; 0x1e12 <vfprintf+0x684>
    1e0c:	88 e5       	ldi	r24, 0x58	; 88
    1e0e:	90 e0       	ldi	r25, 0x00	; 0
    1e10:	02 c0       	rjmp	.+4      	; 0x1e16 <vfprintf+0x688>
    1e12:	88 e7       	ldi	r24, 0x78	; 120
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	b7 01       	movw	r22, r14
    1e18:	0c c0       	rjmp	.+24     	; 0x1e32 <vfprintf+0x6a4>
    1e1a:	82 2f       	mov	r24, r18
    1e1c:	86 78       	andi	r24, 0x86	; 134
    1e1e:	81 f0       	breq	.+32     	; 0x1e40 <vfprintf+0x6b2>
    1e20:	21 fd       	sbrc	r18, 1
    1e22:	02 c0       	rjmp	.+4      	; 0x1e28 <vfprintf+0x69a>
    1e24:	80 e2       	ldi	r24, 0x20	; 32
    1e26:	01 c0       	rjmp	.+2      	; 0x1e2a <vfprintf+0x69c>
    1e28:	8b e2       	ldi	r24, 0x2B	; 43
    1e2a:	27 fd       	sbrc	r18, 7
    1e2c:	8d e2       	ldi	r24, 0x2D	; 45
    1e2e:	b7 01       	movw	r22, r14
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	c9 d2       	rcall	.+1426   	; 0x23c6 <fputc>
    1e34:	05 c0       	rjmp	.+10     	; 0x1e40 <vfprintf+0x6b2>
    1e36:	b7 01       	movw	r22, r14
    1e38:	80 e3       	ldi	r24, 0x30	; 48
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	c4 d2       	rcall	.+1416   	; 0x23c6 <fputc>
    1e3e:	7a 94       	dec	r7
    1e40:	d7 14       	cp	r13, r7
    1e42:	c8 f3       	brcs	.-14     	; 0x1e36 <vfprintf+0x6a8>
    1e44:	da 94       	dec	r13
    1e46:	f4 01       	movw	r30, r8
    1e48:	ed 0d       	add	r30, r13
    1e4a:	f1 1d       	adc	r31, r1
    1e4c:	b7 01       	movw	r22, r14
    1e4e:	80 81       	ld	r24, Z
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	b9 d2       	rcall	.+1394   	; 0x23c6 <fputc>
    1e54:	d1 10       	cpse	r13, r1
    1e56:	f6 cf       	rjmp	.-20     	; 0x1e44 <vfprintf+0x6b6>
    1e58:	05 c0       	rjmp	.+10     	; 0x1e64 <vfprintf+0x6d6>
    1e5a:	b7 01       	movw	r22, r14
    1e5c:	80 e2       	ldi	r24, 0x20	; 32
    1e5e:	90 e0       	ldi	r25, 0x00	; 0
    1e60:	b2 d2       	rcall	.+1380   	; 0x23c6 <fputc>
    1e62:	6a 94       	dec	r6
    1e64:	61 10       	cpse	r6, r1
    1e66:	f9 cf       	rjmp	.-14     	; 0x1e5a <vfprintf+0x6cc>
    1e68:	b6 cc       	rjmp	.-1684   	; 0x17d6 <vfprintf+0x48>
    1e6a:	f7 01       	movw	r30, r14
    1e6c:	26 81       	ldd	r18, Z+6	; 0x06
    1e6e:	37 81       	ldd	r19, Z+7	; 0x07
    1e70:	02 c0       	rjmp	.+4      	; 0x1e76 <vfprintf+0x6e8>
    1e72:	2f ef       	ldi	r18, 0xFF	; 255
    1e74:	3f ef       	ldi	r19, 0xFF	; 255
    1e76:	c9 01       	movw	r24, r18
    1e78:	62 96       	adiw	r28, 0x12	; 18
    1e7a:	0f b6       	in	r0, 0x3f	; 63
    1e7c:	f8 94       	cli
    1e7e:	de bf       	out	0x3e, r29	; 62
    1e80:	0f be       	out	0x3f, r0	; 63
    1e82:	cd bf       	out	0x3d, r28	; 61
    1e84:	df 91       	pop	r29
    1e86:	cf 91       	pop	r28
    1e88:	1f 91       	pop	r17
    1e8a:	0f 91       	pop	r16
    1e8c:	ff 90       	pop	r15
    1e8e:	ef 90       	pop	r14
    1e90:	df 90       	pop	r13
    1e92:	cf 90       	pop	r12
    1e94:	bf 90       	pop	r11
    1e96:	af 90       	pop	r10
    1e98:	9f 90       	pop	r9
    1e9a:	8f 90       	pop	r8
    1e9c:	7f 90       	pop	r7
    1e9e:	6f 90       	pop	r6
    1ea0:	5f 90       	pop	r5
    1ea2:	4f 90       	pop	r4
    1ea4:	3f 90       	pop	r3
    1ea6:	2f 90       	pop	r2
    1ea8:	08 95       	ret

00001eaa <__divmodhi4>:
    1eaa:	97 fb       	bst	r25, 7
    1eac:	07 2e       	mov	r0, r23
    1eae:	16 f4       	brtc	.+4      	; 0x1eb4 <__divmodhi4+0xa>
    1eb0:	00 94       	com	r0
    1eb2:	06 d0       	rcall	.+12     	; 0x1ec0 <__divmodhi4_neg1>
    1eb4:	77 fd       	sbrc	r23, 7
    1eb6:	08 d0       	rcall	.+16     	; 0x1ec8 <__divmodhi4_neg2>
    1eb8:	17 d0       	rcall	.+46     	; 0x1ee8 <__udivmodhi4>
    1eba:	07 fc       	sbrc	r0, 7
    1ebc:	05 d0       	rcall	.+10     	; 0x1ec8 <__divmodhi4_neg2>
    1ebe:	3e f4       	brtc	.+14     	; 0x1ece <__divmodhi4_exit>

00001ec0 <__divmodhi4_neg1>:
    1ec0:	90 95       	com	r25
    1ec2:	81 95       	neg	r24
    1ec4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec6:	08 95       	ret

00001ec8 <__divmodhi4_neg2>:
    1ec8:	70 95       	com	r23
    1eca:	61 95       	neg	r22
    1ecc:	7f 4f       	sbci	r23, 0xFF	; 255

00001ece <__divmodhi4_exit>:
    1ece:	08 95       	ret

00001ed0 <__umulhisi3>:
    1ed0:	a2 9f       	mul	r26, r18
    1ed2:	b0 01       	movw	r22, r0
    1ed4:	b3 9f       	mul	r27, r19
    1ed6:	c0 01       	movw	r24, r0
    1ed8:	a3 9f       	mul	r26, r19
    1eda:	01 d0       	rcall	.+2      	; 0x1ede <__umulhisi3+0xe>
    1edc:	b2 9f       	mul	r27, r18
    1ede:	70 0d       	add	r23, r0
    1ee0:	81 1d       	adc	r24, r1
    1ee2:	11 24       	eor	r1, r1
    1ee4:	91 1d       	adc	r25, r1
    1ee6:	08 95       	ret

00001ee8 <__udivmodhi4>:
    1ee8:	aa 1b       	sub	r26, r26
    1eea:	bb 1b       	sub	r27, r27
    1eec:	51 e1       	ldi	r21, 0x11	; 17
    1eee:	07 c0       	rjmp	.+14     	; 0x1efe <__udivmodhi4_ep>

00001ef0 <__udivmodhi4_loop>:
    1ef0:	aa 1f       	adc	r26, r26
    1ef2:	bb 1f       	adc	r27, r27
    1ef4:	a6 17       	cp	r26, r22
    1ef6:	b7 07       	cpc	r27, r23
    1ef8:	10 f0       	brcs	.+4      	; 0x1efe <__udivmodhi4_ep>
    1efa:	a6 1b       	sub	r26, r22
    1efc:	b7 0b       	sbc	r27, r23

00001efe <__udivmodhi4_ep>:
    1efe:	88 1f       	adc	r24, r24
    1f00:	99 1f       	adc	r25, r25
    1f02:	5a 95       	dec	r21
    1f04:	a9 f7       	brne	.-22     	; 0x1ef0 <__udivmodhi4_loop>
    1f06:	80 95       	com	r24
    1f08:	90 95       	com	r25
    1f0a:	bc 01       	movw	r22, r24
    1f0c:	cd 01       	movw	r24, r26
    1f0e:	08 95       	ret

00001f10 <calloc>:
    1f10:	0f 93       	push	r16
    1f12:	1f 93       	push	r17
    1f14:	cf 93       	push	r28
    1f16:	df 93       	push	r29
    1f18:	68 9f       	mul	r22, r24
    1f1a:	80 01       	movw	r16, r0
    1f1c:	69 9f       	mul	r22, r25
    1f1e:	10 0d       	add	r17, r0
    1f20:	78 9f       	mul	r23, r24
    1f22:	10 0d       	add	r17, r0
    1f24:	11 24       	eor	r1, r1
    1f26:	c8 01       	movw	r24, r16
    1f28:	0f d0       	rcall	.+30     	; 0x1f48 <malloc>
    1f2a:	c8 2f       	mov	r28, r24
    1f2c:	d9 2f       	mov	r29, r25
    1f2e:	20 97       	sbiw	r28, 0x00	; 0
    1f30:	29 f0       	breq	.+10     	; 0x1f3c <calloc+0x2c>
    1f32:	a8 01       	movw	r20, r16
    1f34:	60 e0       	ldi	r22, 0x00	; 0
    1f36:	70 e0       	ldi	r23, 0x00	; 0
    1f38:	8c 2f       	mov	r24, r28
    1f3a:	23 d2       	rcall	.+1094   	; 0x2382 <memset>
    1f3c:	ce 01       	movw	r24, r28
    1f3e:	df 91       	pop	r29
    1f40:	cf 91       	pop	r28
    1f42:	1f 91       	pop	r17
    1f44:	0f 91       	pop	r16
    1f46:	08 95       	ret

00001f48 <malloc>:
    1f48:	0f 93       	push	r16
    1f4a:	1f 93       	push	r17
    1f4c:	cf 93       	push	r28
    1f4e:	df 93       	push	r29
    1f50:	82 30       	cpi	r24, 0x02	; 2
    1f52:	91 05       	cpc	r25, r1
    1f54:	10 f4       	brcc	.+4      	; 0x1f5a <malloc+0x12>
    1f56:	82 e0       	ldi	r24, 0x02	; 2
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	e0 91 23 05 	lds	r30, 0x0523
    1f5e:	f0 91 24 05 	lds	r31, 0x0524
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	30 e0       	ldi	r19, 0x00	; 0
    1f66:	c0 e0       	ldi	r28, 0x00	; 0
    1f68:	d0 e0       	ldi	r29, 0x00	; 0
    1f6a:	23 c0       	rjmp	.+70     	; 0x1fb2 <malloc+0x6a>
    1f6c:	40 81       	ld	r20, Z
    1f6e:	51 81       	ldd	r21, Z+1	; 0x01
    1f70:	48 17       	cp	r20, r24
    1f72:	59 07       	cpc	r21, r25
    1f74:	a8 f0       	brcs	.+42     	; 0x1fa0 <malloc+0x58>
    1f76:	48 17       	cp	r20, r24
    1f78:	59 07       	cpc	r21, r25
    1f7a:	61 f4       	brne	.+24     	; 0x1f94 <malloc+0x4c>
    1f7c:	82 81       	ldd	r24, Z+2	; 0x02
    1f7e:	93 81       	ldd	r25, Z+3	; 0x03
    1f80:	20 97       	sbiw	r28, 0x00	; 0
    1f82:	19 f0       	breq	.+6      	; 0x1f8a <malloc+0x42>
    1f84:	9b 83       	std	Y+3, r25	; 0x03
    1f86:	8a 83       	std	Y+2, r24	; 0x02
    1f88:	2e c0       	rjmp	.+92     	; 0x1fe6 <malloc+0x9e>
    1f8a:	90 93 24 05 	sts	0x0524, r25
    1f8e:	80 93 23 05 	sts	0x0523, r24
    1f92:	29 c0       	rjmp	.+82     	; 0x1fe6 <malloc+0x9e>
    1f94:	21 15       	cp	r18, r1
    1f96:	31 05       	cpc	r19, r1
    1f98:	29 f0       	breq	.+10     	; 0x1fa4 <malloc+0x5c>
    1f9a:	42 17       	cp	r20, r18
    1f9c:	53 07       	cpc	r21, r19
    1f9e:	10 f0       	brcs	.+4      	; 0x1fa4 <malloc+0x5c>
    1fa0:	a9 01       	movw	r20, r18
    1fa2:	02 c0       	rjmp	.+4      	; 0x1fa8 <malloc+0x60>
    1fa4:	be 01       	movw	r22, r28
    1fa6:	df 01       	movw	r26, r30
    1fa8:	02 81       	ldd	r16, Z+2	; 0x02
    1faa:	13 81       	ldd	r17, Z+3	; 0x03
    1fac:	ef 01       	movw	r28, r30
    1fae:	9a 01       	movw	r18, r20
    1fb0:	f8 01       	movw	r30, r16
    1fb2:	30 97       	sbiw	r30, 0x00	; 0
    1fb4:	d9 f6       	brne	.-74     	; 0x1f6c <malloc+0x24>
    1fb6:	21 15       	cp	r18, r1
    1fb8:	31 05       	cpc	r19, r1
    1fba:	09 f1       	breq	.+66     	; 0x1ffe <malloc+0xb6>
    1fbc:	28 1b       	sub	r18, r24
    1fbe:	39 0b       	sbc	r19, r25
    1fc0:	24 30       	cpi	r18, 0x04	; 4
    1fc2:	31 05       	cpc	r19, r1
    1fc4:	90 f4       	brcc	.+36     	; 0x1fea <malloc+0xa2>
    1fc6:	12 96       	adiw	r26, 0x02	; 2
    1fc8:	8d 91       	ld	r24, X+
    1fca:	9c 91       	ld	r25, X
    1fcc:	13 97       	sbiw	r26, 0x03	; 3
    1fce:	61 15       	cp	r22, r1
    1fd0:	71 05       	cpc	r23, r1
    1fd2:	21 f0       	breq	.+8      	; 0x1fdc <malloc+0x94>
    1fd4:	fb 01       	movw	r30, r22
    1fd6:	93 83       	std	Z+3, r25	; 0x03
    1fd8:	82 83       	std	Z+2, r24	; 0x02
    1fda:	04 c0       	rjmp	.+8      	; 0x1fe4 <malloc+0x9c>
    1fdc:	90 93 24 05 	sts	0x0524, r25
    1fe0:	80 93 23 05 	sts	0x0523, r24
    1fe4:	fd 01       	movw	r30, r26
    1fe6:	32 96       	adiw	r30, 0x02	; 2
    1fe8:	44 c0       	rjmp	.+136    	; 0x2072 <malloc+0x12a>
    1fea:	fd 01       	movw	r30, r26
    1fec:	e2 0f       	add	r30, r18
    1fee:	f3 1f       	adc	r31, r19
    1ff0:	81 93       	st	Z+, r24
    1ff2:	91 93       	st	Z+, r25
    1ff4:	22 50       	subi	r18, 0x02	; 2
    1ff6:	31 09       	sbc	r19, r1
    1ff8:	2d 93       	st	X+, r18
    1ffa:	3c 93       	st	X, r19
    1ffc:	3a c0       	rjmp	.+116    	; 0x2072 <malloc+0x12a>
    1ffe:	20 91 21 05 	lds	r18, 0x0521
    2002:	30 91 22 05 	lds	r19, 0x0522
    2006:	23 2b       	or	r18, r19
    2008:	41 f4       	brne	.+16     	; 0x201a <malloc+0xd2>
    200a:	20 91 02 01 	lds	r18, 0x0102
    200e:	30 91 03 01 	lds	r19, 0x0103
    2012:	30 93 22 05 	sts	0x0522, r19
    2016:	20 93 21 05 	sts	0x0521, r18
    201a:	20 91 00 01 	lds	r18, 0x0100
    201e:	30 91 01 01 	lds	r19, 0x0101
    2022:	21 15       	cp	r18, r1
    2024:	31 05       	cpc	r19, r1
    2026:	41 f4       	brne	.+16     	; 0x2038 <malloc+0xf0>
    2028:	2d b7       	in	r18, 0x3d	; 61
    202a:	3e b7       	in	r19, 0x3e	; 62
    202c:	40 91 04 01 	lds	r20, 0x0104
    2030:	50 91 05 01 	lds	r21, 0x0105
    2034:	24 1b       	sub	r18, r20
    2036:	35 0b       	sbc	r19, r21
    2038:	e0 91 21 05 	lds	r30, 0x0521
    203c:	f0 91 22 05 	lds	r31, 0x0522
    2040:	e2 17       	cp	r30, r18
    2042:	f3 07       	cpc	r31, r19
    2044:	a0 f4       	brcc	.+40     	; 0x206e <malloc+0x126>
    2046:	2e 1b       	sub	r18, r30
    2048:	3f 0b       	sbc	r19, r31
    204a:	28 17       	cp	r18, r24
    204c:	39 07       	cpc	r19, r25
    204e:	78 f0       	brcs	.+30     	; 0x206e <malloc+0x126>
    2050:	ac 01       	movw	r20, r24
    2052:	4e 5f       	subi	r20, 0xFE	; 254
    2054:	5f 4f       	sbci	r21, 0xFF	; 255
    2056:	24 17       	cp	r18, r20
    2058:	35 07       	cpc	r19, r21
    205a:	48 f0       	brcs	.+18     	; 0x206e <malloc+0x126>
    205c:	4e 0f       	add	r20, r30
    205e:	5f 1f       	adc	r21, r31
    2060:	50 93 22 05 	sts	0x0522, r21
    2064:	40 93 21 05 	sts	0x0521, r20
    2068:	81 93       	st	Z+, r24
    206a:	91 93       	st	Z+, r25
    206c:	02 c0       	rjmp	.+4      	; 0x2072 <malloc+0x12a>
    206e:	e0 e0       	ldi	r30, 0x00	; 0
    2070:	f0 e0       	ldi	r31, 0x00	; 0
    2072:	cf 01       	movw	r24, r30
    2074:	df 91       	pop	r29
    2076:	cf 91       	pop	r28
    2078:	1f 91       	pop	r17
    207a:	0f 91       	pop	r16
    207c:	08 95       	ret

0000207e <free>:
    207e:	ef 92       	push	r14
    2080:	ff 92       	push	r15
    2082:	0f 93       	push	r16
    2084:	1f 93       	push	r17
    2086:	cf 93       	push	r28
    2088:	df 93       	push	r29
    208a:	00 97       	sbiw	r24, 0x00	; 0
    208c:	09 f4       	brne	.+2      	; 0x2090 <free+0x12>
    208e:	8f c0       	rjmp	.+286    	; 0x21ae <free+0x130>
    2090:	dc 01       	movw	r26, r24
    2092:	12 97       	sbiw	r26, 0x02	; 2
    2094:	13 96       	adiw	r26, 0x03	; 3
    2096:	1c 92       	st	X, r1
    2098:	1e 92       	st	-X, r1
    209a:	12 97       	sbiw	r26, 0x02	; 2
    209c:	e0 90 23 05 	lds	r14, 0x0523
    20a0:	f0 90 24 05 	lds	r15, 0x0524
    20a4:	e1 14       	cp	r14, r1
    20a6:	f1 04       	cpc	r15, r1
    20a8:	89 f4       	brne	.+34     	; 0x20cc <free+0x4e>
    20aa:	2d 91       	ld	r18, X+
    20ac:	3c 91       	ld	r19, X
    20ae:	11 97       	sbiw	r26, 0x01	; 1
    20b0:	28 0f       	add	r18, r24
    20b2:	39 1f       	adc	r19, r25
    20b4:	80 91 21 05 	lds	r24, 0x0521
    20b8:	90 91 22 05 	lds	r25, 0x0522
    20bc:	82 17       	cp	r24, r18
    20be:	93 07       	cpc	r25, r19
    20c0:	89 f5       	brne	.+98     	; 0x2124 <free+0xa6>
    20c2:	b0 93 22 05 	sts	0x0522, r27
    20c6:	a0 93 21 05 	sts	0x0521, r26
    20ca:	71 c0       	rjmp	.+226    	; 0x21ae <free+0x130>
    20cc:	e7 01       	movw	r28, r14
    20ce:	20 e0       	ldi	r18, 0x00	; 0
    20d0:	30 e0       	ldi	r19, 0x00	; 0
    20d2:	01 c0       	rjmp	.+2      	; 0x20d6 <free+0x58>
    20d4:	ea 01       	movw	r28, r20
    20d6:	ca 17       	cp	r28, r26
    20d8:	db 07       	cpc	r29, r27
    20da:	38 f4       	brcc	.+14     	; 0x20ea <free+0x6c>
    20dc:	4a 81       	ldd	r20, Y+2	; 0x02
    20de:	5b 81       	ldd	r21, Y+3	; 0x03
    20e0:	9e 01       	movw	r18, r28
    20e2:	41 15       	cp	r20, r1
    20e4:	51 05       	cpc	r21, r1
    20e6:	b1 f7       	brne	.-20     	; 0x20d4 <free+0x56>
    20e8:	22 c0       	rjmp	.+68     	; 0x212e <free+0xb0>
    20ea:	bc 01       	movw	r22, r24
    20ec:	62 50       	subi	r22, 0x02	; 2
    20ee:	71 09       	sbc	r23, r1
    20f0:	fb 01       	movw	r30, r22
    20f2:	d3 83       	std	Z+3, r29	; 0x03
    20f4:	c2 83       	std	Z+2, r28	; 0x02
    20f6:	00 81       	ld	r16, Z
    20f8:	11 81       	ldd	r17, Z+1	; 0x01
    20fa:	ac 01       	movw	r20, r24
    20fc:	40 0f       	add	r20, r16
    20fe:	51 1f       	adc	r21, r17
    2100:	4c 17       	cp	r20, r28
    2102:	5d 07       	cpc	r21, r29
    2104:	61 f4       	brne	.+24     	; 0x211e <free+0xa0>
    2106:	48 81       	ld	r20, Y
    2108:	59 81       	ldd	r21, Y+1	; 0x01
    210a:	40 0f       	add	r20, r16
    210c:	51 1f       	adc	r21, r17
    210e:	4e 5f       	subi	r20, 0xFE	; 254
    2110:	5f 4f       	sbci	r21, 0xFF	; 255
    2112:	51 83       	std	Z+1, r21	; 0x01
    2114:	40 83       	st	Z, r20
    2116:	4a 81       	ldd	r20, Y+2	; 0x02
    2118:	5b 81       	ldd	r21, Y+3	; 0x03
    211a:	53 83       	std	Z+3, r21	; 0x03
    211c:	42 83       	std	Z+2, r20	; 0x02
    211e:	21 15       	cp	r18, r1
    2120:	31 05       	cpc	r19, r1
    2122:	29 f4       	brne	.+10     	; 0x212e <free+0xb0>
    2124:	b0 93 24 05 	sts	0x0524, r27
    2128:	a0 93 23 05 	sts	0x0523, r26
    212c:	40 c0       	rjmp	.+128    	; 0x21ae <free+0x130>
    212e:	f9 01       	movw	r30, r18
    2130:	b3 83       	std	Z+3, r27	; 0x03
    2132:	a2 83       	std	Z+2, r26	; 0x02
    2134:	e9 01       	movw	r28, r18
    2136:	69 91       	ld	r22, Y+
    2138:	79 91       	ld	r23, Y+
    213a:	c6 0f       	add	r28, r22
    213c:	d7 1f       	adc	r29, r23
    213e:	ac 17       	cp	r26, r28
    2140:	bd 07       	cpc	r27, r29
    2142:	79 f4       	brne	.+30     	; 0x2162 <free+0xe4>
    2144:	dc 01       	movw	r26, r24
    2146:	5e 91       	ld	r21, -X
    2148:	4e 91       	ld	r20, -X
    214a:	46 0f       	add	r20, r22
    214c:	57 1f       	adc	r21, r23
    214e:	4e 5f       	subi	r20, 0xFE	; 254
    2150:	5f 4f       	sbci	r21, 0xFF	; 255
    2152:	51 83       	std	Z+1, r21	; 0x01
    2154:	40 83       	st	Z, r20
    2156:	12 96       	adiw	r26, 0x02	; 2
    2158:	8d 91       	ld	r24, X+
    215a:	9c 91       	ld	r25, X
    215c:	13 97       	sbiw	r26, 0x03	; 3
    215e:	93 83       	std	Z+3, r25	; 0x03
    2160:	82 83       	std	Z+2, r24	; 0x02
    2162:	a0 e0       	ldi	r26, 0x00	; 0
    2164:	b0 e0       	ldi	r27, 0x00	; 0
    2166:	02 c0       	rjmp	.+4      	; 0x216c <free+0xee>
    2168:	d7 01       	movw	r26, r14
    216a:	7c 01       	movw	r14, r24
    216c:	f7 01       	movw	r30, r14
    216e:	82 81       	ldd	r24, Z+2	; 0x02
    2170:	93 81       	ldd	r25, Z+3	; 0x03
    2172:	00 97       	sbiw	r24, 0x00	; 0
    2174:	c9 f7       	brne	.-14     	; 0x2168 <free+0xea>
    2176:	c7 01       	movw	r24, r14
    2178:	02 96       	adiw	r24, 0x02	; 2
    217a:	20 81       	ld	r18, Z
    217c:	31 81       	ldd	r19, Z+1	; 0x01
    217e:	82 0f       	add	r24, r18
    2180:	93 1f       	adc	r25, r19
    2182:	20 91 21 05 	lds	r18, 0x0521
    2186:	30 91 22 05 	lds	r19, 0x0522
    218a:	28 17       	cp	r18, r24
    218c:	39 07       	cpc	r19, r25
    218e:	79 f4       	brne	.+30     	; 0x21ae <free+0x130>
    2190:	10 97       	sbiw	r26, 0x00	; 0
    2192:	29 f4       	brne	.+10     	; 0x219e <free+0x120>
    2194:	10 92 24 05 	sts	0x0524, r1
    2198:	10 92 23 05 	sts	0x0523, r1
    219c:	04 c0       	rjmp	.+8      	; 0x21a6 <free+0x128>
    219e:	13 96       	adiw	r26, 0x03	; 3
    21a0:	1c 92       	st	X, r1
    21a2:	1e 92       	st	-X, r1
    21a4:	12 97       	sbiw	r26, 0x02	; 2
    21a6:	f0 92 22 05 	sts	0x0522, r15
    21aa:	e0 92 21 05 	sts	0x0521, r14
    21ae:	df 91       	pop	r29
    21b0:	cf 91       	pop	r28
    21b2:	1f 91       	pop	r17
    21b4:	0f 91       	pop	r16
    21b6:	ff 90       	pop	r15
    21b8:	ef 90       	pop	r14
    21ba:	08 95       	ret

000021bc <__ftoa_engine>:
    21bc:	28 30       	cpi	r18, 0x08	; 8
    21be:	08 f0       	brcs	.+2      	; 0x21c2 <__ftoa_engine+0x6>
    21c0:	27 e0       	ldi	r18, 0x07	; 7
    21c2:	33 27       	eor	r19, r19
    21c4:	da 01       	movw	r26, r20
    21c6:	99 0f       	add	r25, r25
    21c8:	31 1d       	adc	r19, r1
    21ca:	87 fd       	sbrc	r24, 7
    21cc:	91 60       	ori	r25, 0x01	; 1
    21ce:	00 96       	adiw	r24, 0x00	; 0
    21d0:	61 05       	cpc	r22, r1
    21d2:	71 05       	cpc	r23, r1
    21d4:	39 f4       	brne	.+14     	; 0x21e4 <__ftoa_engine+0x28>
    21d6:	32 60       	ori	r19, 0x02	; 2
    21d8:	2e 5f       	subi	r18, 0xFE	; 254
    21da:	3d 93       	st	X+, r19
    21dc:	30 e3       	ldi	r19, 0x30	; 48
    21de:	2a 95       	dec	r18
    21e0:	e1 f7       	brne	.-8      	; 0x21da <__ftoa_engine+0x1e>
    21e2:	08 95       	ret
    21e4:	9f 3f       	cpi	r25, 0xFF	; 255
    21e6:	30 f0       	brcs	.+12     	; 0x21f4 <__ftoa_engine+0x38>
    21e8:	80 38       	cpi	r24, 0x80	; 128
    21ea:	71 05       	cpc	r23, r1
    21ec:	61 05       	cpc	r22, r1
    21ee:	09 f0       	breq	.+2      	; 0x21f2 <__ftoa_engine+0x36>
    21f0:	3c 5f       	subi	r19, 0xFC	; 252
    21f2:	3c 5f       	subi	r19, 0xFC	; 252
    21f4:	3d 93       	st	X+, r19
    21f6:	91 30       	cpi	r25, 0x01	; 1
    21f8:	08 f0       	brcs	.+2      	; 0x21fc <__ftoa_engine+0x40>
    21fa:	80 68       	ori	r24, 0x80	; 128
    21fc:	91 1d       	adc	r25, r1
    21fe:	df 93       	push	r29
    2200:	cf 93       	push	r28
    2202:	1f 93       	push	r17
    2204:	0f 93       	push	r16
    2206:	ff 92       	push	r15
    2208:	ef 92       	push	r14
    220a:	19 2f       	mov	r17, r25
    220c:	98 7f       	andi	r25, 0xF8	; 248
    220e:	96 95       	lsr	r25
    2210:	e9 2f       	mov	r30, r25
    2212:	96 95       	lsr	r25
    2214:	96 95       	lsr	r25
    2216:	e9 0f       	add	r30, r25
    2218:	ff 27       	eor	r31, r31
    221a:	e2 51       	subi	r30, 0x12	; 18
    221c:	ff 4f       	sbci	r31, 0xFF	; 255
    221e:	99 27       	eor	r25, r25
    2220:	33 27       	eor	r19, r19
    2222:	ee 24       	eor	r14, r14
    2224:	ff 24       	eor	r15, r15
    2226:	a7 01       	movw	r20, r14
    2228:	e7 01       	movw	r28, r14
    222a:	05 90       	lpm	r0, Z+
    222c:	08 94       	sec
    222e:	07 94       	ror	r0
    2230:	28 f4       	brcc	.+10     	; 0x223c <__ftoa_engine+0x80>
    2232:	36 0f       	add	r19, r22
    2234:	e7 1e       	adc	r14, r23
    2236:	f8 1e       	adc	r15, r24
    2238:	49 1f       	adc	r20, r25
    223a:	51 1d       	adc	r21, r1
    223c:	66 0f       	add	r22, r22
    223e:	77 1f       	adc	r23, r23
    2240:	88 1f       	adc	r24, r24
    2242:	99 1f       	adc	r25, r25
    2244:	06 94       	lsr	r0
    2246:	a1 f7       	brne	.-24     	; 0x2230 <__ftoa_engine+0x74>
    2248:	05 90       	lpm	r0, Z+
    224a:	07 94       	ror	r0
    224c:	28 f4       	brcc	.+10     	; 0x2258 <__ftoa_engine+0x9c>
    224e:	e7 0e       	add	r14, r23
    2250:	f8 1e       	adc	r15, r24
    2252:	49 1f       	adc	r20, r25
    2254:	56 1f       	adc	r21, r22
    2256:	c1 1d       	adc	r28, r1
    2258:	77 0f       	add	r23, r23
    225a:	88 1f       	adc	r24, r24
    225c:	99 1f       	adc	r25, r25
    225e:	66 1f       	adc	r22, r22
    2260:	06 94       	lsr	r0
    2262:	a1 f7       	brne	.-24     	; 0x224c <__ftoa_engine+0x90>
    2264:	05 90       	lpm	r0, Z+
    2266:	07 94       	ror	r0
    2268:	28 f4       	brcc	.+10     	; 0x2274 <__ftoa_engine+0xb8>
    226a:	f8 0e       	add	r15, r24
    226c:	49 1f       	adc	r20, r25
    226e:	56 1f       	adc	r21, r22
    2270:	c7 1f       	adc	r28, r23
    2272:	d1 1d       	adc	r29, r1
    2274:	88 0f       	add	r24, r24
    2276:	99 1f       	adc	r25, r25
    2278:	66 1f       	adc	r22, r22
    227a:	77 1f       	adc	r23, r23
    227c:	06 94       	lsr	r0
    227e:	a1 f7       	brne	.-24     	; 0x2268 <__ftoa_engine+0xac>
    2280:	05 90       	lpm	r0, Z+
    2282:	07 94       	ror	r0
    2284:	20 f4       	brcc	.+8      	; 0x228e <__ftoa_engine+0xd2>
    2286:	49 0f       	add	r20, r25
    2288:	56 1f       	adc	r21, r22
    228a:	c7 1f       	adc	r28, r23
    228c:	d8 1f       	adc	r29, r24
    228e:	99 0f       	add	r25, r25
    2290:	66 1f       	adc	r22, r22
    2292:	77 1f       	adc	r23, r23
    2294:	88 1f       	adc	r24, r24
    2296:	06 94       	lsr	r0
    2298:	a9 f7       	brne	.-22     	; 0x2284 <__ftoa_engine+0xc8>
    229a:	84 91       	lpm	r24, Z
    229c:	10 95       	com	r17
    229e:	17 70       	andi	r17, 0x07	; 7
    22a0:	41 f0       	breq	.+16     	; 0x22b2 <__ftoa_engine+0xf6>
    22a2:	d6 95       	lsr	r29
    22a4:	c7 95       	ror	r28
    22a6:	57 95       	ror	r21
    22a8:	47 95       	ror	r20
    22aa:	f7 94       	ror	r15
    22ac:	e7 94       	ror	r14
    22ae:	1a 95       	dec	r17
    22b0:	c1 f7       	brne	.-16     	; 0x22a2 <__ftoa_engine+0xe6>
    22b2:	e4 e9       	ldi	r30, 0x94	; 148
    22b4:	f0 e0       	ldi	r31, 0x00	; 0
    22b6:	68 94       	set
    22b8:	15 90       	lpm	r1, Z+
    22ba:	15 91       	lpm	r17, Z+
    22bc:	35 91       	lpm	r19, Z+
    22be:	65 91       	lpm	r22, Z+
    22c0:	95 91       	lpm	r25, Z+
    22c2:	05 90       	lpm	r0, Z+
    22c4:	7f e2       	ldi	r23, 0x2F	; 47
    22c6:	73 95       	inc	r23
    22c8:	e1 18       	sub	r14, r1
    22ca:	f1 0a       	sbc	r15, r17
    22cc:	43 0b       	sbc	r20, r19
    22ce:	56 0b       	sbc	r21, r22
    22d0:	c9 0b       	sbc	r28, r25
    22d2:	d0 09       	sbc	r29, r0
    22d4:	c0 f7       	brcc	.-16     	; 0x22c6 <__ftoa_engine+0x10a>
    22d6:	e1 0c       	add	r14, r1
    22d8:	f1 1e       	adc	r15, r17
    22da:	43 1f       	adc	r20, r19
    22dc:	56 1f       	adc	r21, r22
    22de:	c9 1f       	adc	r28, r25
    22e0:	d0 1d       	adc	r29, r0
    22e2:	7e f4       	brtc	.+30     	; 0x2302 <__ftoa_engine+0x146>
    22e4:	70 33       	cpi	r23, 0x30	; 48
    22e6:	11 f4       	brne	.+4      	; 0x22ec <__ftoa_engine+0x130>
    22e8:	8a 95       	dec	r24
    22ea:	e6 cf       	rjmp	.-52     	; 0x22b8 <__ftoa_engine+0xfc>
    22ec:	e8 94       	clt
    22ee:	01 50       	subi	r16, 0x01	; 1
    22f0:	30 f0       	brcs	.+12     	; 0x22fe <__ftoa_engine+0x142>
    22f2:	08 0f       	add	r16, r24
    22f4:	0a f4       	brpl	.+2      	; 0x22f8 <__ftoa_engine+0x13c>
    22f6:	00 27       	eor	r16, r16
    22f8:	02 17       	cp	r16, r18
    22fa:	08 f4       	brcc	.+2      	; 0x22fe <__ftoa_engine+0x142>
    22fc:	20 2f       	mov	r18, r16
    22fe:	23 95       	inc	r18
    2300:	02 2f       	mov	r16, r18
    2302:	7a 33       	cpi	r23, 0x3A	; 58
    2304:	28 f0       	brcs	.+10     	; 0x2310 <__ftoa_engine+0x154>
    2306:	79 e3       	ldi	r23, 0x39	; 57
    2308:	7d 93       	st	X+, r23
    230a:	2a 95       	dec	r18
    230c:	e9 f7       	brne	.-6      	; 0x2308 <__ftoa_engine+0x14c>
    230e:	10 c0       	rjmp	.+32     	; 0x2330 <__ftoa_engine+0x174>
    2310:	7d 93       	st	X+, r23
    2312:	2a 95       	dec	r18
    2314:	89 f6       	brne	.-94     	; 0x22b8 <__ftoa_engine+0xfc>
    2316:	06 94       	lsr	r0
    2318:	97 95       	ror	r25
    231a:	67 95       	ror	r22
    231c:	37 95       	ror	r19
    231e:	17 95       	ror	r17
    2320:	17 94       	ror	r1
    2322:	e1 18       	sub	r14, r1
    2324:	f1 0a       	sbc	r15, r17
    2326:	43 0b       	sbc	r20, r19
    2328:	56 0b       	sbc	r21, r22
    232a:	c9 0b       	sbc	r28, r25
    232c:	d0 09       	sbc	r29, r0
    232e:	98 f0       	brcs	.+38     	; 0x2356 <__ftoa_engine+0x19a>
    2330:	23 95       	inc	r18
    2332:	7e 91       	ld	r23, -X
    2334:	73 95       	inc	r23
    2336:	7a 33       	cpi	r23, 0x3A	; 58
    2338:	08 f0       	brcs	.+2      	; 0x233c <__ftoa_engine+0x180>
    233a:	70 e3       	ldi	r23, 0x30	; 48
    233c:	7c 93       	st	X, r23
    233e:	20 13       	cpse	r18, r16
    2340:	b8 f7       	brcc	.-18     	; 0x2330 <__ftoa_engine+0x174>
    2342:	7e 91       	ld	r23, -X
    2344:	70 61       	ori	r23, 0x10	; 16
    2346:	7d 93       	st	X+, r23
    2348:	30 f0       	brcs	.+12     	; 0x2356 <__ftoa_engine+0x19a>
    234a:	83 95       	inc	r24
    234c:	71 e3       	ldi	r23, 0x31	; 49
    234e:	7d 93       	st	X+, r23
    2350:	70 e3       	ldi	r23, 0x30	; 48
    2352:	2a 95       	dec	r18
    2354:	e1 f7       	brne	.-8      	; 0x234e <__ftoa_engine+0x192>
    2356:	11 24       	eor	r1, r1
    2358:	ef 90       	pop	r14
    235a:	ff 90       	pop	r15
    235c:	0f 91       	pop	r16
    235e:	1f 91       	pop	r17
    2360:	cf 91       	pop	r28
    2362:	df 91       	pop	r29
    2364:	99 27       	eor	r25, r25
    2366:	87 fd       	sbrc	r24, 7
    2368:	90 95       	com	r25
    236a:	08 95       	ret

0000236c <strnlen_P>:
    236c:	fc 01       	movw	r30, r24
    236e:	05 90       	lpm	r0, Z+
    2370:	61 50       	subi	r22, 0x01	; 1
    2372:	70 40       	sbci	r23, 0x00	; 0
    2374:	01 10       	cpse	r0, r1
    2376:	d8 f7       	brcc	.-10     	; 0x236e <strnlen_P+0x2>
    2378:	80 95       	com	r24
    237a:	90 95       	com	r25
    237c:	8e 0f       	add	r24, r30
    237e:	9f 1f       	adc	r25, r31
    2380:	08 95       	ret

00002382 <memset>:
    2382:	dc 01       	movw	r26, r24
    2384:	01 c0       	rjmp	.+2      	; 0x2388 <memset+0x6>
    2386:	6d 93       	st	X+, r22
    2388:	41 50       	subi	r20, 0x01	; 1
    238a:	50 40       	sbci	r21, 0x00	; 0
    238c:	e0 f7       	brcc	.-8      	; 0x2386 <memset+0x4>
    238e:	08 95       	ret

00002390 <strcmp>:
    2390:	fb 01       	movw	r30, r22
    2392:	dc 01       	movw	r26, r24
    2394:	8d 91       	ld	r24, X+
    2396:	01 90       	ld	r0, Z+
    2398:	80 19       	sub	r24, r0
    239a:	01 10       	cpse	r0, r1
    239c:	d9 f3       	breq	.-10     	; 0x2394 <strcmp+0x4>
    239e:	99 0b       	sbc	r25, r25
    23a0:	08 95       	ret

000023a2 <strcpy>:
    23a2:	fb 01       	movw	r30, r22
    23a4:	dc 01       	movw	r26, r24
    23a6:	01 90       	ld	r0, Z+
    23a8:	0d 92       	st	X+, r0
    23aa:	00 20       	and	r0, r0
    23ac:	e1 f7       	brne	.-8      	; 0x23a6 <strcpy+0x4>
    23ae:	08 95       	ret

000023b0 <strnlen>:
    23b0:	fc 01       	movw	r30, r24
    23b2:	61 50       	subi	r22, 0x01	; 1
    23b4:	70 40       	sbci	r23, 0x00	; 0
    23b6:	01 90       	ld	r0, Z+
    23b8:	01 10       	cpse	r0, r1
    23ba:	d8 f7       	brcc	.-10     	; 0x23b2 <strnlen+0x2>
    23bc:	80 95       	com	r24
    23be:	90 95       	com	r25
    23c0:	8e 0f       	add	r24, r30
    23c2:	9f 1f       	adc	r25, r31
    23c4:	08 95       	ret

000023c6 <fputc>:
    23c6:	0f 93       	push	r16
    23c8:	1f 93       	push	r17
    23ca:	cf 93       	push	r28
    23cc:	df 93       	push	r29
    23ce:	8c 01       	movw	r16, r24
    23d0:	eb 01       	movw	r28, r22
    23d2:	8b 81       	ldd	r24, Y+3	; 0x03
    23d4:	81 fd       	sbrc	r24, 1
    23d6:	03 c0       	rjmp	.+6      	; 0x23de <fputc+0x18>
    23d8:	0f ef       	ldi	r16, 0xFF	; 255
    23da:	1f ef       	ldi	r17, 0xFF	; 255
    23dc:	1a c0       	rjmp	.+52     	; 0x2412 <fputc+0x4c>
    23de:	82 ff       	sbrs	r24, 2
    23e0:	0d c0       	rjmp	.+26     	; 0x23fc <fputc+0x36>
    23e2:	2e 81       	ldd	r18, Y+6	; 0x06
    23e4:	3f 81       	ldd	r19, Y+7	; 0x07
    23e6:	8c 81       	ldd	r24, Y+4	; 0x04
    23e8:	9d 81       	ldd	r25, Y+5	; 0x05
    23ea:	28 17       	cp	r18, r24
    23ec:	39 07       	cpc	r19, r25
    23ee:	64 f4       	brge	.+24     	; 0x2408 <fputc+0x42>
    23f0:	e8 81       	ld	r30, Y
    23f2:	f9 81       	ldd	r31, Y+1	; 0x01
    23f4:	01 93       	st	Z+, r16
    23f6:	f9 83       	std	Y+1, r31	; 0x01
    23f8:	e8 83       	st	Y, r30
    23fa:	06 c0       	rjmp	.+12     	; 0x2408 <fputc+0x42>
    23fc:	e8 85       	ldd	r30, Y+8	; 0x08
    23fe:	f9 85       	ldd	r31, Y+9	; 0x09
    2400:	80 2f       	mov	r24, r16
    2402:	09 95       	icall
    2404:	89 2b       	or	r24, r25
    2406:	41 f7       	brne	.-48     	; 0x23d8 <fputc+0x12>
    2408:	8e 81       	ldd	r24, Y+6	; 0x06
    240a:	9f 81       	ldd	r25, Y+7	; 0x07
    240c:	01 96       	adiw	r24, 0x01	; 1
    240e:	9f 83       	std	Y+7, r25	; 0x07
    2410:	8e 83       	std	Y+6, r24	; 0x06
    2412:	c8 01       	movw	r24, r16
    2414:	df 91       	pop	r29
    2416:	cf 91       	pop	r28
    2418:	1f 91       	pop	r17
    241a:	0f 91       	pop	r16
    241c:	08 95       	ret

0000241e <sprintf>:
    241e:	0f 93       	push	r16
    2420:	1f 93       	push	r17
    2422:	cf 93       	push	r28
    2424:	df 93       	push	r29
    2426:	cd b7       	in	r28, 0x3d	; 61
    2428:	de b7       	in	r29, 0x3e	; 62
    242a:	2e 97       	sbiw	r28, 0x0e	; 14
    242c:	0f b6       	in	r0, 0x3f	; 63
    242e:	f8 94       	cli
    2430:	de bf       	out	0x3e, r29	; 62
    2432:	0f be       	out	0x3f, r0	; 63
    2434:	cd bf       	out	0x3d, r28	; 61
    2436:	0d 89       	ldd	r16, Y+21	; 0x15
    2438:	1e 89       	ldd	r17, Y+22	; 0x16
    243a:	86 e0       	ldi	r24, 0x06	; 6
    243c:	8c 83       	std	Y+4, r24	; 0x04
    243e:	1a 83       	std	Y+2, r17	; 0x02
    2440:	09 83       	std	Y+1, r16	; 0x01
    2442:	8f ef       	ldi	r24, 0xFF	; 255
    2444:	9f e7       	ldi	r25, 0x7F	; 127
    2446:	9e 83       	std	Y+6, r25	; 0x06
    2448:	8d 83       	std	Y+5, r24	; 0x05
    244a:	ce 01       	movw	r24, r28
    244c:	49 96       	adiw	r24, 0x19	; 25
    244e:	ac 01       	movw	r20, r24
    2450:	6f 89       	ldd	r22, Y+23	; 0x17
    2452:	78 8d       	ldd	r23, Y+24	; 0x18
    2454:	ce 01       	movw	r24, r28
    2456:	01 96       	adiw	r24, 0x01	; 1
    2458:	9a d9       	rcall	.-3276   	; 0x178e <vfprintf>
    245a:	ef 81       	ldd	r30, Y+7	; 0x07
    245c:	f8 85       	ldd	r31, Y+8	; 0x08
    245e:	e0 0f       	add	r30, r16
    2460:	f1 1f       	adc	r31, r17
    2462:	10 82       	st	Z, r1
    2464:	2e 96       	adiw	r28, 0x0e	; 14
    2466:	0f b6       	in	r0, 0x3f	; 63
    2468:	f8 94       	cli
    246a:	de bf       	out	0x3e, r29	; 62
    246c:	0f be       	out	0x3f, r0	; 63
    246e:	cd bf       	out	0x3d, r28	; 61
    2470:	df 91       	pop	r29
    2472:	cf 91       	pop	r28
    2474:	1f 91       	pop	r17
    2476:	0f 91       	pop	r16
    2478:	08 95       	ret

0000247a <vsnprintf>:
    247a:	0f 93       	push	r16
    247c:	1f 93       	push	r17
    247e:	cf 93       	push	r28
    2480:	df 93       	push	r29
    2482:	cd b7       	in	r28, 0x3d	; 61
    2484:	de b7       	in	r29, 0x3e	; 62
    2486:	2e 97       	sbiw	r28, 0x0e	; 14
    2488:	0f b6       	in	r0, 0x3f	; 63
    248a:	f8 94       	cli
    248c:	de bf       	out	0x3e, r29	; 62
    248e:	0f be       	out	0x3f, r0	; 63
    2490:	cd bf       	out	0x3d, r28	; 61
    2492:	8c 01       	movw	r16, r24
    2494:	ca 01       	movw	r24, r20
    2496:	46 e0       	ldi	r20, 0x06	; 6
    2498:	4c 83       	std	Y+4, r20	; 0x04
    249a:	1a 83       	std	Y+2, r17	; 0x02
    249c:	09 83       	std	Y+1, r16	; 0x01
    249e:	77 ff       	sbrs	r23, 7
    24a0:	02 c0       	rjmp	.+4      	; 0x24a6 <vsnprintf+0x2c>
    24a2:	60 e0       	ldi	r22, 0x00	; 0
    24a4:	70 e8       	ldi	r23, 0x80	; 128
    24a6:	61 50       	subi	r22, 0x01	; 1
    24a8:	71 09       	sbc	r23, r1
    24aa:	7e 83       	std	Y+6, r23	; 0x06
    24ac:	6d 83       	std	Y+5, r22	; 0x05
    24ae:	a9 01       	movw	r20, r18
    24b0:	bc 01       	movw	r22, r24
    24b2:	ce 01       	movw	r24, r28
    24b4:	01 96       	adiw	r24, 0x01	; 1
    24b6:	6b d9       	rcall	.-3370   	; 0x178e <vfprintf>
    24b8:	4d 81       	ldd	r20, Y+5	; 0x05
    24ba:	5e 81       	ldd	r21, Y+6	; 0x06
    24bc:	57 fd       	sbrc	r21, 7
    24be:	0a c0       	rjmp	.+20     	; 0x24d4 <vsnprintf+0x5a>
    24c0:	2f 81       	ldd	r18, Y+7	; 0x07
    24c2:	38 85       	ldd	r19, Y+8	; 0x08
    24c4:	42 17       	cp	r20, r18
    24c6:	53 07       	cpc	r21, r19
    24c8:	0c f4       	brge	.+2      	; 0x24cc <vsnprintf+0x52>
    24ca:	9a 01       	movw	r18, r20
    24cc:	f8 01       	movw	r30, r16
    24ce:	e2 0f       	add	r30, r18
    24d0:	f3 1f       	adc	r31, r19
    24d2:	10 82       	st	Z, r1
    24d4:	2e 96       	adiw	r28, 0x0e	; 14
    24d6:	0f b6       	in	r0, 0x3f	; 63
    24d8:	f8 94       	cli
    24da:	de bf       	out	0x3e, r29	; 62
    24dc:	0f be       	out	0x3f, r0	; 63
    24de:	cd bf       	out	0x3d, r28	; 61
    24e0:	df 91       	pop	r29
    24e2:	cf 91       	pop	r28
    24e4:	1f 91       	pop	r17
    24e6:	0f 91       	pop	r16
    24e8:	08 95       	ret

000024ea <__ultoa_invert>:
    24ea:	fa 01       	movw	r30, r20
    24ec:	aa 27       	eor	r26, r26
    24ee:	28 30       	cpi	r18, 0x08	; 8
    24f0:	51 f1       	breq	.+84     	; 0x2546 <__ultoa_invert+0x5c>
    24f2:	20 31       	cpi	r18, 0x10	; 16
    24f4:	81 f1       	breq	.+96     	; 0x2556 <__ultoa_invert+0x6c>
    24f6:	e8 94       	clt
    24f8:	6f 93       	push	r22
    24fa:	6e 7f       	andi	r22, 0xFE	; 254
    24fc:	6e 5f       	subi	r22, 0xFE	; 254
    24fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2500:	8f 4f       	sbci	r24, 0xFF	; 255
    2502:	9f 4f       	sbci	r25, 0xFF	; 255
    2504:	af 4f       	sbci	r26, 0xFF	; 255
    2506:	b1 e0       	ldi	r27, 0x01	; 1
    2508:	3e d0       	rcall	.+124    	; 0x2586 <__ultoa_invert+0x9c>
    250a:	b4 e0       	ldi	r27, 0x04	; 4
    250c:	3c d0       	rcall	.+120    	; 0x2586 <__ultoa_invert+0x9c>
    250e:	67 0f       	add	r22, r23
    2510:	78 1f       	adc	r23, r24
    2512:	89 1f       	adc	r24, r25
    2514:	9a 1f       	adc	r25, r26
    2516:	a1 1d       	adc	r26, r1
    2518:	68 0f       	add	r22, r24
    251a:	79 1f       	adc	r23, r25
    251c:	8a 1f       	adc	r24, r26
    251e:	91 1d       	adc	r25, r1
    2520:	a1 1d       	adc	r26, r1
    2522:	6a 0f       	add	r22, r26
    2524:	71 1d       	adc	r23, r1
    2526:	81 1d       	adc	r24, r1
    2528:	91 1d       	adc	r25, r1
    252a:	a1 1d       	adc	r26, r1
    252c:	20 d0       	rcall	.+64     	; 0x256e <__ultoa_invert+0x84>
    252e:	09 f4       	brne	.+2      	; 0x2532 <__ultoa_invert+0x48>
    2530:	68 94       	set
    2532:	3f 91       	pop	r19
    2534:	2a e0       	ldi	r18, 0x0A	; 10
    2536:	26 9f       	mul	r18, r22
    2538:	11 24       	eor	r1, r1
    253a:	30 19       	sub	r19, r0
    253c:	30 5d       	subi	r19, 0xD0	; 208
    253e:	31 93       	st	Z+, r19
    2540:	de f6       	brtc	.-74     	; 0x24f8 <__ultoa_invert+0xe>
    2542:	cf 01       	movw	r24, r30
    2544:	08 95       	ret
    2546:	46 2f       	mov	r20, r22
    2548:	47 70       	andi	r20, 0x07	; 7
    254a:	40 5d       	subi	r20, 0xD0	; 208
    254c:	41 93       	st	Z+, r20
    254e:	b3 e0       	ldi	r27, 0x03	; 3
    2550:	0f d0       	rcall	.+30     	; 0x2570 <__ultoa_invert+0x86>
    2552:	c9 f7       	brne	.-14     	; 0x2546 <__ultoa_invert+0x5c>
    2554:	f6 cf       	rjmp	.-20     	; 0x2542 <__ultoa_invert+0x58>
    2556:	46 2f       	mov	r20, r22
    2558:	4f 70       	andi	r20, 0x0F	; 15
    255a:	40 5d       	subi	r20, 0xD0	; 208
    255c:	4a 33       	cpi	r20, 0x3A	; 58
    255e:	18 f0       	brcs	.+6      	; 0x2566 <__ultoa_invert+0x7c>
    2560:	49 5d       	subi	r20, 0xD9	; 217
    2562:	31 fd       	sbrc	r19, 1
    2564:	40 52       	subi	r20, 0x20	; 32
    2566:	41 93       	st	Z+, r20
    2568:	02 d0       	rcall	.+4      	; 0x256e <__ultoa_invert+0x84>
    256a:	a9 f7       	brne	.-22     	; 0x2556 <__ultoa_invert+0x6c>
    256c:	ea cf       	rjmp	.-44     	; 0x2542 <__ultoa_invert+0x58>
    256e:	b4 e0       	ldi	r27, 0x04	; 4
    2570:	a6 95       	lsr	r26
    2572:	97 95       	ror	r25
    2574:	87 95       	ror	r24
    2576:	77 95       	ror	r23
    2578:	67 95       	ror	r22
    257a:	ba 95       	dec	r27
    257c:	c9 f7       	brne	.-14     	; 0x2570 <__ultoa_invert+0x86>
    257e:	00 97       	sbiw	r24, 0x00	; 0
    2580:	61 05       	cpc	r22, r1
    2582:	71 05       	cpc	r23, r1
    2584:	08 95       	ret
    2586:	9b 01       	movw	r18, r22
    2588:	ac 01       	movw	r20, r24
    258a:	0a 2e       	mov	r0, r26
    258c:	06 94       	lsr	r0
    258e:	57 95       	ror	r21
    2590:	47 95       	ror	r20
    2592:	37 95       	ror	r19
    2594:	27 95       	ror	r18
    2596:	ba 95       	dec	r27
    2598:	c9 f7       	brne	.-14     	; 0x258c <__ultoa_invert+0xa2>
    259a:	62 0f       	add	r22, r18
    259c:	73 1f       	adc	r23, r19
    259e:	84 1f       	adc	r24, r20
    25a0:	95 1f       	adc	r25, r21
    25a2:	a0 1d       	adc	r26, r0
    25a4:	08 95       	ret

000025a6 <_exit>:
    25a6:	f8 94       	cli

000025a8 <__stop_program>:
    25a8:	ff cf       	rjmp	.-2      	; 0x25a8 <__stop_program>
